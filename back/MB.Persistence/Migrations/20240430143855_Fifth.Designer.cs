// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations;

[DbContext(typeof(Context))]
[Migration("20240430143855_Fifth")]
partial class Fifth
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.1")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("Pseudonym")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("EntityId");

                b.ToTable("Artists");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("238ba5e2-1887-427c-9a0b-8987fa768918"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6159),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6161),
                        ModifiedBy = "",
                        Name = "# Unknown Artist",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("2c9af4b0-31b6-4d18-8e56-8a96d54f8c77"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6171),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6172),
                        ModifiedBy = "",
                        Name = "/ Unknown 2D Animator",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("48302494-e95f-4a2d-acaf-bb3c704a93a9"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6175),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6176),
                        ModifiedBy = "",
                        Name = "/ Unknown 2D Illustrator",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("0c12ebaa-75b1-447b-9a67-6e8bbebd4bdf"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6198),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6199),
                        ModifiedBy = "",
                        Name = "/ Unknown 3D Animator",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("35b60bf7-88f5-43ea-9eeb-76cb8e3319f1"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6201),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6201),
                        ModifiedBy = "",
                        Name = "/ Unknown 3D Sculptor",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 6,
                        BusinessId = new Guid("91eafc9b-5c74-4dc8-8b96-d44d02ef10cd"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6206),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6206),
                        ModifiedBy = "",
                        Name = "/ Unknown A.I. User",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 7,
                        BusinessId = new Guid("8b3e2ef8-2de9-4350-a6e0-fa49313d9f4b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6208),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6209),
                        ModifiedBy = "",
                        Name = "/ Unknown Musician",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 8,
                        BusinessId = new Guid("5cb6b40e-1df5-4f4c-8153-4fd6862dc47c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6214),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6214),
                        ModifiedBy = "",
                        Name = "/ Unknown Photographer",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 9,
                        BusinessId = new Guid("0cff1b8e-1212-4750-b04e-47e4f1a7b31b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6217),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6217),
                        ModifiedBy = "",
                        Name = "/ Unknown Sculptor",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 10,
                        BusinessId = new Guid("08be7449-b335-4f71-a641-ea14b49e3d6c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6221),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6222),
                        ModifiedBy = "",
                        Name = "/ Unknown Videast",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 11,
                        BusinessId = new Guid("77642c29-ac64-4ed2-b832-bcd56215dcee"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6224),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6224),
                        ModifiedBy = "",
                        Name = "/ Unknown Writer",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 12,
                        BusinessId = new Guid("9be31343-88af-4d15-bfd7-07fb3fef59a4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6230),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6230),
                        ModifiedBy = "",
                        Name = "Flying PAD",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 13,
                        BusinessId = new Guid("3068c503-0994-45ee-bd1d-cb05aea69dc3"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6232),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6233),
                        ModifiedBy = "",
                        Name = "Soën9048",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 14,
                        BusinessId = new Guid("44e23d0c-c4b2-45c7-bb1f-dd96841fc5ac"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6235),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6235),
                        ModifiedBy = "",
                        Name = "CohesivePanda",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 15,
                        BusinessId = new Guid("63ee6597-c52f-4058-ac24-9e7624d8e65d"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6249),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6250),
                        ModifiedBy = "",
                        Name = "Nobuo Uematsu",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 16,
                        BusinessId = new Guid("6c0d61ba-0d05-46a0-9963-d0c755ca00c6"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6261),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6262),
                        ModifiedBy = "",
                        Name = "Eichiro Oda",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 17,
                        BusinessId = new Guid("f5a16caf-c5c0-4115-9194-e3a55b051004"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6264),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6264),
                        ModifiedBy = "",
                        Name = "Masashi Kishimoto",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 18,
                        BusinessId = new Guid("8be1eb0b-f888-4d5e-814e-78bba69c5892"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6268),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6268),
                        ModifiedBy = "",
                        Name = "Dali",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 19,
                        BusinessId = new Guid("16d5229a-8c90-448c-969e-b78905217b83"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6271),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6271),
                        ModifiedBy = "",
                        Name = "Yoko Shimomura",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 20,
                        BusinessId = new Guid("eda0b42f-30c0-45b7-b674-5df445fe9f41"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6276),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6276),
                        ModifiedBy = "",
                        Name = "Michael Jackson",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 21,
                        BusinessId = new Guid("0f7e0886-7d4b-43cf-934a-13e45af91f3f"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6279),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6279),
                        ModifiedBy = "",
                        Name = "CG5",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 22,
                        BusinessId = new Guid("66dd13a7-add6-44fb-9d42-400bd4313c56"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6281),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6282),
                        ModifiedBy = "",
                        Name = "TryHardNinja",
                        Pseudonym = ""
                    },
                    new
                    {
                        EntityId = 23,
                        BusinessId = new Guid("29bdb889-927c-460e-a9c4-593f352c21eb"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6284),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6284),
                        ModifiedBy = "",
                        Name = "Jacob Collier",
                        Pseudonym = ""
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Board", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("EntityId");

                b.ToTable("Boards");
            });

        modelBuilder.Entity("MB.Domain.Entities.Book", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("EntityId");

                b.ToTable("Books");
            });

        modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("EntityId");

                b.ToTable("Franchises");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("1ff54f5a-4d79-4b0b-8d6a-d916cd94f89c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7060),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7061),
                        ModifiedBy = "",
                        Name = "Flying PAD"
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("dd8d66e1-061a-4f12-a891-ad4d993715df"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7068),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7068),
                        ModifiedBy = "",
                        Name = "Street Fighter"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Link", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("EntityId");

                b.ToTable("Links");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("ac41f78c-964d-44ad-bd74-0f7d53f02a55"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7519),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7519),
                        ModifiedBy = "",
                        Name = "KVR",
                        Url = "https://www.kvraudio.com/"
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("e482862a-0de2-4692-a274-9a5b04dbd0ed"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7524),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7524),
                        ModifiedBy = "",
                        Name = "MuseScore",
                        Url = "https://musescore.com/"
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("c4202936-22dd-45d0-be87-e2a855bf55b7"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7527),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7527),
                        ModifiedBy = "",
                        Name = "Native Instruments",
                        Url = "https://www.native-instruments.com"
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("140d9469-7f21-4b27-b040-01d694dab266"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7533),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7533),
                        ModifiedBy = "",
                        Name = "Steinberg",
                        Url = "https://www.steinberg.net/"
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("afc994db-3f84-47d2-948c-43aad870d3b2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7535),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7536),
                        ModifiedBy = "",
                        Name = "Clés pour l'harmonie",
                        Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                    },
                    new
                    {
                        EntityId = 6,
                        BusinessId = new Guid("3318228d-56b1-4ce7-a5ce-7dc586c85acb"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7539),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7540),
                        ModifiedBy = "",
                        Name = "Google | Metronome",
                        Url = "https://www.google.com/search?q=metronome"
                    },
                    new
                    {
                        EntityId = 7,
                        BusinessId = new Guid("6df3ba41-f20c-4f47-a97c-0bf74bfd0602"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7542),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7542),
                        ModifiedBy = "",
                        Name = "Google | Stopwatch",
                        Url = "https://www.google.com/search?q=stopwatch"
                    },
                    new
                    {
                        EntityId = 8,
                        BusinessId = new Guid("6af89790-a3de-45d9-8025-58442c273aba"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7547),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7547),
                        ModifiedBy = "",
                        Name = "Google | Timer",
                        Url = "https://www.google.com/search?q=timer"
                    },
                    new
                    {
                        EntityId = 9,
                        BusinessId = new Guid("930b1ada-1a24-4471-b97c-9632ffff8498"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7549),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7549),
                        ModifiedBy = "",
                        Name = "Mangold Project",
                        Url = "https://www.youtube.com/@MangoldProject"
                    },
                    new
                    {
                        EntityId = 10,
                        BusinessId = new Guid("6eac8e29-6aac-4b81-97f3-cac1c4fc557b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7553),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7553),
                        ModifiedBy = "",
                        Name = "# YouTube",
                        Url = "https://www.youtube.com"
                    },
                    new
                    {
                        EntityId = 11,
                        BusinessId = new Guid("ff5fb38a-2f73-4959-bcbe-9b9c10be68a4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7555),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7555),
                        ModifiedBy = "",
                        Name = "Piano Jazz Concept",
                        Url = "https://www.youtube.com/@Pianojazzconcept"
                    },
                    new
                    {
                        EntityId = 12,
                        BusinessId = new Guid("3c9d9775-34f3-4bc4-85c4-ead2abf3718a"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7560),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7560),
                        ModifiedBy = "",
                        Name = "Rick Beato",
                        Url = "https://www.youtube.com/@RickBeato"
                    },
                    new
                    {
                        EntityId = 13,
                        BusinessId = new Guid("8c150f3b-1f16-472a-b0c6-dd7270ce2a54"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7562),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7563),
                        ModifiedBy = "",
                        Name = "Pianote",
                        Url = "https://www.youtube.com/@PianoteOfficial"
                    },
                    new
                    {
                        EntityId = 14,
                        BusinessId = new Guid("4267dfe1-5d12-4b87-ad14-cafc848dfd96"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7681),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7681),
                        ModifiedBy = "",
                        Name = "TryHardNinja",
                        Url = "https://www.youtube.com/@TryHardNinja"
                    },
                    new
                    {
                        EntityId = 15,
                        BusinessId = new Guid("5f467a18-8551-4bcb-bec0-f09ed526f742"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7685),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7685),
                        ModifiedBy = "",
                        Name = "Kyle Allen Music",
                        Url = "https://www.youtube.com/@KyleAllenMusic"
                    },
                    new
                    {
                        EntityId = 16,
                        BusinessId = new Guid("018ef7f3-8fcd-4470-9d47-3e480fd0d682"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7691),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7691),
                        ModifiedBy = "",
                        Name = "Ableton",
                        Url = "https://www.youtube.com/@Ableton"
                    },
                    new
                    {
                        EntityId = 17,
                        BusinessId = new Guid("74715159-9069-4c32-a07b-42efad6cd8af"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7693),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7693),
                        ModifiedBy = "",
                        Name = "La Machine à Mixer",
                        Url = "https://www.youtube.com/@lamachineamixer"
                    },
                    new
                    {
                        EntityId = 18,
                        BusinessId = new Guid("d5616ed0-68a7-4948-baba-436ebc16a248"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7698),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7699),
                        ModifiedBy = "",
                        Name = "Audiofanzine",
                        Url = "https://www.youtube.com/@audiofanzine"
                    },
                    new
                    {
                        EntityId = 19,
                        BusinessId = new Guid("1f2a70d6-7e27-4271-a806-bad9e0b23761"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7701),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7701),
                        ModifiedBy = "",
                        Name = "Cubase",
                        Url = "https://www.youtube.com/@Cubase"
                    },
                    new
                    {
                        EntityId = 20,
                        BusinessId = new Guid("c4a0e947-8aa8-4726-8bf5-31541cec8e23"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7706),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7706),
                        ModifiedBy = "",
                        Name = "Ten Second Songs",
                        Url = "https://www.youtube.com/@TenSecondSongs"
                    },
                    new
                    {
                        EntityId = 21,
                        BusinessId = new Guid("b1bcf762-2d90-4ee4-b399-ca1cec04985e"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7708),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7708),
                        ModifiedBy = "",
                        Name = "The Piano Guys",
                        Url = "https://www.youtube.com/@thepianoguys"
                    },
                    new
                    {
                        EntityId = 22,
                        BusinessId = new Guid("49e89abd-7298-402b-a095-e761a23eab05"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7710),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7711),
                        ModifiedBy = "",
                        Name = "CG5",
                        Url = "https://www.youtube.com/@CG5"
                    },
                    new
                    {
                        EntityId = 23,
                        BusinessId = new Guid("7011d05e-a9cd-4c4a-befd-8786cab1e6ea"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7713),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7713),
                        ModifiedBy = "",
                        Name = "Native Instruments",
                        Url = "https://www.youtube.com/@NativeInstruments"
                    },
                    new
                    {
                        EntityId = 24,
                        BusinessId = new Guid("3ffaabc7-8634-4893-9b43-533a9906e729"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7718),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7718),
                        ModifiedBy = "",
                        Name = "Ken Tamplin Vocal Academy",
                        Url = "https://www.youtube.com/@kentamplin"
                    },
                    new
                    {
                        EntityId = 25,
                        BusinessId = new Guid("5d7e06d6-75b5-4103-8bfc-8cd5d99b016e"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7720),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7720),
                        ModifiedBy = "",
                        Name = "Pentatonix",
                        Url = "https://www.youtube.com/@PTXofficial"
                    },
                    new
                    {
                        EntityId = 26,
                        BusinessId = new Guid("1fcccd82-f6e5-496b-84cb-a119feba714b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7723),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7723),
                        ModifiedBy = "",
                        Name = "Recording Revolution",
                        Url = "https://www.youtube.com/@recordingrevolution"
                    },
                    new
                    {
                        EntityId = 27,
                        BusinessId = new Guid("05de15d8-931f-4de4-9e05-d8e10b7df7ca"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7725),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7725),
                        ModifiedBy = "",
                        Name = "Jacob Collier",
                        Url = "https://www.youtube.com/@jacobcollier"
                    },
                    new
                    {
                        EntityId = 28,
                        BusinessId = new Guid("36bf6001-8ad2-44e4-a6bc-01655a6564b5"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7730),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7730),
                        ModifiedBy = "",
                        Name = "Orchestration Online",
                        Url = "https://www.youtube.com/@OrchestrationOnline"
                    },
                    new
                    {
                        EntityId = 29,
                        BusinessId = new Guid("1cc8289e-924e-41e6-8da7-e18d0554f9a8"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7732),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7733),
                        ModifiedBy = "",
                        Name = "Nuendo",
                        Url = "https://www.youtube.com/@Nuendo"
                    },
                    new
                    {
                        EntityId = 30,
                        BusinessId = new Guid("c66e0945-c6a0-44c7-b6e5-a9392c1282fd"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7735),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7735),
                        ModifiedBy = "",
                        Name = "reFX",
                        Url = "https://www.youtube.com/@reFXaudio"
                    },
                    new
                    {
                        EntityId = 31,
                        BusinessId = new Guid("c08b25c9-337d-42cf-a2ca-08fc1af9a2b6"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7737),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7737),
                        ModifiedBy = "",
                        Name = "Steinberg",
                        Url = "https://www.youtube.com/@steinberg"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("EntityId");

                b.ToTable("LinkCategories");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("8e98ba8d-f649-40b2-8464-5642889954f0"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7851),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7851),
                        ModifiedBy = "",
                        Name = "Audio"
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("4031da97-b3e8-4ba0-8433-e02441cf23aa"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7856),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7856),
                        ModifiedBy = "",
                        Name = "Audio | Mix & Master"
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("c356448c-bea5-40f9-8814-e27ee1640bbb"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7859),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7859),
                        ModifiedBy = "",
                        Name = "Audio | Sound Design"
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("8af70f41-4129-4d1c-bfd4-d1b1ac361102"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7862),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7863),
                        ModifiedBy = "",
                        Name = "Books"
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("df1a1930-a069-427f-ae22-2dc6fc1c2f43"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7868),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7868),
                        ModifiedBy = "",
                        Name = "Books | Harmony"
                    },
                    new
                    {
                        EntityId = 6,
                        BusinessId = new Guid("bf21d211-e5f7-41b8-9bf1-4f6869a48369"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7871),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7871),
                        ModifiedBy = "",
                        Name = "Software"
                    },
                    new
                    {
                        EntityId = 7,
                        BusinessId = new Guid("82da9195-00d7-43be-90b3-703d94220108"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7873),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7874),
                        ModifiedBy = "",
                        Name = "Software | D.A.W."
                    },
                    new
                    {
                        EntityId = 8,
                        BusinessId = new Guid("a9860e4b-b852-46e9-810f-75379c84a661"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7876),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7876),
                        ModifiedBy = "",
                        Name = "Software | V.S.T."
                    },
                    new
                    {
                        EntityId = 9,
                        BusinessId = new Guid("37790adf-9747-4f00-8eb9-3ff37f5409ad"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7880),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7881),
                        ModifiedBy = "",
                        Name = "Software | Music Notation"
                    },
                    new
                    {
                        EntityId = 10,
                        BusinessId = new Guid("a151e43c-212d-43ff-b5bb-4ce97cc4ad9a"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7884),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7884),
                        ModifiedBy = "",
                        Name = "Tools"
                    },
                    new
                    {
                        EntityId = 11,
                        BusinessId = new Guid("f744c402-d461-4bf0-b0dd-8f8a35e9151f"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7886),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7886),
                        ModifiedBy = "",
                        Name = "Tools | Global"
                    },
                    new
                    {
                        EntityId = 12,
                        BusinessId = new Guid("36c7c12b-7674-4bfa-aadd-3f99f5dce4ca"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7888),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7889),
                        ModifiedBy = "",
                        Name = "YouTube"
                    },
                    new
                    {
                        EntityId = 13,
                        BusinessId = new Guid("b7ac1f2a-f8d2-4cc4-b497-6e4ee8c71cbd"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7893),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7893),
                        ModifiedBy = "",
                        Name = "YouTube | Artists"
                    },
                    new
                    {
                        EntityId = 14,
                        BusinessId = new Guid("a8721cc2-3405-4ccc-8ffe-a5ea48257285"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7895),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7895),
                        ModifiedBy = "",
                        Name = "YouTube | Audio"
                    },
                    new
                    {
                        EntityId = 15,
                        BusinessId = new Guid("b28f92cb-3e54-4fb0-ac16-c010d1c142fd"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7897),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7898),
                        ModifiedBy = "",
                        Name = "YouTube | Piano & Keys"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Media", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("EntityId");

                b.ToTable("Medias");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("bafb49d1-da34-42d5-a5e3-5f4b8bd5318d"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7188),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7188),
                        ModifiedBy = "",
                        Name = "# Unrelated"
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("3a17fc51-bc84-4d8e-be5f-bc7898f2b904"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7195),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7195),
                        ModifiedBy = "",
                        Name = "# Unknown"
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("844728bd-8c04-4c17-b89b-a56976dc8002"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7198),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7198),
                        ModifiedBy = "",
                        Name = "# Super Franchise"
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("47d095f9-5647-47bf-bc5c-0a67568d12d7"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7200),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7200),
                        ModifiedBy = "",
                        Name = "TV"
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("93f71c15-6476-47b4-a8fa-fb53d6a63106"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7206),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7207),
                        ModifiedBy = "",
                        Name = "Radio"
                    },
                    new
                    {
                        EntityId = 6,
                        BusinessId = new Guid("88a9b80e-657c-4bd5-91ea-ac7d38f75aa8"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7212),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7213),
                        ModifiedBy = "",
                        Name = "YouTube"
                    },
                    new
                    {
                        EntityId = 7,
                        BusinessId = new Guid("e903bc06-47fd-4742-b6d6-445e5e4be96a"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7215),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7215),
                        ModifiedBy = "",
                        Name = "Capcom"
                    },
                    new
                    {
                        EntityId = 8,
                        BusinessId = new Guid("826fd663-dbc0-4288-a167-6b63b216ade2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7217),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7217),
                        ModifiedBy = "",
                        Name = "Square-Enix"
                    },
                    new
                    {
                        EntityId = 9,
                        BusinessId = new Guid("810e894c-9b5c-4c71-8461-a3ff73c721b4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7222),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(7222),
                        ModifiedBy = "",
                        Name = "Flying PAD"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Model", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("Gender")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Pseudonym")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("EntityId");

                b.ToTable("Models");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("83abf3a0-fbdb-4da1-b7b8-cd4133b83a54"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8167),
                        CreatedBy = "",
                        Description = "",
                        FirstName = "",
                        Gender = "",
                        LastName = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8168),
                        ModifiedBy = "",
                        Pseudonym = "# Unknown Model"
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("a1ab384d-b9b0-4eac-ba4d-935c2c162381"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8177),
                        CreatedBy = "",
                        Description = "",
                        FirstName = "",
                        Gender = "",
                        LastName = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8177),
                        ModifiedBy = "",
                        Pseudonym = "/ Unrelated Model"
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("e2160379-702e-49dc-88d9-d404e07d0c13"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8180),
                        CreatedBy = "",
                        Description = "",
                        FirstName = "Tony",
                        Gender = "M",
                        LastName = "Van Langenhove",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8180),
                        ModifiedBy = "",
                        Pseudonym = "Flying PAD"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Discriminator")
                    .IsRequired()
                    .HasMaxLength(13)
                    .HasColumnType("nvarchar(13)");

                b.Property<string>("Extension")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<int>("Score")
                    .HasColumnType("int");

                b.Property<int>("Type")
                    .HasColumnType("int");

                b.HasKey("EntityId");

                b.ToTable("Moods");

                b.HasDiscriminator<string>("Discriminator").HasValue("Mood");

                b.UseTphMappingStrategy();
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
            {
                b.Property<int>("ArtistId")
                    .HasColumnType("int");

                b.Property<int>("StyleId")
                    .HasColumnType("int");

                b.HasKey("ArtistId", "StyleId");

                b.HasIndex("StyleId");

                b.ToTable("RArtistStyle");

                b.HasData(
                    new
                    {
                        ArtistId = 12,
                        StyleId = 7
                    },
                    new
                    {
                        ArtistId = 12,
                        StyleId = 9
                    },
                    new
                    {
                        ArtistId = 13,
                        StyleId = 9
                    },
                    new
                    {
                        ArtistId = 14,
                        StyleId = 9
                    },
                    new
                    {
                        ArtistId = 15,
                        StyleId = 9
                    },
                    new
                    {
                        ArtistId = 16,
                        StyleId = 6
                    },
                    new
                    {
                        ArtistId = 17,
                        StyleId = 6
                    },
                    new
                    {
                        ArtistId = 18,
                        StyleId = 1
                    },
                    new
                    {
                        ArtistId = 19,
                        StyleId = 2
                    },
                    new
                    {
                        ArtistId = 20,
                        StyleId = 7
                    },
                    new
                    {
                        ArtistId = 21,
                        StyleId = 7
                    },
                    new
                    {
                        ArtistId = 22,
                        StyleId = 7
                    },
                    new
                    {
                        ArtistId = 23,
                        StyleId = 7
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationBookFranchise", b =>
            {
                b.Property<int>("BookId")
                    .HasColumnType("int");

                b.Property<int>("FranchiseId")
                    .HasColumnType("int");

                b.HasKey("BookId", "FranchiseId");

                b.HasIndex("FranchiseId");

                b.ToTable("RBookFranchise");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationBookModel", b =>
            {
                b.Property<int>("BookId")
                    .HasColumnType("int");

                b.Property<int>("ModelId")
                    .HasColumnType("int");

                b.HasKey("BookId", "ModelId");

                b.HasIndex("ModelId");

                b.ToTable("RBookModel");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
            {
                b.Property<int>("FranchiseId")
                    .HasColumnType("int");

                b.Property<int>("MediaId")
                    .HasColumnType("int");

                b.HasKey("FranchiseId", "MediaId");

                b.HasIndex("MediaId");

                b.ToTable("RFranchiseMedia");

                b.HasData(
                    new
                    {
                        FranchiseId = 1,
                        MediaId = 9
                    },
                    new
                    {
                        FranchiseId = 2,
                        MediaId = 7
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
            {
                b.Property<int>("FranchiseId")
                    .HasColumnType("int");

                b.Property<int>("ModelId")
                    .HasColumnType("int");

                b.HasKey("FranchiseId", "ModelId");

                b.HasIndex("ModelId");

                b.ToTable("RFranchiseModel");

                b.HasData(
                    new
                    {
                        FranchiseId = 1,
                        ModelId = 3
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
            {
                b.Property<int>("LinkId")
                    .HasColumnType("int");

                b.Property<int>("ArtistId")
                    .HasColumnType("int");

                b.HasKey("LinkId", "ArtistId");

                b.HasIndex("ArtistId");

                b.ToTable("RLinkArtist");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
            {
                b.Property<int>("LinkId")
                    .HasColumnType("int");

                b.Property<int>("LinkCategoryId")
                    .HasColumnType("int");

                b.HasKey("LinkId", "LinkCategoryId");

                b.HasIndex("LinkCategoryId");

                b.ToTable("RLinkCategory");

                b.HasData(
                    new
                    {
                        LinkId = 1,
                        LinkCategoryId = 1
                    },
                    new
                    {
                        LinkId = 1,
                        LinkCategoryId = 8
                    },
                    new
                    {
                        LinkId = 2,
                        LinkCategoryId = 6
                    },
                    new
                    {
                        LinkId = 2,
                        LinkCategoryId = 9
                    },
                    new
                    {
                        LinkId = 3,
                        LinkCategoryId = 6
                    },
                    new
                    {
                        LinkId = 3,
                        LinkCategoryId = 8
                    },
                    new
                    {
                        LinkId = 4,
                        LinkCategoryId = 6
                    },
                    new
                    {
                        LinkId = 5,
                        LinkCategoryId = 4
                    },
                    new
                    {
                        LinkId = 5,
                        LinkCategoryId = 5
                    },
                    new
                    {
                        LinkId = 6,
                        LinkCategoryId = 10
                    },
                    new
                    {
                        LinkId = 7,
                        LinkCategoryId = 10
                    },
                    new
                    {
                        LinkId = 8,
                        LinkCategoryId = 10
                    },
                    new
                    {
                        LinkId = 9,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 9,
                        LinkCategoryId = 15
                    },
                    new
                    {
                        LinkId = 10,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 11,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 11,
                        LinkCategoryId = 15
                    },
                    new
                    {
                        LinkId = 12,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 13,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 14,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 14,
                        LinkCategoryId = 13
                    },
                    new
                    {
                        LinkId = 15,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 16,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 17,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 18,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 19,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 20,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 21,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 22,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 23,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 24,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 25,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 26,
                        LinkCategoryId = 1
                    },
                    new
                    {
                        LinkId = 26,
                        LinkCategoryId = 2
                    },
                    new
                    {
                        LinkId = 26,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 26,
                        LinkCategoryId = 14
                    },
                    new
                    {
                        LinkId = 27,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 27,
                        LinkCategoryId = 13
                    },
                    new
                    {
                        LinkId = 28,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 29,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 30,
                        LinkCategoryId = 12
                    },
                    new
                    {
                        LinkId = 31,
                        LinkCategoryId = 12
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
            {
                b.Property<int>("LinkId")
                    .HasColumnType("int");

                b.Property<int>("ModelId")
                    .HasColumnType("int");

                b.HasKey("LinkId", "ModelId");

                b.HasIndex("ModelId");

                b.ToTable("RLinkModel");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
            {
                b.Property<int>("MoodId")
                    .HasColumnType("int");

                b.Property<int>("ArtistId")
                    .HasColumnType("int");

                b.HasKey("MoodId", "ArtistId");

                b.HasIndex("ArtistId");

                b.ToTable("RMoodArtist");

                b.HasData(
                    new
                    {
                        MoodId = 1,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 2,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 3,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 4,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 5,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 6,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 7,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 8,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 9,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 10,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 11,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 12,
                        ArtistId = 12
                    },
                    new
                    {
                        MoodId = 13,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 14,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 15,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 16,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 17,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 18,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 19,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 20,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 21,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 22,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 23,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 55,
                        ArtistId = 1
                    },
                    new
                    {
                        MoodId = 85,
                        ArtistId = 1
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
            {
                b.Property<int>("MoodId")
                    .HasColumnType("int");

                b.Property<int>("FranchiseId")
                    .HasColumnType("int");

                b.HasKey("MoodId", "FranchiseId");

                b.HasIndex("FranchiseId");

                b.ToTable("RMoodFranchise");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
            {
                b.Property<int>("MoodId")
                    .HasColumnType("int");

                b.Property<int>("ModelId")
                    .HasColumnType("int");

                b.HasKey("MoodId", "ModelId");

                b.HasIndex("ModelId");

                b.ToTable("RMoodModel");

                b.HasData(
                    new
                    {
                        MoodId = 1,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 2,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 3,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 4,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 5,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 6,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 7,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 8,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 9,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 10,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 11,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 12,
                        ModelId = 3
                    },
                    new
                    {
                        MoodId = 13,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 14,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 15,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 16,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 17,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 18,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 19,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 20,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 21,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 22,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 23,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 55,
                        ModelId = 1
                    },
                    new
                    {
                        MoodId = 85,
                        ModelId = 1
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
            {
                b.Property<int>("MoodId")
                    .HasColumnType("int");

                b.Property<int>("TagId")
                    .HasColumnType("int");

                b.HasKey("MoodId", "TagId");

                b.HasIndex("TagId");

                b.ToTable("RMoodTag");

                b.HasData(
                    new
                    {
                        MoodId = 1,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 1,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 1,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 1,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 1,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 2,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 2,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 2,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 2,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 2,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 2,
                        TagId = 59
                    },
                    new
                    {
                        MoodId = 3,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 3,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 3,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 3,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 3,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 3,
                        TagId = 43
                    },
                    new
                    {
                        MoodId = 4,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 4,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 4,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 4,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 4,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 4,
                        TagId = 59
                    },
                    new
                    {
                        MoodId = 5,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 5,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 5,
                        TagId = 11
                    },
                    new
                    {
                        MoodId = 5,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 5,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 6,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 6,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 6,
                        TagId = 11
                    },
                    new
                    {
                        MoodId = 6,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 6,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 7,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 7,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 7,
                        TagId = 12
                    },
                    new
                    {
                        MoodId = 7,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 7,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 8,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 8,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 8,
                        TagId = 11
                    },
                    new
                    {
                        MoodId = 8,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 8,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 8,
                        TagId = 59
                    },
                    new
                    {
                        MoodId = 9,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 9,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 9,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 9,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 9,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 9,
                        TagId = 43
                    },
                    new
                    {
                        MoodId = 10,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 10,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 10,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 10,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 10,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 10,
                        TagId = 43
                    },
                    new
                    {
                        MoodId = 11,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 11,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 11,
                        TagId = 8
                    },
                    new
                    {
                        MoodId = 11,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 11,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 12,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 12,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 12,
                        TagId = 11
                    },
                    new
                    {
                        MoodId = 12,
                        TagId = 19
                    },
                    new
                    {
                        MoodId = 12,
                        TagId = 34
                    },
                    new
                    {
                        MoodId = 13,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 13,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 13,
                        TagId = 9
                    },
                    new
                    {
                        MoodId = 13,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 13,
                        TagId = 58
                    },
                    new
                    {
                        MoodId = 14,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 14,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 14,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 14,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 14,
                        TagId = 59
                    },
                    new
                    {
                        MoodId = 15,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 15,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 15,
                        TagId = 9
                    },
                    new
                    {
                        MoodId = 15,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 16,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 16,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 16,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 16,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 16,
                        TagId = 43
                    },
                    new
                    {
                        MoodId = 17,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 17,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 17,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 17,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 17,
                        TagId = 43
                    },
                    new
                    {
                        MoodId = 18,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 18,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 18,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 18,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 19,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 19,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 19,
                        TagId = 12
                    },
                    new
                    {
                        MoodId = 19,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 20,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 20,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 20,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 20,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 20,
                        TagId = 59
                    },
                    new
                    {
                        MoodId = 21,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 21,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 21,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 21,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 22,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 22,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 22,
                        TagId = 10
                    },
                    new
                    {
                        MoodId = 22,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 22,
                        TagId = 59
                    },
                    new
                    {
                        MoodId = 23,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 23,
                        TagId = 4
                    },
                    new
                    {
                        MoodId = 23,
                        TagId = 11
                    },
                    new
                    {
                        MoodId = 23,
                        TagId = 17
                    },
                    new
                    {
                        MoodId = 55,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 55,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 55,
                        TagId = 16
                    },
                    new
                    {
                        MoodId = 55,
                        TagId = 43
                    },
                    new
                    {
                        MoodId = 85,
                        TagId = 1
                    },
                    new
                    {
                        MoodId = 85,
                        TagId = 15
                    },
                    new
                    {
                        MoodId = 85,
                        TagId = 16
                    },
                    new
                    {
                        MoodId = 85,
                        TagId = 43
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Style", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("EntityId");

                b.ToTable("Styles");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("c49ea46a-ad2e-4b90-9bf2-e48bb5ae11f9"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6578),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6579),
                        ModifiedBy = "",
                        Name = "2D"
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("84a886b3-bd34-4dce-9318-9c9906b274cf"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6585),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6585),
                        ModifiedBy = "",
                        Name = "2D Animation"
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("0ba166cd-2e8c-4cd8-832e-c29e73e25a19"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6588),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6588),
                        ModifiedBy = "",
                        Name = "3D"
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("2352afd4-86f7-444e-a567-41896afb5821"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6635),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6636),
                        ModifiedBy = "",
                        Name = "3D Animation"
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("127a795e-7a9a-493c-80b6-00a4faae75d4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6643),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6644),
                        ModifiedBy = "",
                        Name = "Architecture"
                    },
                    new
                    {
                        EntityId = 6,
                        BusinessId = new Guid("65849a20-36b0-4f53-a0f4-f2ac01314511"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6648),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6648),
                        ModifiedBy = "",
                        Name = "Writer"
                    },
                    new
                    {
                        EntityId = 7,
                        BusinessId = new Guid("d1172649-3f84-4679-9c5a-d23b0cb32359"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6651),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6651),
                        ModifiedBy = "",
                        Name = "Music"
                    },
                    new
                    {
                        EntityId = 8,
                        BusinessId = new Guid("dfa0f128-46c9-4fd2-8703-ad0ba1c71660"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6653),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6653),
                        ModifiedBy = "",
                        Name = "Photo"
                    },
                    new
                    {
                        EntityId = 9,
                        BusinessId = new Guid("7a867a4c-b2de-4d83-8e6b-6522438acee2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6658),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6659),
                        ModifiedBy = "",
                        Name = "Video"
                    },
                    new
                    {
                        EntityId = 10,
                        BusinessId = new Guid("a8c2f6ce-0e2a-4856-ab23-d124c9e15cc6"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6662),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(6662),
                        ModifiedBy = "",
                        Name = "Video Games"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<int>("TagCategoryId")
                    .HasColumnType("int");

                b.HasKey("EntityId");

                b.HasIndex("TagCategoryId");

                b.ToTable("Tags");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("cc7a9a57-f83e-4963-aedd-cc0aeff6a79c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9114),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9114),
                        ModifiedBy = "",
                        Name = "# All Files",
                        TagCategoryId = 1
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("bdfc90f2-4c20-499f-80e6-6d8c8eff115c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9124),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9124),
                        ModifiedBy = "",
                        Name = "Audio",
                        TagCategoryId = 2
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("e3ba890d-bfbc-4f9e-9fcd-3772f933be66"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9127),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9127),
                        ModifiedBy = "",
                        Name = "Document",
                        TagCategoryId = 2
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("3ad94217-13eb-4d85-aa7a-5e9f701a78ed"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9130),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9130),
                        ModifiedBy = "",
                        Name = "Image",
                        TagCategoryId = 2
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("bc059fe8-4c5a-4172-8c29-15660c00e0b2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9132),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9132),
                        ModifiedBy = "",
                        Name = "Video",
                        TagCategoryId = 2
                    },
                    new
                    {
                        EntityId = 6,
                        BusinessId = new Guid("344a4603-de54-4f3f-8107-d700270747b3"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9137),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9138),
                        ModifiedBy = "",
                        Name = "*.txt",
                        TagCategoryId = 3
                    },
                    new
                    {
                        EntityId = 7,
                        BusinessId = new Guid("6533e436-0789-4962-ae00-628cd37024ed"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9140),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9140),
                        ModifiedBy = "",
                        Name = "*.bmp",
                        TagCategoryId = 4
                    },
                    new
                    {
                        EntityId = 8,
                        BusinessId = new Guid("07d1e470-d204-4c44-a246-82a7401db210"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9142),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9143),
                        ModifiedBy = "",
                        Name = "*.gif",
                        TagCategoryId = 4
                    },
                    new
                    {
                        EntityId = 9,
                        BusinessId = new Guid("88624a9a-64d7-4280-b089-80d378d43773"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9145),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9145),
                        ModifiedBy = "",
                        Name = "*.jpeg",
                        TagCategoryId = 4
                    },
                    new
                    {
                        EntityId = 10,
                        BusinessId = new Guid("8e12b29d-8b7e-4492-8dc5-f20d223fe8af"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9151),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9151),
                        ModifiedBy = "",
                        Name = "*.jpg",
                        TagCategoryId = 4
                    },
                    new
                    {
                        EntityId = 11,
                        BusinessId = new Guid("8bd64f4e-5095-4a6d-a319-945d755f7abf"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9154),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9154),
                        ModifiedBy = "",
                        Name = "*.png",
                        TagCategoryId = 4
                    },
                    new
                    {
                        EntityId = 12,
                        BusinessId = new Guid("97c1e952-a782-4ab0-804e-8672a9f62106"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9156),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9157),
                        ModifiedBy = "",
                        Name = "*.webp",
                        TagCategoryId = 4
                    },
                    new
                    {
                        EntityId = 13,
                        BusinessId = new Guid("f8de9d2d-4680-4406-860e-dcc54a93c5c7"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9159),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9159),
                        ModifiedBy = "",
                        Name = "*.mp4",
                        TagCategoryId = 5
                    },
                    new
                    {
                        EntityId = 14,
                        BusinessId = new Guid("758fa8cd-3c21-4e61-8a94-b962062b9dd2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9163),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9163),
                        ModifiedBy = "",
                        Name = "*.webm",
                        TagCategoryId = 5
                    },
                    new
                    {
                        EntityId = 15,
                        BusinessId = new Guid("e0f02d8f-2593-42d8-8cde-b786703be79c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9208),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9208),
                        ModifiedBy = "",
                        Name = "Landscape",
                        TagCategoryId = 6
                    },
                    new
                    {
                        EntityId = 16,
                        BusinessId = new Guid("ac5f134f-de8f-42b1-9dc4-014f95dc6f88"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9210),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9211),
                        ModifiedBy = "",
                        Name = "Landscape ( 16:9 )",
                        TagCategoryId = 6
                    },
                    new
                    {
                        EntityId = 17,
                        BusinessId = new Guid("05299acc-e4a0-4e31-b01c-f62ae17c89a4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9214),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9214),
                        ModifiedBy = "",
                        Name = "Portrait",
                        TagCategoryId = 6
                    },
                    new
                    {
                        EntityId = 18,
                        BusinessId = new Guid("50de37df-5dce-4eb4-b276-cf85bb8aed32"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9221),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9221),
                        ModifiedBy = "",
                        Name = "Portrait ( 16:9 )",
                        TagCategoryId = 6
                    },
                    new
                    {
                        EntityId = 19,
                        BusinessId = new Guid("6f624c1d-20b3-400e-ac6b-651e5ce4516d"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9224),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9224),
                        ModifiedBy = "",
                        Name = "Square",
                        TagCategoryId = 6
                    },
                    new
                    {
                        EntityId = 20,
                        BusinessId = new Guid("9f9cf2fb-e5fa-4096-9c7a-d8bcdc2cf89e"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9226),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9226),
                        ModifiedBy = "",
                        Name = "2D",
                        TagCategoryId = 7
                    },
                    new
                    {
                        EntityId = 21,
                        BusinessId = new Guid("0dd38b2f-7039-4c0a-b23a-6dd92ff186ce"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9229),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9229),
                        ModifiedBy = "",
                        Name = "2D | Anim",
                        TagCategoryId = 7
                    },
                    new
                    {
                        EntityId = 22,
                        BusinessId = new Guid("93849aad-a843-46c3-b6e0-7850c91728f3"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9234),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9234),
                        ModifiedBy = "",
                        Name = "3D",
                        TagCategoryId = 7
                    },
                    new
                    {
                        EntityId = 23,
                        BusinessId = new Guid("7c2f0450-c8d9-4783-b931-85608f259d67"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9236),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9236),
                        ModifiedBy = "",
                        Name = "3D | Anim",
                        TagCategoryId = 7
                    },
                    new
                    {
                        EntityId = 24,
                        BusinessId = new Guid("ab16b318-6301-443c-8797-d704cf02f453"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9238),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9239),
                        ModifiedBy = "",
                        Name = "Photo",
                        TagCategoryId = 7
                    },
                    new
                    {
                        EntityId = 25,
                        BusinessId = new Guid("fb12a00c-6843-4c0e-8cf3-bb2f98058c0c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9241),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9241),
                        ModifiedBy = "",
                        Name = "Photo | Anim",
                        TagCategoryId = 7
                    },
                    new
                    {
                        EntityId = 26,
                        BusinessId = new Guid("ff756c7c-dcd1-4f0f-8175-b99acfdd061f"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9245),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9246),
                        ModifiedBy = "",
                        Name = "E.D.M.",
                        TagCategoryId = 8
                    },
                    new
                    {
                        EntityId = 27,
                        BusinessId = new Guid("a3dd067a-d9eb-4578-a0e8-30e1cdc9b00b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9248),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9248),
                        ModifiedBy = "",
                        Name = "Jazz",
                        TagCategoryId = 8
                    },
                    new
                    {
                        EntityId = 28,
                        BusinessId = new Guid("eafd1844-d24a-4083-86da-50528572890b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9250),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9250),
                        ModifiedBy = "",
                        Name = "Metal",
                        TagCategoryId = 8
                    },
                    new
                    {
                        EntityId = 29,
                        BusinessId = new Guid("918dd03f-aefb-4cc3-a26b-212fdebca6d2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9252),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9253),
                        ModifiedBy = "",
                        Name = "Orchestral",
                        TagCategoryId = 8
                    },
                    new
                    {
                        EntityId = 30,
                        BusinessId = new Guid("b32c9bca-2a3b-4689-b37d-2d69b4697503"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9257),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9257),
                        ModifiedBy = "",
                        Name = "Pop Music",
                        TagCategoryId = 8
                    },
                    new
                    {
                        EntityId = 31,
                        BusinessId = new Guid("10658728-b65b-4fad-a1cf-779e4130baaf"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9259),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9260),
                        ModifiedBy = "",
                        Name = "Rap",
                        TagCategoryId = 8
                    },
                    new
                    {
                        EntityId = 32,
                        BusinessId = new Guid("c19d4624-6d6d-41ba-aed7-23383c9c5d32"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9262),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9262),
                        ModifiedBy = "",
                        Name = "Rock",
                        TagCategoryId = 8
                    },
                    new
                    {
                        EntityId = 33,
                        BusinessId = new Guid("8b8027e8-846d-4a3a-ba86-b33f4ab9207c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9264),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9264),
                        ModifiedBy = "",
                        Name = "Traditional",
                        TagCategoryId = 8
                    },
                    new
                    {
                        EntityId = 34,
                        BusinessId = new Guid("65550dbd-030e-4169-b7d7-5024dd34c71f"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9270),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9270),
                        ModifiedBy = "",
                        Name = "# Music Theory",
                        TagCategoryId = 9
                    },
                    new
                    {
                        EntityId = 35,
                        BusinessId = new Guid("0e01dc0f-2085-498a-8f85-8efbd4466f6c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9272),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9273),
                        ModifiedBy = "",
                        Name = "# Harmony",
                        TagCategoryId = 9
                    },
                    new
                    {
                        EntityId = 36,
                        BusinessId = new Guid("1d886b8e-1423-4e0a-9417-bfbc5c4f16d1"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9275),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9275),
                        ModifiedBy = "",
                        Name = "Chords",
                        TagCategoryId = 9
                    },
                    new
                    {
                        EntityId = 37,
                        BusinessId = new Guid("7bad02e6-029b-4168-8618-8ff5179f18eb"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9277),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9277),
                        ModifiedBy = "",
                        Name = "Harmonics",
                        TagCategoryId = 9
                    },
                    new
                    {
                        EntityId = 38,
                        BusinessId = new Guid("81ed8ab5-4a3f-4c53-8a74-999935888048"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9282),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9283),
                        ModifiedBy = "",
                        Name = "Intervals",
                        TagCategoryId = 9
                    },
                    new
                    {
                        EntityId = 39,
                        BusinessId = new Guid("ac6cbd4c-d6d3-4abf-aab4-59792e9928e7"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9285),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9285),
                        ModifiedBy = "",
                        Name = "Rythm",
                        TagCategoryId = 9
                    },
                    new
                    {
                        EntityId = 40,
                        BusinessId = new Guid("573680ea-2bcc-4164-ad5f-2090f89d996b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9287),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9287),
                        ModifiedBy = "",
                        Name = "Scales",
                        TagCategoryId = 9
                    },
                    new
                    {
                        EntityId = 41,
                        BusinessId = new Guid("31e9cb4b-570b-497d-885e-cc5733ea4e24"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9290),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9290),
                        ModifiedBy = "",
                        Name = "Modes",
                        TagCategoryId = 9
                    },
                    new
                    {
                        EntityId = 42,
                        BusinessId = new Guid("b56a24b2-349c-480c-82c8-44554ea95e8d"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9294),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9294),
                        ModifiedBy = "",
                        Name = "# Keys",
                        TagCategoryId = 10
                    },
                    new
                    {
                        EntityId = 43,
                        BusinessId = new Guid("91c2d23c-ad95-4c18-bfaa-c1204952e4f6"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9297),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9297),
                        ModifiedBy = "",
                        Name = "Piano",
                        TagCategoryId = 10
                    },
                    new
                    {
                        EntityId = 44,
                        BusinessId = new Guid("62d7df7c-e4a5-4b72-846f-8c6e6e51c130"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9299),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9299),
                        ModifiedBy = "",
                        Name = "# Brass",
                        TagCategoryId = 11
                    },
                    new
                    {
                        EntityId = 45,
                        BusinessId = new Guid("4f2b0e54-c47d-474d-9422-b4b8a2dbf864"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9301),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9302),
                        ModifiedBy = "",
                        Name = "Trombone",
                        TagCategoryId = 11
                    },
                    new
                    {
                        EntityId = 46,
                        BusinessId = new Guid("a15605cf-2519-41d4-bf14-b6f641032357"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9306),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9306),
                        ModifiedBy = "",
                        Name = "# Strings",
                        TagCategoryId = 12
                    },
                    new
                    {
                        EntityId = 47,
                        BusinessId = new Guid("b4b39f2b-ec68-44d5-ad03-69e5bbb4a165"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9308),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9308),
                        ModifiedBy = "",
                        Name = "Violin",
                        TagCategoryId = 12
                    },
                    new
                    {
                        EntityId = 48,
                        BusinessId = new Guid("1f6b0913-aaf6-4d21-a056-999cbe1be5b3"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9311),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9311),
                        ModifiedBy = "",
                        Name = "# Percussions",
                        TagCategoryId = 13
                    },
                    new
                    {
                        EntityId = 49,
                        BusinessId = new Guid("ae4e3b41-08af-4933-965b-8898e892a31b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9313),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9313),
                        ModifiedBy = "",
                        Name = "Drums",
                        TagCategoryId = 13
                    },
                    new
                    {
                        EntityId = 50,
                        BusinessId = new Guid("65ea7050-c8fb-47a9-9973-cf8436b0e839"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9317),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9318),
                        ModifiedBy = "",
                        Name = "# Woodwinds",
                        TagCategoryId = 14
                    },
                    new
                    {
                        EntityId = 51,
                        BusinessId = new Guid("92d2c463-9996-45a1-8680-e7458d965077"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9320),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9320),
                        ModifiedBy = "",
                        Name = "Clarinet",
                        TagCategoryId = 14
                    },
                    new
                    {
                        EntityId = 52,
                        BusinessId = new Guid("833698c7-af2a-43b9-8d45-3e1636ecafd2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9322),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9323),
                        ModifiedBy = "",
                        Name = "# Audio",
                        TagCategoryId = 15
                    },
                    new
                    {
                        EntityId = 53,
                        BusinessId = new Guid("11b0258b-cd3f-4420-bbd1-8d811de44e47"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9325),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9325),
                        ModifiedBy = "",
                        Name = "Mixing",
                        TagCategoryId = 15
                    },
                    new
                    {
                        EntityId = 54,
                        BusinessId = new Guid("0d6f62a4-3abf-4aef-88a5-c7de3d1e237a"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9329),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9329),
                        ModifiedBy = "",
                        Name = "Mastering",
                        TagCategoryId = 15
                    },
                    new
                    {
                        EntityId = 55,
                        BusinessId = new Guid("0ad1f675-763c-4b79-af3e-7769247cc1e4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9332),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9332),
                        ModifiedBy = "",
                        Name = "Recording",
                        TagCategoryId = 15
                    },
                    new
                    {
                        EntityId = 56,
                        BusinessId = new Guid("b1bc343d-4833-47ec-a0aa-d26ff3ef0e95"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9334),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9334),
                        ModifiedBy = "",
                        Name = "Production",
                        TagCategoryId = 15
                    },
                    new
                    {
                        EntityId = 57,
                        BusinessId = new Guid("951d1739-fcd2-43f6-8c3e-600a5bb9df6a"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9336),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9337),
                        ModifiedBy = "",
                        Name = "Sound Design",
                        TagCategoryId = 15
                    },
                    new
                    {
                        EntityId = 58,
                        BusinessId = new Guid("adbd1346-25de-40ee-b18c-8e3dcb37702a"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9341),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9341),
                        ModifiedBy = "",
                        Name = "Memes",
                        TagCategoryId = 16
                    },
                    new
                    {
                        EntityId = 59,
                        BusinessId = new Guid("361a71af-c596-4d76-9cfc-93ff66d7d8eb"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9343),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9343),
                        ModifiedBy = "",
                        Name = "# Guitar",
                        TagCategoryId = 17
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("EntityId");

                b.ToTable("TagCategories");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("c8807dca-7e59-450e-a568-46e1c22491ec"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9483),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9483),
                        ModifiedBy = "",
                        Name = "#"
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("4476fa42-28bd-4be5-8914-bcad1b218234"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9487),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9488),
                        ModifiedBy = "",
                        Name = "# File"
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("cc111694-f683-42e3-b248-2be5220fa556"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9493),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9494),
                        ModifiedBy = "",
                        Name = "# File ext. | Doc."
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("afbee7db-124d-4c53-a487-8e9c135e7378"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9496),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9497),
                        ModifiedBy = "",
                        Name = "# File ext. | Image"
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("84311f89-bbd7-4185-8b11-a7f302a109be"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9499),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9499),
                        ModifiedBy = "",
                        Name = "# File ext. | Video"
                    },
                    new
                    {
                        EntityId = 6,
                        BusinessId = new Guid("9a904bce-9bd5-40cc-96e0-2674d76290b0"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9503),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9503),
                        ModifiedBy = "",
                        Name = "# File Format"
                    },
                    new
                    {
                        EntityId = 7,
                        BusinessId = new Guid("b9469765-950b-49fc-92a4-f1eb033e6f9e"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9508),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9508),
                        ModifiedBy = "",
                        Name = "# File Render"
                    },
                    new
                    {
                        EntityId = 8,
                        BusinessId = new Guid("9eff39b6-a320-4c50-8055-5055f4884beb"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9553),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9553),
                        ModifiedBy = "",
                        Name = "Music Genre"
                    },
                    new
                    {
                        EntityId = 9,
                        BusinessId = new Guid("177ab84b-2d02-4096-a209-5a09978e80fc"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9555),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9556),
                        ModifiedBy = "",
                        Name = "Music Theory"
                    },
                    new
                    {
                        EntityId = 10,
                        BusinessId = new Guid("05f2f700-92aa-4064-9268-25cffde445b4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9559),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9560),
                        ModifiedBy = "",
                        Name = "Keys"
                    },
                    new
                    {
                        EntityId = 11,
                        BusinessId = new Guid("e49ea568-ff67-4000-95c2-6b63de94fd29"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9565),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9565),
                        ModifiedBy = "",
                        Name = "Brass"
                    },
                    new
                    {
                        EntityId = 12,
                        BusinessId = new Guid("ad75ca02-2e5f-4e47-8a5e-6a824481e64c"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9568),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9568),
                        ModifiedBy = "",
                        Name = "Strings"
                    },
                    new
                    {
                        EntityId = 13,
                        BusinessId = new Guid("f2eb8994-c8b5-4282-ac66-1ae2d4790924"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9570),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9570),
                        ModifiedBy = "",
                        Name = "Percussions"
                    },
                    new
                    {
                        EntityId = 14,
                        BusinessId = new Guid("07561d6d-84f1-44bc-a921-8363f73b5905"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9572),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9573),
                        ModifiedBy = "",
                        Name = "Woodwinds"
                    },
                    new
                    {
                        EntityId = 15,
                        BusinessId = new Guid("5552b546-30a3-47f8-9359-e182757e6fdd"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9577),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9577),
                        ModifiedBy = "",
                        Name = "Audio"
                    },
                    new
                    {
                        EntityId = 16,
                        BusinessId = new Guid("b34a53d1-fad1-4500-b70e-5c2a0ef778da"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9580),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9580),
                        ModifiedBy = "",
                        Name = "Fun"
                    },
                    new
                    {
                        EntityId = 17,
                        BusinessId = new Guid("f71c7164-fe26-4b32-8d28-18c7aba4354d"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9582),
                        CreatedBy = "",
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9582),
                        ModifiedBy = "",
                        Name = "Guitar"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Task", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("DateEnd")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("DateStart")
                    .HasColumnType("datetime2");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .ValueGeneratedOnAdd()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)")
                    .HasDefaultValue("04/30/2024 16:38:53");

                b.Property<int>("TaskCategoryId")
                    .HasColumnType("int");

                b.HasKey("EntityId");

                b.HasIndex("TaskCategoryId");

                b.ToTable("Tasks");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("756a2fe6-00d0-4376-b961-5e723fba191e"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9776),
                        CreatedBy = "",
                        DateEnd = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        DateStart = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        Description = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9776),
                        ModifiedBy = "",
                        Name = "Check Mails",
                        TaskCategoryId = 5
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.HasKey("EntityId");

                b.ToTable("TaskCategories");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("bc30e35d-4e04-4bd7-942c-5fd3da6d7ef5"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9684),
                        CreatedBy = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9684),
                        ModifiedBy = "",
                        Name = "PAD Mobile"
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("e920030e-abdc-4f3d-ac69-2857dfcfdb39"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9692),
                        CreatedBy = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9692),
                        ModifiedBy = "",
                        Name = "PAD Cave"
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("4ff733ec-bcba-4b3a-b13b-a85ed723a788"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9694),
                        CreatedBy = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9694),
                        ModifiedBy = "",
                        Name = "PAD Kids"
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("7f9a6e69-bee5-496f-9c1d-8da1adfa7b0b"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9697),
                        CreatedBy = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9697),
                        ModifiedBy = "",
                        Name = "Shopping"
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("91c8ff1f-3e11-4d58-9112-c3b5353c9a58"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9699),
                        CreatedBy = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(9700),
                        ModifiedBy = "",
                        Name = "Work"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.User", b =>
            {
                b.Property<int>("EntityId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                b.Property<DateTime>("Birthdate")
                    .HasColumnType("datetime2");

                b.Property<Guid>("BusinessId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("CreatedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("FirstName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<string>("LastName")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTime>("Modified")
                    .HasColumnType("datetime2");

                b.Property<string>("ModifiedBy")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<byte[]>("PasswordHash")
                    .HasColumnType("varbinary(max)");

                b.Property<byte[]>("PasswordSalt")
                    .HasColumnType("varbinary(max)");

                b.Property<int>("Role")
                    .HasColumnType("int");

                b.HasKey("EntityId");

                b.ToTable("Users");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        Birthdate = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        BusinessId = new Guid("6bf57c12-2ec4-49b1-bb72-0d1a4260c462"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 805, DateTimeKind.Utc).AddTicks(413),
                        CreatedBy = "",
                        Email = "tonyvan@live.fr",
                        FirstName = "Tony",
                        LastName = "Van Langenhove",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 805, DateTimeKind.Utc).AddTicks(413),
                        ModifiedBy = "",
                        PasswordHash = new byte[] { 55, 70, 171, 25, 155, 11, 88, 217, 201, 36, 248, 47, 213, 208, 56, 24, 230, 7, 56, 6, 95, 5, 199, 166, 7, 215, 76, 124, 187, 190, 173, 160, 34, 37, 81, 27, 209, 209, 224, 158, 207, 18, 32, 153, 71, 163, 51, 228, 203, 28, 58, 106, 90, 50, 141, 96, 250, 22, 62, 98, 177, 25, 98, 160 },
                        PasswordSalt = new byte[] { 248, 37, 81, 242, 97, 245, 198, 241, 227, 141, 9, 64, 43, 210, 149, 13, 59, 82, 68, 88, 180, 130, 54, 173, 251, 149, 227, 86, 218, 218, 80, 113, 96, 251, 37, 70, 174, 44, 154, 147, 11, 254, 4, 125, 207, 174, 177, 190, 159, 202, 228, 160, 145, 168, 74, 178, 240, 223, 147, 101, 86, 234, 17, 206, 143, 218, 247, 73, 232, 202, 196, 159, 24, 30, 181, 159, 227, 67, 96, 43, 173, 44, 58, 79, 6, 254, 147, 122, 221, 64, 61, 117, 232, 123, 173, 162, 121, 82, 182, 82, 103, 172, 171, 62, 159, 223, 139, 230, 193, 163, 171, 98, 182, 207, 108, 71, 209, 167, 64, 109, 244, 190, 202, 36, 156, 176, 111, 88 },
                        Role = 2
                    },
                    new
                    {
                        EntityId = 2,
                        Birthdate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        BusinessId = new Guid("5cca149f-c18f-4c2e-bf41-c1ef7faeca21"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 805, DateTimeKind.Utc).AddTicks(535),
                        CreatedBy = "",
                        Email = "floppy@gmail.com",
                        FirstName = "Floppy",
                        LastName = "Disk",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 805, DateTimeKind.Utc).AddTicks(536),
                        ModifiedBy = "",
                        PasswordHash = new byte[] { 194, 55, 146, 109, 181, 184, 41, 40, 79, 16, 188, 170, 199, 111, 35, 28, 200, 154, 65, 151, 167, 200, 111, 74, 179, 89, 53, 229, 173, 79, 72, 150, 10, 49, 251, 164, 201, 240, 154, 67, 34, 94, 102, 64, 88, 246, 55, 113, 193, 175, 126, 152, 68, 66, 68, 63, 182, 73, 140, 179, 145, 166, 72, 93 },
                        PasswordSalt = new byte[] { 27, 54, 177, 242, 220, 227, 41, 251, 175, 43, 1, 83, 3, 90, 252, 156, 170, 148, 57, 22, 16, 74, 83, 113, 161, 237, 102, 250, 58, 82, 206, 118, 62, 163, 72, 200, 109, 45, 189, 83, 104, 69, 206, 71, 165, 139, 221, 122, 80, 218, 51, 146, 247, 195, 18, 203, 63, 89, 205, 135, 184, 250, 7, 67, 218, 231, 20, 8, 186, 89, 144, 113, 122, 220, 7, 99, 99, 221, 101, 29, 113, 115, 211, 86, 138, 15, 8, 217, 14, 242, 39, 182, 1, 106, 211, 124, 11, 195, 238, 138, 186, 211, 59, 198, 248, 173, 136, 47, 114, 13, 194, 158, 237, 138, 170, 192, 178, 18, 107, 1, 57, 78, 116, 43, 3, 58, 7, 143 },
                        Role = 1
                    },
                    new
                    {
                        EntityId = 3,
                        Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                        BusinessId = new Guid("6b4d964b-8967-4703-a800-33abe4de5e90"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 805, DateTimeKind.Utc).AddTicks(613),
                        CreatedBy = "",
                        Email = "vincent.megag@gmail.com",
                        FirstName = "Vincent",
                        LastName = "Megag",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 805, DateTimeKind.Utc).AddTicks(614),
                        ModifiedBy = "",
                        PasswordHash = new byte[] { 108, 61, 231, 92, 136, 3, 94, 71, 20, 238, 146, 63, 233, 119, 43, 39, 203, 195, 229, 37, 247, 125, 152, 110, 49, 71, 62, 192, 170, 243, 215, 198, 135, 73, 104, 71, 71, 17, 128, 165, 45, 74, 202, 28, 21, 221, 38, 232, 9, 206, 48, 47, 68, 75, 117, 65, 250, 227, 163, 42, 93, 165, 128, 26 },
                        PasswordSalt = new byte[] { 117, 190, 230, 100, 215, 134, 167, 250, 28, 213, 178, 203, 70, 65, 212, 178, 31, 124, 163, 51, 12, 9, 77, 147, 134, 138, 65, 221, 239, 238, 215, 171, 88, 206, 133, 18, 162, 90, 41, 188, 248, 35, 32, 61, 9, 90, 223, 28, 47, 153, 108, 230, 133, 34, 111, 173, 73, 95, 249, 50, 58, 72, 202, 207, 86, 59, 230, 219, 154, 252, 244, 57, 143, 62, 140, 96, 163, 0, 23, 13, 158, 59, 232, 40, 48, 208, 191, 226, 59, 34, 132, 149, 108, 16, 149, 63, 35, 3, 33, 186, 154, 14, 238, 192, 237, 249, 128, 244, 155, 235, 189, 7, 129, 242, 6, 46, 30, 232, 155, 255, 45, 176, 4, 143, 247, 167, 90, 189 },
                        Role = 2
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Document", b =>
            {
                b.HasBaseType("MB.Domain.Entities.Mood");

                b.Property<int>("Size")
                    .HasColumnType("int");

                b.ToTable("Moods", t =>
                    {
                        t.Property("Size")
                            .HasColumnName("Document_Size");
                    });

                b.HasDiscriminator().HasValue("Document");
            });

        modelBuilder.Entity("MB.Domain.Entities.Image", b =>
            {
                b.HasBaseType("MB.Domain.Entities.Mood");

                b.Property<int>("Height")
                    .HasColumnType("int");

                b.Property<int>("Size")
                    .HasColumnType("int");

                b.Property<int>("Width")
                    .HasColumnType("int");

                b.HasDiscriminator().HasValue("Image");

                b.HasData(
                    new
                    {
                        EntityId = 1,
                        BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8250),
                        CreatedBy = "",
                        Description = "In Chords Chart",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8250),
                        ModifiedBy = "",
                        Name = " Major Key Notes",
                        Score = 0,
                        Type = 1,
                        Height = 510,
                        Size = 61206,
                        Width = 359
                    },
                    new
                    {
                        EntityId = 2,
                        BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8266),
                        CreatedBy = "",
                        Description = "7 Notes, 7 Positions",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8266),
                        ModifiedBy = "",
                        Name = "Major Diatonic Scales",
                        Score = 0,
                        Type = 1,
                        Height = 940,
                        Size = 136462,
                        Width = 700
                    },
                    new
                    {
                        EntityId = 3,
                        BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8271),
                        CreatedBy = "",
                        Description = "Fundamental Positions",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8271),
                        ModifiedBy = "",
                        Name = "Piano Chords",
                        Score = 0,
                        Type = 1,
                        Height = 1361,
                        Size = 562138,
                        Width = 868
                    },
                    new
                    {
                        EntityId = 4,
                        BusinessId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8280),
                        CreatedBy = "",
                        Description = "5 Notes, 5 Positions",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8280),
                        ModifiedBy = "",
                        Name = "Pentatonic Scales",
                        Score = 0,
                        Type = 1,
                        Height = 524,
                        Size = 74358,
                        Width = 250
                    },
                    new
                    {
                        EntityId = 5,
                        BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8286),
                        CreatedBy = "",
                        Description = "Color Measure",
                        Extension = "png",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8287),
                        ModifiedBy = "",
                        Name = "Intervals",
                        Score = 0,
                        Type = 1,
                        Height = 844,
                        Size = 56324,
                        Width = 556
                    },
                    new
                    {
                        EntityId = 6,
                        BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8292),
                        CreatedBy = "",
                        Description = "Absolute Basics",
                        Extension = "png",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8293),
                        ModifiedBy = "",
                        Name = "Time Measure",
                        Score = 0,
                        Type = 1,
                        Height = 255,
                        Size = 8992,
                        Width = 400
                    },
                    new
                    {
                        EntityId = 7,
                        BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8295),
                        CreatedBy = "",
                        Description = "Natural Order",
                        Extension = "webp",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8296),
                        ModifiedBy = "",
                        Name = "Harmonics",
                        Score = 0,
                        Type = 1,
                        Height = 226,
                        Size = 30964,
                        Width = 600
                    },
                    new
                    {
                        EntityId = 8,
                        BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8298),
                        CreatedBy = "",
                        Description = "Communication is important",
                        Extension = "png",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8299),
                        ModifiedBy = "",
                        Name = "Guitar Vocabulary",
                        Score = 0,
                        Type = 1,
                        Height = 705,
                        Size = 99994,
                        Width = 512
                    },
                    new
                    {
                        EntityId = 9,
                        BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8301),
                        CreatedBy = "",
                        Description = "Diatonic Chords in C Major",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8301),
                        ModifiedBy = "",
                        Name = "Piano Chords",
                        Score = 0,
                        Type = 1,
                        Height = 1317,
                        Size = 204898,
                        Width = 1199
                    },
                    new
                    {
                        EntityId = 10,
                        BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8305),
                        CreatedBy = "",
                        Description = "Mmm... You can tell, right ?",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8305),
                        ModifiedBy = "",
                        Name = "Piano Scales",
                        Score = 0,
                        Type = 1,
                        Height = 900,
                        Size = 91482,
                        Width = 695
                    },
                    new
                    {
                        EntityId = 11,
                        BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8308),
                        CreatedBy = "",
                        Description = "Overview",
                        Extension = "gif",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8308),
                        ModifiedBy = "",
                        Name = "Tessitures",
                        Score = 0,
                        Type = 1,
                        Height = 709,
                        Size = 62391,
                        Width = 1026
                    },
                    new
                    {
                        EntityId = 12,
                        BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8313),
                        CreatedBy = "",
                        Description = "Circle of Life",
                        Extension = "png",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8313),
                        ModifiedBy = "",
                        Name = "Chord Wheel",
                        Score = 0,
                        Type = 1,
                        Height = 950,
                        Size = 663017,
                        Width = 950
                    },
                    new
                    {
                        EntityId = 13,
                        BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8316),
                        CreatedBy = "",
                        Description = " ... ",
                        Extension = "jpeg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8316),
                        ModifiedBy = "",
                        Name = "The Mix is Almost Perfect",
                        Score = 0,
                        Type = 1,
                        Height = 480,
                        Size = 45254,
                        Width = 640
                    },
                    new
                    {
                        EntityId = 14,
                        BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8319),
                        CreatedBy = "",
                        Description = "Basic Chords / Different Keys",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8319),
                        ModifiedBy = "",
                        Name = "Guitar Progressions",
                        Score = 0,
                        Type = 1,
                        Height = 690,
                        Size = 167969,
                        Width = 552
                    },
                    new
                    {
                        EntityId = 15,
                        BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc3"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8322),
                        CreatedBy = "",
                        Description = "Les 3, c'est NON !",
                        Extension = "jpeg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8323),
                        ModifiedBy = "",
                        Name = "Vous le voulez comment votre projet ?",
                        Score = 0,
                        Type = 1,
                        Height = 960,
                        Size = 205144,
                        Width = 720
                    },
                    new
                    {
                        EntityId = 16,
                        BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8326),
                        CreatedBy = "",
                        Description = "1, 2, 3, 4, 5",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8326),
                        ModifiedBy = "",
                        Name = "Fingers Numerotation",
                        Score = 0,
                        Type = 1,
                        Height = 233,
                        Size = 24030,
                        Width = 350
                    },
                    new
                    {
                        EntityId = 17,
                        BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8329),
                        CreatedBy = "",
                        Description = "My actual Keyboard",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8330),
                        ModifiedBy = "",
                        Name = "Roland FP-30",
                        Score = 0,
                        Type = 1,
                        Height = 368,
                        Size = 87596,
                        Width = 1680
                    },
                    new
                    {
                        EntityId = 18,
                        BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8333),
                        CreatedBy = "",
                        Description = "How to build a chord",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8334),
                        ModifiedBy = "",
                        Name = "Chord Formula's",
                        Score = 0,
                        Type = 1,
                        Height = 1109,
                        Size = 221030,
                        Width = 1080
                    },
                    new
                    {
                        EntityId = 19,
                        BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8336),
                        CreatedBy = "",
                        Description = "Valeurs de Temps",
                        Extension = "webp",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8337),
                        ModifiedBy = "",
                        Name = "Time Values",
                        Score = 0,
                        Type = 1,
                        Height = 530,
                        Size = 21922,
                        Width = 640
                    },
                    new
                    {
                        EntityId = 20,
                        BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd4"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8342),
                        CreatedBy = "",
                        Description = "Fundamental Positions",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8343),
                        ModifiedBy = "",
                        Name = "Guitar Chords ( B )",
                        Score = 0,
                        Type = 1,
                        Height = 909,
                        Size = 57447,
                        Width = 640
                    },
                    new
                    {
                        EntityId = 21,
                        BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8345),
                        CreatedBy = "",
                        Description = "Primary Modes",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8346),
                        ModifiedBy = "",
                        Name = "Modes starting in C",
                        Score = 0,
                        Type = 1,
                        Height = 1552,
                        Size = 111187,
                        Width = 1199
                    },
                    new
                    {
                        EntityId = 22,
                        BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8349),
                        CreatedBy = "",
                        Description = "Good luck finding the good one ...",
                        Extension = "jpg",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8349),
                        ModifiedBy = "",
                        Name = "Guitar Chords",
                        Score = 0,
                        Type = 1,
                        Height = 1913,
                        Size = 633229,
                        Width = 1200
                    },
                    new
                    {
                        EntityId = 23,
                        BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc5"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8352),
                        CreatedBy = "",
                        Description = "Une approche parmis tant d'autres",
                        Extension = "png",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8353),
                        ModifiedBy = "",
                        Name = "Intervalles",
                        Score = 0,
                        Type = 1,
                        Height = 971,
                        Size = 69313,
                        Width = 692
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.Video", b =>
            {
                b.HasBaseType("MB.Domain.Entities.Mood");

                b.Property<int>("Duration")
                    .HasColumnType("int");

                b.Property<int>("Height")
                    .HasColumnType("int");

                b.Property<int>("Size")
                    .HasColumnType("int");

                b.Property<int>("Width")
                    .HasColumnType("int");

                b.ToTable("Moods", t =>
                    {
                        t.Property("Height")
                            .HasColumnName("Video_Height");

                        t.Property("Size")
                            .HasColumnName("Video_Size");

                        t.Property("Width")
                            .HasColumnName("Video_Width");
                    });

                b.HasDiscriminator().HasValue("Video");

                b.HasData(
                    new
                    {
                        EntityId = 55,
                        BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8451),
                        CreatedBy = "",
                        Description = " Bendy & The Ink Machine ",
                        Extension = "mp4",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8452),
                        ModifiedBy = "",
                        Name = "BATIM - Build our Machine",
                        Score = 0,
                        Type = 2,
                        Duration = 64,
                        Height = 360,
                        Size = 5091239,
                        Width = 640
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.VideoYouTube", b =>
            {
                b.HasBaseType("MB.Domain.Entities.Mood");

                b.Property<string>("Url")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasDiscriminator().HasValue("VideoYouTube");

                b.HasData(
                    new
                    {
                        EntityId = 85,
                        BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                        Created = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8519),
                        CreatedBy = "",
                        Description = "...",
                        Extension = "",
                        Modified = new DateTime(2024, 4, 30, 14, 38, 53, 804, DateTimeKind.Utc).AddTicks(8520),
                        ModifiedBy = "",
                        Name = "Mario Bros 3 Cover",
                        Score = 0,
                        Type = 4,
                        Url = "WWUxrTdjqg0"
                    });
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
            {
                b.HasOne("MB.Domain.Entities.Artist", "Artist")
                    .WithMany("ArtistStyles")
                    .HasForeignKey("ArtistId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Style", "Style")
                    .WithMany("ArtistStyles")
                    .HasForeignKey("StyleId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Artist");

                b.Navigation("Style");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationBookFranchise", b =>
            {
                b.HasOne("MB.Domain.Entities.Book", "Book")
                    .WithMany("BookFranchise")
                    .HasForeignKey("BookId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                    .WithMany("BookFranchise")
                    .HasForeignKey("FranchiseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Book");

                b.Navigation("Franchise");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationBookModel", b =>
            {
                b.HasOne("MB.Domain.Entities.Book", "Book")
                    .WithMany("BookModel")
                    .HasForeignKey("BookId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Model", "Model")
                    .WithMany("BookModel")
                    .HasForeignKey("ModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Book");

                b.Navigation("Model");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
            {
                b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                    .WithMany("FranchiseMedias")
                    .HasForeignKey("FranchiseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Media", "Media")
                    .WithMany("FranchiseMedias")
                    .HasForeignKey("MediaId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Franchise");

                b.Navigation("Media");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
            {
                b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                    .WithMany("FranchiseModels")
                    .HasForeignKey("FranchiseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Model", "Model")
                    .WithMany("FranchiseModels")
                    .HasForeignKey("ModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Franchise");

                b.Navigation("Model");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
            {
                b.HasOne("MB.Domain.Entities.Artist", "Artist")
                    .WithMany("LinkArtists")
                    .HasForeignKey("ArtistId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Link", "Link")
                    .WithMany("LinkArtists")
                    .HasForeignKey("LinkId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Artist");

                b.Navigation("Link");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
            {
                b.HasOne("MB.Domain.Entities.LinkCategory", "LinkCategory")
                    .WithMany("LinkCategories")
                    .HasForeignKey("LinkCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Link", "Link")
                    .WithMany("LinkCategories")
                    .HasForeignKey("LinkId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Link");

                b.Navigation("LinkCategory");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
            {
                b.HasOne("MB.Domain.Entities.Link", "Link")
                    .WithMany("LinkModels")
                    .HasForeignKey("LinkId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Model", "Model")
                    .WithMany("LinkModels")
                    .HasForeignKey("ModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Link");

                b.Navigation("Model");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
            {
                b.HasOne("MB.Domain.Entities.Artist", "Artist")
                    .WithMany("MoodArtists")
                    .HasForeignKey("ArtistId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Mood", "Mood")
                    .WithMany("MoodArtists")
                    .HasForeignKey("MoodId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Artist");

                b.Navigation("Mood");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
            {
                b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                    .WithMany("MoodFranchises")
                    .HasForeignKey("FranchiseId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Mood", "Mood")
                    .WithMany("MoodFranchises")
                    .HasForeignKey("MoodId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Franchise");

                b.Navigation("Mood");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
            {
                b.HasOne("MB.Domain.Entities.Model", "Model")
                    .WithMany("MoodModels")
                    .HasForeignKey("ModelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Mood", "Mood")
                    .WithMany("MoodModels")
                    .HasForeignKey("MoodId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Model");

                b.Navigation("Mood");
            });

        modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
            {
                b.HasOne("MB.Domain.Entities.Mood", "Mood")
                    .WithMany("MoodTags")
                    .HasForeignKey("MoodId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("MB.Domain.Entities.Tag", "Tag")
                    .WithMany("MoodTags")
                    .HasForeignKey("TagId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Mood");

                b.Navigation("Tag");
            });

        modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
            {
                b.HasOne("MB.Domain.Entities.TagCategory", "TagCategory")
                    .WithMany("Tags")
                    .HasForeignKey("TagCategoryId")
                    .OnDelete(DeleteBehavior.Restrict)
                    .IsRequired();

                b.Navigation("TagCategory");
            });

        modelBuilder.Entity("MB.Domain.Entities.Task", b =>
            {
                b.HasOne("MB.Domain.Entities.TaskCategory", "TaskCategory")
                    .WithMany("Tasks")
                    .HasForeignKey("TaskCategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("TaskCategory");
            });

        modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
            {
                b.Navigation("ArtistStyles");

                b.Navigation("LinkArtists");

                b.Navigation("MoodArtists");
            });

        modelBuilder.Entity("MB.Domain.Entities.Book", b =>
            {
                b.Navigation("BookFranchise");

                b.Navigation("BookModel");
            });

        modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
            {
                b.Navigation("BookFranchise");

                b.Navigation("FranchiseMedias");

                b.Navigation("FranchiseModels");

                b.Navigation("MoodFranchises");
            });

        modelBuilder.Entity("MB.Domain.Entities.Link", b =>
            {
                b.Navigation("LinkArtists");

                b.Navigation("LinkCategories");

                b.Navigation("LinkModels");
            });

        modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
            {
                b.Navigation("LinkCategories");
            });

        modelBuilder.Entity("MB.Domain.Entities.Media", b =>
            {
                b.Navigation("FranchiseMedias");
            });

        modelBuilder.Entity("MB.Domain.Entities.Model", b =>
            {
                b.Navigation("BookModel");

                b.Navigation("FranchiseModels");

                b.Navigation("LinkModels");

                b.Navigation("MoodModels");
            });

        modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
            {
                b.Navigation("MoodArtists");

                b.Navigation("MoodFranchises");

                b.Navigation("MoodModels");

                b.Navigation("MoodTags");
            });

        modelBuilder.Entity("MB.Domain.Entities.Style", b =>
            {
                b.Navigation("ArtistStyles");
            });

        modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
            {
                b.Navigation("MoodTags");
            });

        modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
            {
                b.Navigation("Tags");
            });

        modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
            {
                b.Navigation("Tasks");
            });
#pragma warning restore 612, 618
    }
}
