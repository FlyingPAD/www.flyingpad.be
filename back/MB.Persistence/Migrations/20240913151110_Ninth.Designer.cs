// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240913151110_Ninth")]
    partial class Ninth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("53f62977-3455-409a-bab9-aed32ab9443a"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1654),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1657),
                            ModifiedBy = "",
                            Name = "# Unknown Artist",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("9088306d-6efd-4c23-846f-a18be0d103d8"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1664),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1664),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("95184c3c-a73c-4598-af99-d14aa81fde9d"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1666),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1666),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Illustrator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("467d6adb-1425-4ed1-aacf-763160427388"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1680),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1680),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("7a9e7ccd-e073-40c4-99f5-99c00b709989"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1682),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1682),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("30b75b36-101e-4629-b029-6dc1b4758fc3"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1685),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1685),
                            ModifiedBy = "",
                            Name = "/ Unknown A.I. User",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("b9804634-97f7-4e4b-81fc-86de56798902"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1687),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1687),
                            ModifiedBy = "",
                            Name = "/ Unknown Musician",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("e72dd1a0-0a8c-4301-820d-b1f40100dbb0"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1691),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1691),
                            ModifiedBy = "",
                            Name = "/ Unknown Photographer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("7c4e6ce8-a170-4e8d-8440-440d07d0eaac"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1693),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1693),
                            ModifiedBy = "",
                            Name = "/ Unknown Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("c5eea9ad-7116-48cb-b00b-bb2bd2b5b580"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1696),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1696),
                            ModifiedBy = "",
                            Name = "/ Unknown Videast",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("93f75552-010e-4b0c-a5d5-ba2a6102694c"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1697),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1698),
                            ModifiedBy = "",
                            Name = "/ Unknown Writer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("54feba59-b6dd-49b3-8bde-75eda8be3349"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1701),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1701),
                            ModifiedBy = "",
                            Name = "Flying PAD",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("1402cdce-d789-4759-a16d-828adf5cd95b"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1703),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1703),
                            ModifiedBy = "",
                            Name = "Soën9048",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("0129e338-e9a4-4fab-81a2-0555268b6fac"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1705),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1705),
                            ModifiedBy = "",
                            Name = "CohesivePanda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("20df5854-6a97-4614-a747-b090cd6a12cc"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1706),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1707),
                            ModifiedBy = "",
                            Name = "Nobuo Uematsu",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("5ea740e3-d0c4-4200-a6f9-d9b447baca03"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1710),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1710),
                            ModifiedBy = "",
                            Name = "Eichiro Oda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("25e3e4f9-1733-480c-bd7a-e3acfbc68381"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1712),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1712),
                            ModifiedBy = "",
                            Name = "Masashi Kishimoto",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("79042181-f236-48d9-83fe-de656a7bfab9"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1714),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1715),
                            ModifiedBy = "",
                            Name = "Dali",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("94f738f5-f0fd-4f64-8f5f-92ed1c2f5a52"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1716),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1717),
                            ModifiedBy = "",
                            Name = "Yoko Shimomura",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("d11c6073-60e7-424e-a3a2-4585f201d929"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1720),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1720),
                            ModifiedBy = "",
                            Name = "Michael Jackson",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("03307d6d-3a8e-4f11-912c-78f18ef200ca"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1721),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1722),
                            ModifiedBy = "",
                            Name = "CG5",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("99c6ee83-b137-4ae8-b4bb-ff3c38ad2053"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1723),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1723),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("00e7c1aa-28ea-4b2d-ba56-31c184055566"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1725),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1725),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Pseudonym = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Board", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MB.Domain.Entities.Book", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("7acbb15f-c9b4-4605-86f5-9eda17ab50bd"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1969),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1970),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("e6ada32b-420d-41fa-8c73-cf59e96e97f6"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1975),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1976),
                            ModifiedBy = "",
                            Name = "Street Fighter"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("af6c1f1f-489c-4ada-a146-64edd466ba39"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1979),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1979),
                            ModifiedBy = "",
                            Name = "# Unrelated Franchise"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Link", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("43fe22b5-3e34-4c5b-ae92-21aa440ab8de"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2113),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2113),
                            ModifiedBy = "",
                            Name = "KVR",
                            Url = "https://www.kvraudio.com/"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("510a12a8-2037-4f5b-a37e-f9053f09c5b3"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2117),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2117),
                            ModifiedBy = "",
                            Name = "MuseScore",
                            Url = "https://musescore.com/"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("8595f370-94b8-489f-82e8-23c25f8773eb"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2121),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2121),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.native-instruments.com"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("6c42aac0-bce3-497f-9de5-4993c7663252"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2123),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2123),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.steinberg.net/"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("7ab0e251-b0e6-4b9e-a58a-82792fd62db0"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2125),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2125),
                            ModifiedBy = "",
                            Name = "Clés pour l'harmonie",
                            Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("5cee8d50-5f41-43dd-82e6-22328f01b994"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2128),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2128),
                            ModifiedBy = "",
                            Name = "Google | Metronome",
                            Url = "https://www.google.com/search?q=metronome"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("17f164b5-e9ef-45e1-973f-fd941877b109"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2131),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2131),
                            ModifiedBy = "",
                            Name = "Google | Stopwatch",
                            Url = "https://www.google.com/search?q=stopwatch"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("ccc2de21-a7c8-4779-b638-c0d2f381c420"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2133),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2133),
                            ModifiedBy = "",
                            Name = "Google | Timer",
                            Url = "https://www.google.com/search?q=timer"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("6d936d2a-abfe-4d63-8a3c-b88b9e13d733"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2135),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2135),
                            ModifiedBy = "",
                            Name = "Mangold Project",
                            Url = "https://www.youtube.com/@MangoldProject"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("021043bf-37c5-4049-8303-96d1bf5a9f01"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2138),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2138),
                            ModifiedBy = "",
                            Name = "# YouTube",
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("e6902b46-593a-4422-a232-23da75577456"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2141),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2141),
                            ModifiedBy = "",
                            Name = "Piano Jazz Concept",
                            Url = "https://www.youtube.com/@Pianojazzconcept"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("624fbe3b-5e66-4155-9701-29f7be70fd63"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2143),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2143),
                            ModifiedBy = "",
                            Name = "Rick Beato",
                            Url = "https://www.youtube.com/@RickBeato"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("22e7b57c-b507-4aa8-a71f-547454e902dd"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2145),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2145),
                            ModifiedBy = "",
                            Name = "Pianote",
                            Url = "https://www.youtube.com/@PianoteOfficial"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("a6a9ee8a-69be-44c0-9234-48150dc91779"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2147),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2147),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Url = "https://www.youtube.com/@TryHardNinja"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("69c03122-bb61-48f7-b6af-7d6140097a44"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2181),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2181),
                            ModifiedBy = "",
                            Name = "Kyle Allen Music",
                            Url = "https://www.youtube.com/@KyleAllenMusic"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("257716e0-245a-4d15-b2eb-ea017b64377e"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2183),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2183),
                            ModifiedBy = "",
                            Name = "Ableton",
                            Url = "https://www.youtube.com/@Ableton"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("572da28e-211f-498f-bbb0-b271f4c79863"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2185),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2185),
                            ModifiedBy = "",
                            Name = "La Machine à Mixer",
                            Url = "https://www.youtube.com/@lamachineamixer"
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("3ec25e11-ee9b-449c-9123-ed24624b630a"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2188),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2188),
                            ModifiedBy = "",
                            Name = "Audiofanzine",
                            Url = "https://www.youtube.com/@audiofanzine"
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("fbae02c2-7a48-4e7b-abe7-8c6bfe5ab5b5"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2191),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2192),
                            ModifiedBy = "",
                            Name = "Cubase",
                            Url = "https://www.youtube.com/@Cubase"
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("291bbe77-0a98-43c0-be93-fac2ec5c3837"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2193),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2194),
                            ModifiedBy = "",
                            Name = "Ten Second Songs",
                            Url = "https://www.youtube.com/@TenSecondSongs"
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("14b225f4-a2c5-4d0b-907d-48c86aafff1d"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2195),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2196),
                            ModifiedBy = "",
                            Name = "The Piano Guys",
                            Url = "https://www.youtube.com/@thepianoguys"
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("e247b038-ada2-47ba-848b-2a676c50b912"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2197),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2198),
                            ModifiedBy = "",
                            Name = "CG5",
                            Url = "https://www.youtube.com/@CG5"
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("0e1242fe-2702-46d0-b69e-55708f396be0"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2201),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2201),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.youtube.com/@NativeInstruments"
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("274d5623-6ad4-4fe5-89fb-3ac9a80dcf83"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2203),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2203),
                            ModifiedBy = "",
                            Name = "Ken Tamplin Vocal Academy",
                            Url = "https://www.youtube.com/@kentamplin"
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("d9d754b4-eb2f-4803-b47e-98a87c7ec5f5"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2205),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2205),
                            ModifiedBy = "",
                            Name = "Pentatonix",
                            Url = "https://www.youtube.com/@PTXofficial"
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("a2c59f17-75e9-4791-8130-616cb1dc17f9"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2206),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2207),
                            ModifiedBy = "",
                            Name = "Recording Revolution",
                            Url = "https://www.youtube.com/@recordingrevolution"
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("d660d870-a14e-4853-b356-373c5d487071"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2210),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2210),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Url = "https://www.youtube.com/@jacobcollier"
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("b80c4825-f619-4b90-b654-6cc03a847119"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2212),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2212),
                            ModifiedBy = "",
                            Name = "Orchestration Online",
                            Url = "https://www.youtube.com/@OrchestrationOnline"
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("808054b4-a4de-450b-9632-05800213dc99"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2214),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2214),
                            ModifiedBy = "",
                            Name = "Nuendo",
                            Url = "https://www.youtube.com/@Nuendo"
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("3df261b3-743a-47a5-9c00-7b79683aa54e"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2216),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2216),
                            ModifiedBy = "",
                            Name = "reFX",
                            Url = "https://www.youtube.com/@reFXaudio"
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("db92d33f-2100-4589-bfad-3dbc736a8d67"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2220),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2220),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.youtube.com/@steinberg"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("LinkCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("8a422669-f4e1-47ff-9cd6-06863b2bfbb6"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2262),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2263),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("f1af5d6c-41d2-48b2-98a8-8750c7c89603"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2266),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2267),
                            ModifiedBy = "",
                            Name = "Audio | Mix & Master"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("5e987a1d-8a21-47ac-a5ab-12478f5760dd"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2269),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2269),
                            ModifiedBy = "",
                            Name = "Audio | Sound Design"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("76f0f367-9a26-4cd0-9f43-33624b8b7998"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2272),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2273),
                            ModifiedBy = "",
                            Name = "Books"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("becee09d-1daf-4dd8-a489-ae4cecdf3158"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2274),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2274),
                            ModifiedBy = "",
                            Name = "Books | Harmony"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("5129ea1f-7dc4-4996-9e9b-a359baa1e367"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2277),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2277),
                            ModifiedBy = "",
                            Name = "Software"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("9fad52e4-139e-45c9-a5b7-5cf97a26ff96"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2278),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2279),
                            ModifiedBy = "",
                            Name = "Software | D.A.W."
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("bea31d94-2a01-4f47-82f0-be81a1349ff1"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2282),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2282),
                            ModifiedBy = "",
                            Name = "Software | V.S.T."
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("2be999e7-a0a9-4018-8add-a78e2b7ddf18"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2284),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2284),
                            ModifiedBy = "",
                            Name = "Software | Music Notation"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("4f4d1a84-fbff-4215-9d8b-8b30d6d0fc85"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2286),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2286),
                            ModifiedBy = "",
                            Name = "Tools"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("becb9a90-1894-437a-aa1b-f75924a575f1"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2288),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2288),
                            ModifiedBy = "",
                            Name = "Tools | Global"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("2fb3110a-107e-4b6f-8742-ee68ac564cfa"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2292),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2292),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("dd33f9d9-535b-4764-bdf9-655cee5af242"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2294),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2294),
                            ModifiedBy = "",
                            Name = "YouTube | Artists"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("17d8106c-fbc4-4c80-959d-82d25723c3c6"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2296),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2296),
                            ModifiedBy = "",
                            Name = "YouTube | Audio"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("6c30851c-9638-4763-a6c7-b2c6ea6e69c9"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2297),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2298),
                            ModifiedBy = "",
                            Name = "YouTube | Piano & Keys"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Media", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("cfb11971-176c-4903-863e-d7965af0e5f4"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2006),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2006),
                            ModifiedBy = "",
                            Name = "# Unrelated"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("99be8eba-5347-4548-b8b9-428b841a674b"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2010),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2010),
                            ModifiedBy = "",
                            Name = "# Unknown"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("f9617260-118e-41de-84f4-cbd53f345960"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2012),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2012),
                            ModifiedBy = "",
                            Name = "# Super Franchise"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("fe330e63-f1fd-458b-90ac-e1dcdbd27ed3"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2015),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2016),
                            ModifiedBy = "",
                            Name = "TV"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("18079ed6-b638-4f42-ad07-12e6f1bc536d"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2017),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2018),
                            ModifiedBy = "",
                            Name = "Radio"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("dfd4d6dc-cdfb-4aba-a748-9acc6a37b014"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2020),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2020),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("8c0acc85-50b3-4756-8a9c-8ebfd0e56aa7"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2022),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2022),
                            ModifiedBy = "",
                            Name = "Capcom"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("d6a125ea-c880-4219-a3ba-4c35c3085745"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2025),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2025),
                            ModifiedBy = "",
                            Name = "Square-Enix"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("fda6c7e7-f28e-4e26-8c50-8c04c8514e7f"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2027),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2027),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Model", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("a9bbb142-cc1f-4c18-a1d4-553cc5f10c76"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2428),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2428),
                            ModifiedBy = "",
                            Pseudonym = "# Unknown Model"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("b4f8104d-ca8c-4899-a942-39c487b8c457"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2433),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2433),
                            ModifiedBy = "",
                            Pseudonym = "# Unrelated Model"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("1a083939-8d25-4666-a65d-b1557ea3ec66"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2435),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "Tony",
                            Gender = "M",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2435),
                            ModifiedBy = "",
                            Pseudonym = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Moods");

                    b.HasDiscriminator().HasValue("Mood");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("RArtistStyle");

                    b.HasData(
                        new
                        {
                            ArtistId = 12,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 12,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 13,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 14,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 15,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 16,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 17,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 18,
                            StyleId = 1
                        },
                        new
                        {
                            ArtistId = 19,
                            StyleId = 2
                        },
                        new
                        {
                            ArtistId = 20,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 21,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 22,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 23,
                            StyleId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookFranchise", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RBookFranchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookModel", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RBookModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RFranchiseMedia");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            MediaId = 9
                        },
                        new
                        {
                            FranchiseId = 2,
                            MediaId = 7
                        },
                        new
                        {
                            FranchiseId = 3,
                            MediaId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RFranchiseModel");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            ModelId = 3
                        },
                        new
                        {
                            FranchiseId = 3,
                            ModelId = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RLinkArtist");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("LinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "LinkCategoryId");

                    b.HasIndex("LinkCategoryId");

                    b.ToTable("RLinkCategory");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 9
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 4,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 4
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 5
                        },
                        new
                        {
                            LinkId = 6,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 7,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 8,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 10,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 12,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 13,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 15,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 16,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 17,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 18,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 19,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 20,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 21,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 22,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 23,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 24,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 25,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 2
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 14
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 28,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 29,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 30,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 31,
                            LinkCategoryId = 12
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RLinkModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RMoodArtist");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ArtistId = 12
                        },
                        new
                        {
                            MoodId = 13,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RMoodFranchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RMoodModel");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ModelId = 3
                        },
                        new
                        {
                            MoodId = 13,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ModelId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RMoodTag");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 8
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 19
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 58
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 43
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Style", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("345831cf-a781-4487-ad94-c541105bb5eb"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1835),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1835),
                            ModifiedBy = "",
                            Name = "2D"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("1fed2344-5a01-488d-8103-ba53b94555b6"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1841),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1841),
                            ModifiedBy = "",
                            Name = "2D Animation"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("6579120f-4a7f-4f35-8e54-1db1eb251149"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1843),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1843),
                            ModifiedBy = "",
                            Name = "3D"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("5be612cf-fef8-4716-99a3-6accc8770507"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1876),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1876),
                            ModifiedBy = "",
                            Name = "3D Animation"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("df4be2b8-47cb-4be2-b457-91974bfadfe6"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1880),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1880),
                            ModifiedBy = "",
                            Name = "Architecture"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("80f3a489-7cbd-4cf4-8691-ee076425a54d"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1883),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1883),
                            ModifiedBy = "",
                            Name = "Writer"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("08a829f5-6a94-4b7a-b723-6638b7c3a999"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1885),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1885),
                            ModifiedBy = "",
                            Name = "Music"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("b52cd2f5-136d-4b65-9e03-74eab3c28991"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1887),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1887),
                            ModifiedBy = "",
                            Name = "Photo"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("e0a8b3b3-f3b4-42ca-bc04-df07654af5d0"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1890),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1890),
                            ModifiedBy = "",
                            Name = "Video"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("544c31c1-8e62-4e75-8a72-0849a6314225"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1892),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(1893),
                            ModifiedBy = "",
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("BusinessId")
                        .HasDatabaseName("IX_Tag_BusinessId");

                    b.HasIndex("TagCategoryId")
                        .HasDatabaseName("IX_Tag_TagCategoryId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("a4946064-d47e-4b18-9f42-6ed116cec55a"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3466),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3467),
                            ModifiedBy = "",
                            Name = "# All Files",
                            TagCategoryId = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("c8cf948b-c590-4ca6-91f4-9d94ae629004"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3476),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3477),
                            ModifiedBy = "",
                            Name = "Audio",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("2fe5b87a-047a-41f6-ba12-dc44b36107a9"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3479),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3479),
                            ModifiedBy = "",
                            Name = "Document",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("9989232e-a659-4022-ace1-d1b7d26421c7"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3481),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3481),
                            ModifiedBy = "",
                            Name = "Image",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("bb836165-b0e2-4079-b85b-43ad9b2a9310"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3482),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3483),
                            ModifiedBy = "",
                            Name = "Video",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("efdda2d4-1a14-41bf-8ff8-f0a9ee950ca4"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3487),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3487),
                            ModifiedBy = "",
                            Name = "*.txt",
                            TagCategoryId = 3
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("b89ebe42-cbdc-487b-bd12-b59f1d0db83d"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3489),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3489),
                            ModifiedBy = "",
                            Name = "*.bmp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("11989239-85ce-44d5-a763-7f981f48d409"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3490),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3491),
                            ModifiedBy = "",
                            Name = "*.gif",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("2f62caf2-e274-410e-be09-b0197308f5c6"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3492),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3492),
                            ModifiedBy = "",
                            Name = "*.jpeg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("03e633cc-e21c-4e97-adfd-12d5c8622781"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3496),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3496),
                            ModifiedBy = "",
                            Name = "*.jpg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("99d5f279-afa3-4eb6-a3dc-12230aa1b621"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3498),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3498),
                            ModifiedBy = "",
                            Name = "*.png",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("29111868-fb28-4cce-86c8-af127784e1ff"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3500),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3500),
                            ModifiedBy = "",
                            Name = "*.webp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("4f7a58e6-68df-4655-8f09-ec54eb00e397"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3502),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3502),
                            ModifiedBy = "",
                            Name = "*.mp4",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("de3e77ce-d16f-4a91-944d-f349659abdf0"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3781),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3782),
                            ModifiedBy = "",
                            Name = "*.webm",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("20930795-d2a3-4d0c-8db9-050017205c16"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3785),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3786),
                            ModifiedBy = "",
                            Name = "Landscape",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("080187da-9897-407f-9cf6-ba17b3ff42ef"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3788),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3788),
                            ModifiedBy = "",
                            Name = "Landscape ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("1a4f62ac-cf43-4d6a-b937-d0cbf9527585"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3790),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3790),
                            ModifiedBy = "",
                            Name = "Portrait",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("70e4158d-a08d-4699-b2e4-702f9bb91a4d"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3802),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3802),
                            ModifiedBy = "",
                            Name = "Portrait ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("240fda89-9600-45b4-8d99-1fccc2082ddb"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3803),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3804),
                            ModifiedBy = "",
                            Name = "Square",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("62d32b1f-0d9e-40b4-ba6f-0732a92b8a96"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3805),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3806),
                            ModifiedBy = "",
                            Name = "2D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("d6beabcc-7909-47dd-986e-e6bb0a7c882c"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3807),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3807),
                            ModifiedBy = "",
                            Name = "2D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("4e741620-5823-469f-8f79-44820f522a86"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3811),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3811),
                            ModifiedBy = "",
                            Name = "3D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("7c40d51e-c46c-42ad-93c5-4729afc0473f"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3813),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3813),
                            ModifiedBy = "",
                            Name = "3D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("f3a0b64a-d27b-4352-8cce-9f5a0868d207"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3814),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3815),
                            ModifiedBy = "",
                            Name = "Photo",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("408f4a01-4f79-4b42-a0c2-03a25b1e6124"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3816),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3817),
                            ModifiedBy = "",
                            Name = "Photo | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("f07814df-3717-46fe-83b4-e624695b8314"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3820),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3820),
                            ModifiedBy = "",
                            Name = "E.D.M.",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("9fc383e8-c1fa-4c32-8b3e-7df6091ac45c"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3822),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3822),
                            ModifiedBy = "",
                            Name = "Jazz",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("11281bbf-96aa-4092-bd0e-582e50d942b4"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3823),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3824),
                            ModifiedBy = "",
                            Name = "Metal",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("adf3bab7-c718-40dd-8822-46306ef5680a"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3825),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3825),
                            ModifiedBy = "",
                            Name = "Orchestral",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("e6472ce3-680a-453c-999b-e61c346d0cfa"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3829),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3829),
                            ModifiedBy = "",
                            Name = "Pop Music",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("dcb186cc-2fd8-44c7-8fd4-7378a0605c8e"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3830),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3831),
                            ModifiedBy = "",
                            Name = "Rap",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("31db1094-e395-4cd5-9e88-766003d5cd96"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3832),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3832),
                            ModifiedBy = "",
                            Name = "Rock",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 33,
                            BusinessId = new Guid("3a623696-1269-4cac-8645-a6e361b0f4c2"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3834),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3834),
                            ModifiedBy = "",
                            Name = "Traditional",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 34,
                            BusinessId = new Guid("2c7b53da-39cf-44e8-9132-4a149bc4113d"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3839),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3839),
                            ModifiedBy = "",
                            Name = "# Music Theory",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 35,
                            BusinessId = new Guid("237d1e98-8452-416e-9217-6ddd606f503c"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3841),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3841),
                            ModifiedBy = "",
                            Name = "# Harmony",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 36,
                            BusinessId = new Guid("bf4c1c35-1020-4773-8c08-3db61ae3b730"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3842),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3843),
                            ModifiedBy = "",
                            Name = "Chords",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 37,
                            BusinessId = new Guid("08449830-3526-404b-93de-12a5c3012c2b"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3844),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3844),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 38,
                            BusinessId = new Guid("0916dac0-453e-4dd7-81b4-f84e48d85d6c"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3847),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3848),
                            ModifiedBy = "",
                            Name = "Intervals",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 39,
                            BusinessId = new Guid("358f9b4c-b067-45d2-be5d-89a3edb49b5c"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3849),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3849),
                            ModifiedBy = "",
                            Name = "Rythm",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 40,
                            BusinessId = new Guid("01bdbb35-dba1-47bc-bb06-10735f86102e"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3851),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3851),
                            ModifiedBy = "",
                            Name = "Scales",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 41,
                            BusinessId = new Guid("419ff308-13fc-4d03-bd61-5401f251b076"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3853),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3853),
                            ModifiedBy = "",
                            Name = "Modes",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 42,
                            BusinessId = new Guid("abe64b38-22b8-4142-80b2-e19408eec375"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3856),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3857),
                            ModifiedBy = "",
                            Name = "# Keys",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 43,
                            BusinessId = new Guid("35e1b047-3020-460e-9b3c-dec1727d76ce"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3858),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3858),
                            ModifiedBy = "",
                            Name = "Piano",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 44,
                            BusinessId = new Guid("9040f1e4-b465-4a6a-a0e2-b070531c96d7"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3860),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3860),
                            ModifiedBy = "",
                            Name = "# Brass",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 45,
                            BusinessId = new Guid("33d41440-2af7-4ae1-91ca-b51e59b4e13b"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3862),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3862),
                            ModifiedBy = "",
                            Name = "Trombone",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 46,
                            BusinessId = new Guid("cacc3c4c-b1a7-4857-a743-6e343edfafe6"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3865),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3865),
                            ModifiedBy = "",
                            Name = "# Strings",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 47,
                            BusinessId = new Guid("76642100-8e21-4562-80c0-8bcffff041fa"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3867),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3867),
                            ModifiedBy = "",
                            Name = "Violin",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 48,
                            BusinessId = new Guid("2f384b82-cee0-4b12-af72-0dea229bce82"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3869),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3869),
                            ModifiedBy = "",
                            Name = "# Percussions",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 49,
                            BusinessId = new Guid("4f6ff0a7-470b-4425-9de0-f90b3b9d016e"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3870),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3871),
                            ModifiedBy = "",
                            Name = "Drums",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 50,
                            BusinessId = new Guid("14996b98-ce85-49a9-8b17-c0b6b1d73c9f"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3874),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3874),
                            ModifiedBy = "",
                            Name = "# Woodwinds",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 51,
                            BusinessId = new Guid("3bc3aee6-995e-46f3-8ed6-7b662192d421"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3875),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3876),
                            ModifiedBy = "",
                            Name = "Clarinet",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 52,
                            BusinessId = new Guid("ff57910b-0410-43b9-bec5-26fb2594bddb"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3877),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3877),
                            ModifiedBy = "",
                            Name = "# Audio",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 53,
                            BusinessId = new Guid("1864effc-a6c6-4e36-b440-60515f128418"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3879),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3879),
                            ModifiedBy = "",
                            Name = "Mixing",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 54,
                            BusinessId = new Guid("78c47913-cb92-488c-adeb-0b22cd06296b"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3882),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3883),
                            ModifiedBy = "",
                            Name = "Mastering",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("6a21f50f-d055-498e-8314-01c3941763a7"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3884),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3884),
                            ModifiedBy = "",
                            Name = "Recording",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 56,
                            BusinessId = new Guid("d47b8e3d-7fae-4a91-81f6-4e14987fc52f"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3886),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3886),
                            ModifiedBy = "",
                            Name = "Production",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 57,
                            BusinessId = new Guid("2016f7a1-b139-4813-beb4-3e74531bca0a"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3888),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3888),
                            ModifiedBy = "",
                            Name = "Sound Design",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 58,
                            BusinessId = new Guid("35eb4ae3-4395-40c1-b56d-56c0dda81e43"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3891),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3891),
                            ModifiedBy = "",
                            Name = "Memes",
                            TagCategoryId = 16
                        },
                        new
                        {
                            EntityId = 59,
                            BusinessId = new Guid("f482da0b-5162-481c-8d2d-05376b7e3a4e"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3893),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3893),
                            ModifiedBy = "",
                            Name = "# Guitar",
                            TagCategoryId = 17
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TagCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("7313ab3d-e714-4f7c-858e-3b57f93dda9c"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3966),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3967),
                            ModifiedBy = "",
                            Name = "#"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("8be7e9a7-2f4c-4433-915c-cc66356915ac"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3974),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3974),
                            ModifiedBy = "",
                            Name = "# File"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("5efb3fe1-8439-4019-818e-91e4529204b9"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3978),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3978),
                            ModifiedBy = "",
                            Name = "# File ext. | Doc."
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("63f1e416-3540-467d-a79b-b42818d8c016"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3980),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3980),
                            ModifiedBy = "",
                            Name = "# File ext. | Image"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("b44718ff-b126-4c4d-bf9e-8af38735fd07"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3982),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(3982),
                            ModifiedBy = "",
                            Name = "# File ext. | Video"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("9bb6d642-b8a2-4494-8fe7-e3770069d95f"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4258),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4259),
                            ModifiedBy = "",
                            Name = "# File Format"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("c2babefe-1c68-4db8-96ea-3b981ed72f74"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4265),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4265),
                            ModifiedBy = "",
                            Name = "# File Render"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("8c26b011-6329-4791-b93e-af9417f22d6b"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4267),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4267),
                            ModifiedBy = "",
                            Name = "Music Genre"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("2659002d-b3ce-49a7-9129-a1ee4b3e8622"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4269),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4269),
                            ModifiedBy = "",
                            Name = "Music Theory"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("769c545e-3d0f-4cec-9e08-604ee9f58ba0"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4273),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4273),
                            ModifiedBy = "",
                            Name = "Keys"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("4ad4943b-4f91-4167-a803-929d52a5130f"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4277),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4277),
                            ModifiedBy = "",
                            Name = "Brass"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("115a3856-2428-4f01-b0c2-97e6c8215090"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4278),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4279),
                            ModifiedBy = "",
                            Name = "Strings"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("85579e22-8f4e-4384-8663-aaf478b5489d"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4280),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4281),
                            ModifiedBy = "",
                            Name = "Percussions"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("669105ce-bb07-4a4f-9052-a1b07e533d01"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4282),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4283),
                            ModifiedBy = "",
                            Name = "Woodwinds"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("d5d635ce-d70e-4f57-975f-819b009d43d3"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4286),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4286),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("5f6cdba1-294d-4af0-a359-6a8c6b7f03c8"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4288),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4288),
                            ModifiedBy = "",
                            Name = "Fun"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("01d557b7-588e-4976-b08f-efcb4ed76a8f"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4290),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4290),
                            ModifiedBy = "",
                            Name = "Guitar"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Task", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("09/13/2024 17:11:10");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("7d550861-6ef9-4194-ac08-be08ad96d430"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4385),
                            CreatedBy = "",
                            DateEnd = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4384),
                            DateStart = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4383),
                            Description = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4385),
                            ModifiedBy = "",
                            Name = "Check Mails",
                            TaskCategoryId = 5
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("5fddb189-2e9e-4489-83bd-d33fd7501b07"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4341),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4341),
                            ModifiedBy = "",
                            Name = "PAD Mobile"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("c3587ed9-1490-4ca7-9ce4-9fd5deac8445"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4349),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4349),
                            ModifiedBy = "",
                            Name = "PAD Cave"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("804e07dd-1627-49f4-ab39-db069ef585ed"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4351),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4351),
                            ModifiedBy = "",
                            Name = "PAD Kids"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("a3173e70-1a46-42ba-a326-405aae114c29"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4353),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4353),
                            ModifiedBy = "",
                            Name = "Shopping"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("d1d51157-38df-4384-9741-4bec46b3bf75"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4355),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4355),
                            ModifiedBy = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.User", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Birthdate = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("4957456e-5540-46a8-a1aa-cccce08d0a98"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4894),
                            CreatedBy = "",
                            Email = "tonyvan@live.fr",
                            FirstName = "Tony",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4895),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 103, 86, 32, 171, 226, 35, 239, 246, 244, 201, 228, 238, 44, 136, 64, 249, 0, 103, 172, 93, 129, 45, 158, 16, 158, 69, 79, 20, 76, 182, 27, 92, 8, 231, 99, 217, 75, 193, 1, 77, 134, 204, 83, 183, 61, 150, 66, 188, 236, 226, 146, 178, 223, 206, 170, 152, 216, 125, 108, 110, 246, 104, 7, 102 },
                            PasswordSalt = new byte[] { 207, 9, 214, 169, 146, 168, 105, 239, 245, 5, 57, 135, 133, 184, 182, 26, 180, 150, 227, 207, 160, 137, 185, 45, 66, 20, 108, 77, 227, 50, 124, 213, 66, 153, 67, 97, 58, 155, 44, 138, 147, 61, 4, 25, 190, 149, 97, 241, 4, 214, 88, 234, 251, 46, 124, 228, 205, 61, 184, 53, 239, 215, 143, 163, 238, 145, 28, 196, 64, 57, 205, 0, 18, 97, 137, 80, 174, 247, 189, 136, 94, 25, 230, 187, 108, 156, 190, 233, 88, 158, 17, 95, 110, 131, 16, 128, 92, 12, 55, 181, 210, 9, 183, 204, 223, 190, 103, 16, 203, 156, 118, 181, 248, 208, 188, 142, 38, 172, 27, 162, 199, 238, 188, 189, 33, 226, 71, 225 },
                            Role = 2
                        },
                        new
                        {
                            EntityId = 2,
                            Birthdate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("acd5074f-e109-435b-86e3-82c0c3bf1b0c"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4932),
                            CreatedBy = "",
                            Email = "floppy@gmail.com",
                            FirstName = "Floppy",
                            LastName = "Disk",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4932),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 193, 70, 73, 157, 41, 138, 53, 128, 219, 130, 189, 116, 40, 117, 68, 229, 156, 130, 207, 35, 226, 66, 142, 142, 133, 35, 193, 48, 230, 245, 129, 103, 93, 255, 88, 30, 57, 182, 131, 126, 227, 252, 111, 24, 169, 22, 85, 63, 219, 205, 182, 127, 70, 34, 178, 11, 59, 15, 244, 137, 35, 104, 63, 60 },
                            PasswordSalt = new byte[] { 78, 67, 103, 64, 79, 180, 87, 131, 118, 50, 173, 245, 53, 151, 80, 232, 210, 207, 190, 26, 28, 205, 116, 153, 77, 52, 200, 21, 177, 92, 21, 199, 204, 10, 215, 193, 191, 7, 15, 187, 233, 66, 159, 226, 86, 161, 66, 50, 239, 160, 102, 252, 82, 230, 222, 252, 173, 62, 183, 187, 142, 216, 217, 187, 215, 93, 140, 80, 205, 241, 10, 162, 44, 186, 29, 98, 85, 240, 182, 61, 213, 184, 17, 205, 112, 34, 222, 56, 232, 97, 216, 213, 225, 139, 122, 28, 134, 79, 105, 164, 169, 49, 101, 158, 63, 199, 23, 120, 136, 53, 123, 139, 76, 212, 114, 130, 190, 5, 105, 39, 204, 129, 14, 209, 12, 153, 108, 135 },
                            Role = 1
                        },
                        new
                        {
                            EntityId = 3,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("48e76674-e194-40a9-b4d0-4458602ab7f0"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4961),
                            CreatedBy = "",
                            Email = "vincent.megag@gmail.com",
                            FirstName = "Vincent",
                            LastName = "Megag",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(4961),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 140, 21, 149, 153, 92, 59, 48, 251, 144, 216, 147, 183, 166, 200, 21, 136, 45, 101, 135, 7, 117, 124, 147, 87, 239, 108, 234, 51, 237, 151, 161, 54, 47, 62, 145, 56, 133, 97, 121, 74, 3, 254, 50, 210, 113, 230, 210, 253, 98, 235, 18, 254, 67, 19, 39, 164, 247, 66, 15, 73, 236, 246, 29, 27 },
                            PasswordSalt = new byte[] { 68, 88, 203, 76, 75, 161, 22, 216, 85, 104, 81, 142, 0, 211, 89, 112, 142, 171, 30, 186, 110, 218, 24, 67, 243, 0, 174, 132, 121, 15, 198, 234, 83, 56, 143, 75, 158, 153, 65, 138, 186, 53, 174, 203, 19, 87, 113, 252, 56, 62, 49, 130, 176, 202, 75, 214, 102, 136, 223, 86, 9, 162, 15, 23, 138, 197, 208, 33, 208, 0, 165, 171, 138, 238, 34, 218, 48, 164, 194, 14, 6, 109, 101, 138, 115, 230, 53, 31, 164, 168, 52, 171, 220, 46, 35, 111, 237, 211, 60, 76, 208, 103, 7, 251, 128, 178, 189, 55, 225, 35, 185, 74, 115, 89, 14, 67, 130, 227, 165, 54, 181, 20, 217, 150, 90, 247, 224, 116 },
                            Role = 2
                        },
                        new
                        {
                            EntityId = 4,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("098df21c-3435-4d1e-b35f-1ab00773509b"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(5027),
                            CreatedBy = "",
                            Email = "test@test.com",
                            FirstName = "Admin",
                            LastName = "...",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(5028),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 73, 55, 64, 54, 62, 253, 147, 253, 247, 225, 103, 244, 8, 81, 251, 129, 207, 213, 206, 120, 184, 225, 168, 146, 122, 114, 115, 146, 125, 180, 188, 204, 247, 76, 209, 174, 103, 109, 162, 201, 209, 213, 152, 163, 123, 249, 15, 241, 37, 178, 144, 16, 47, 116, 104, 31, 31, 79, 203, 236, 219, 10, 137, 196 },
                            PasswordSalt = new byte[] { 19, 167, 117, 10, 253, 23, 168, 215, 202, 85, 68, 20, 139, 175, 167, 231, 249, 245, 178, 60, 237, 185, 47, 39, 111, 220, 213, 110, 169, 212, 159, 51, 214, 2, 216, 253, 63, 0, 88, 137, 43, 130, 12, 198, 49, 211, 150, 58, 177, 43, 108, 251, 124, 80, 167, 163, 139, 73, 170, 41, 34, 150, 167, 119, 206, 196, 163, 31, 243, 26, 27, 154, 118, 122, 176, 48, 127, 64, 135, 0, 79, 24, 229, 114, 74, 218, 75, 144, 224, 120, 213, 107, 186, 119, 190, 156, 196, 90, 83, 21, 68, 221, 176, 206, 202, 240, 189, 8, 197, 230, 79, 184, 6, 7, 247, 187, 106, 153, 139, 194, 220, 176, 10, 8, 103, 86, 254, 110 },
                            Role = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Document", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Document_Size");
                        });

                    b.HasDiscriminator().HasValue("Document");
                });

            modelBuilder.Entity("MB.Domain.Entities.Image", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Image");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2465),
                            CreatedBy = "",
                            Description = "In Chords Chart",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2466),
                            ModifiedBy = "",
                            Name = " Major Key Notes",
                            Score = 0,
                            Type = 1,
                            Height = 510,
                            Size = 61206,
                            Width = 359
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2484),
                            CreatedBy = "",
                            Description = "7 Notes, 7 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2484),
                            ModifiedBy = "",
                            Name = "Major Diatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 940,
                            Size = 136462,
                            Width = 700
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2490),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2490),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1361,
                            Size = 562138,
                            Width = 868
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2493),
                            CreatedBy = "",
                            Description = "5 Notes, 5 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2493),
                            ModifiedBy = "",
                            Name = "Pentatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 524,
                            Size = 74358,
                            Width = 250
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2495),
                            CreatedBy = "",
                            Description = "Color Measure",
                            Extension = "png",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2495),
                            ModifiedBy = "",
                            Name = "Intervals",
                            Score = 0,
                            Type = 1,
                            Height = 844,
                            Size = 56324,
                            Width = 556
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2499),
                            CreatedBy = "",
                            Description = "Absolute Basics",
                            Extension = "png",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2499),
                            ModifiedBy = "",
                            Name = "Time Measure",
                            Score = 0,
                            Type = 1,
                            Height = 255,
                            Size = 8992,
                            Width = 400
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2501),
                            CreatedBy = "",
                            Description = "Natural Order",
                            Extension = "webp",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2502),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            Score = 0,
                            Type = 1,
                            Height = 226,
                            Size = 30964,
                            Width = 600
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2504),
                            CreatedBy = "",
                            Description = "Communication is important",
                            Extension = "png",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2504),
                            ModifiedBy = "",
                            Name = "Guitar Vocabulary",
                            Score = 0,
                            Type = 1,
                            Height = 705,
                            Size = 99994,
                            Width = 512
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2506),
                            CreatedBy = "",
                            Description = "Diatonic Chords in C Major",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2507),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1317,
                            Size = 204898,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2509),
                            CreatedBy = "",
                            Description = "Mmm... You can tell, right ?",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2510),
                            ModifiedBy = "",
                            Name = "Piano Scales",
                            Score = 0,
                            Type = 1,
                            Height = 900,
                            Size = 91482,
                            Width = 695
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2514),
                            CreatedBy = "",
                            Description = "Overview",
                            Extension = "gif",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2514),
                            ModifiedBy = "",
                            Name = "Tessitures",
                            Score = 0,
                            Type = 1,
                            Height = 709,
                            Size = 62391,
                            Width = 1026
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2516),
                            CreatedBy = "",
                            Description = "Circle of Life",
                            Extension = "png",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2516),
                            ModifiedBy = "",
                            Name = "Chord Wheel",
                            Score = 0,
                            Type = 1,
                            Height = 950,
                            Size = 663017,
                            Width = 950
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2518),
                            CreatedBy = "",
                            Description = " ... ",
                            Extension = "jpeg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2519),
                            ModifiedBy = "",
                            Name = "The Mix is Almost Perfect",
                            Score = 0,
                            Type = 1,
                            Height = 480,
                            Size = 45254,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2521),
                            CreatedBy = "",
                            Description = "Basic Chords / Different Keys",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2521),
                            ModifiedBy = "",
                            Name = "Guitar Progressions",
                            Score = 0,
                            Type = 1,
                            Height = 690,
                            Size = 167969,
                            Width = 552
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc3"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2523),
                            CreatedBy = "",
                            Description = "Les 3, c'est NON !",
                            Extension = "jpeg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2524),
                            ModifiedBy = "",
                            Name = "Vous le voulez comment votre projet ?",
                            Score = 0,
                            Type = 1,
                            Height = 960,
                            Size = 205144,
                            Width = 720
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2526),
                            CreatedBy = "",
                            Description = "1, 2, 3, 4, 5",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2526),
                            ModifiedBy = "",
                            Name = "Fingers Numerotation",
                            Score = 0,
                            Type = 1,
                            Height = 233,
                            Size = 24030,
                            Width = 350
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2528),
                            CreatedBy = "",
                            Description = "My actual Keyboard",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2528),
                            ModifiedBy = "",
                            Name = "Roland FP-30",
                            Score = 0,
                            Type = 1,
                            Height = 368,
                            Size = 87596,
                            Width = 1680
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2531),
                            CreatedBy = "",
                            Description = "How to build a chord",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2532),
                            ModifiedBy = "",
                            Name = "Chord Formula's",
                            Score = 0,
                            Type = 1,
                            Height = 1109,
                            Size = 221030,
                            Width = 1080
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc4"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2535),
                            CreatedBy = "",
                            Description = "Valeurs de Temps",
                            Extension = "webp",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2536),
                            ModifiedBy = "",
                            Name = "Time Values",
                            Score = 0,
                            Type = 1,
                            Height = 530,
                            Size = 21922,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd4"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2538),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2538),
                            ModifiedBy = "",
                            Name = "Guitar Chords ( B )",
                            Score = 0,
                            Type = 1,
                            Height = 909,
                            Size = 57447,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2540),
                            CreatedBy = "",
                            Description = "Primary Modes",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2541),
                            ModifiedBy = "",
                            Name = "Modes starting in C",
                            Score = 0,
                            Type = 1,
                            Height = 1552,
                            Size = 111187,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2543),
                            CreatedBy = "",
                            Description = "Good luck finding the good one ...",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2543),
                            ModifiedBy = "",
                            Name = "Guitar Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1913,
                            Size = 633229,
                            Width = 1200
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc5"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2545),
                            CreatedBy = "",
                            Description = "Une approche parmis tant d'autres",
                            Extension = "png",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2546),
                            ModifiedBy = "",
                            Name = "Intervalles",
                            Score = 0,
                            Type = 1,
                            Height = 971,
                            Size = 69313,
                            Width = 692
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Video", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Height")
                                .HasColumnName("Video_Height");

                            t.Property("Size")
                                .HasColumnName("Video_Size");

                            t.Property("Width")
                                .HasColumnName("Video_Width");
                        });

                    b.HasDiscriminator().HasValue("Video");

                    b.HasData(
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2586),
                            CreatedBy = "",
                            Description = " Bendy & The Ink Machine ",
                            Extension = "mp4",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2586),
                            ModifiedBy = "",
                            Name = "BATIM - Build our Machine",
                            Score = 0,
                            Type = 2,
                            Duration = 64,
                            Height = 360,
                            Size = 5091239,
                            Width = 640
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.VideoYouTube", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("VideoYouTube");

                    b.HasData(
                        new
                        {
                            EntityId = 85,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                            Created = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2613),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "",
                            Modified = new DateTime(2024, 9, 13, 15, 11, 10, 311, DateTimeKind.Utc).AddTicks(2613),
                            ModifiedBy = "",
                            Name = "Mario Bros 3 Cover",
                            Score = 0,
                            Type = 4,
                            Url = "WWUxrTdjqg0"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Style", "Style")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookFranchise", b =>
                {
                    b.HasOne("MB.Domain.Entities.Book", "Book")
                        .WithMany("BookFranchise")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("BookFranchise")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Book", "Book")
                        .WithMany("BookModel")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("BookModel")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Media", "Media")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("LinkArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkArtists")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
                {
                    b.HasOne("MB.Domain.Entities.LinkCategory", "LinkCategory")
                        .WithMany("RLinkCategories")
                        .HasForeignKey("LinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("LinkCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkModels")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("LinkModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("MoodArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodArtists")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("MoodModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodModels")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
                {
                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodTags")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Tag", "Tag")
                        .WithMany("MoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.HasOne("MB.Domain.Entities.TagCategory", "TagCategory")
                        .WithMany("Tags")
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.Task", b =>
                {
                    b.HasOne("MB.Domain.Entities.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
                {
                    b.Navigation("ArtistStyles");

                    b.Navigation("LinkArtists");

                    b.Navigation("MoodArtists");
                });

            modelBuilder.Entity("MB.Domain.Entities.Book", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("BookModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("FranchiseMedias");

                    b.Navigation("FranchiseModels");

                    b.Navigation("MoodFranchises");
                });

            modelBuilder.Entity("MB.Domain.Entities.Link", b =>
                {
                    b.Navigation("LinkArtists");

                    b.Navigation("LinkCategories");

                    b.Navigation("LinkModels");
                });

            modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
                {
                    b.Navigation("RLinkCategories");
                });

            modelBuilder.Entity("MB.Domain.Entities.Media", b =>
                {
                    b.Navigation("FranchiseMedias");
                });

            modelBuilder.Entity("MB.Domain.Entities.Model", b =>
                {
                    b.Navigation("BookModel");

                    b.Navigation("FranchiseModels");

                    b.Navigation("LinkModels");

                    b.Navigation("MoodModels");
                });

            modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
                {
                    b.Navigation("MoodArtists");

                    b.Navigation("MoodFranchises");

                    b.Navigation("MoodModels");

                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.Entities.Style", b =>
                {
                    b.Navigation("ArtistStyles");
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
