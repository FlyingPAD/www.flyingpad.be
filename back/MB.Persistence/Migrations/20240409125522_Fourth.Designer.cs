// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240409125522_Fourth")]
    partial class Fourth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("75d46add-07b7-4b83-abee-ca35ab6e75c8"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8214),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8216),
                            ModifiedBy = "",
                            Name = "# Unknown Artist",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("07d442ba-fcfd-4eae-a9b6-c60346f46bb6"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8223),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8224),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("d5021186-7119-45ae-bc9e-16b213a91bb7"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8233),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8233),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Illustrator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("123c9ff4-72cf-43e7-afaf-81e519619440"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8235),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8236),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("d154b420-bf20-4b04-b0e7-c995bd8348c3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8237),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8238),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("4f0eee6d-5c31-4bd9-a054-29d0b24fac70"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8241),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8241),
                            ModifiedBy = "",
                            Name = "/ Unknown A.I. User",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("fce29fbc-6e4b-4078-aed4-e9fd789b88db"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8244),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8245),
                            ModifiedBy = "",
                            Name = "/ Unknown Musician",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("8a744220-3731-432f-846d-609f2b26434f"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8246),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8246),
                            ModifiedBy = "",
                            Name = "/ Unknown Photographer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("a38b8f71-01db-4c00-90f3-8956554910f1"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8248),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8248),
                            ModifiedBy = "",
                            Name = "/ Unknown Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("0c238225-5264-4e2f-ab53-f967db5f0ba6"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8250),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8250),
                            ModifiedBy = "",
                            Name = "/ Unknown Videast",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("46bd5b20-b253-463e-8031-f8eff490ac2a"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8253),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8253),
                            ModifiedBy = "",
                            Name = "/ Unknown Writer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("d5079614-f5c7-48d5-9ace-80d7ad82e299"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8255),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8255),
                            ModifiedBy = "",
                            Name = "Flying PAD",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("fd2f9e92-1c76-47a6-8f66-6128bc3c3a3d"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8257),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8257),
                            ModifiedBy = "",
                            Name = "Soën9048",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("0396c81a-4c97-4d1a-aa52-a1ec7ba8e1aa"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8258),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8258),
                            ModifiedBy = "",
                            Name = "CohesivePanda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("c7df0bc2-c9c6-4c3c-9f19-cc335b79149f"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8261),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8262),
                            ModifiedBy = "",
                            Name = "Nobuo Uematsu",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("0455fd6e-3a8c-4c55-a582-fb5cdae75ce6"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8263),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8263),
                            ModifiedBy = "",
                            Name = "Eichiro Oda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("7b3e5295-53d2-4372-bb57-65b2105c0f6e"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8265),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8265),
                            ModifiedBy = "",
                            Name = "Masashi Kishimoto",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("983a0aa4-a309-4f7d-97e7-93fe786c2468"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8267),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8268),
                            ModifiedBy = "",
                            Name = "Dali",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("925403f2-0b51-4962-924b-04fdf99c7cf7"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8270),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8271),
                            ModifiedBy = "",
                            Name = "Yoko Shimomura",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("a199c15d-aa14-4893-b45b-744197d61dd6"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8272),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8272),
                            ModifiedBy = "",
                            Name = "Michael Jackson",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("ef0b4635-a96a-4d3f-b4c1-b16ea97ee3ee"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8274),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8274),
                            ModifiedBy = "",
                            Name = "CG5",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("a1df4c82-543e-4d2d-8e65-74de96117bf4"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8276),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8276),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("53d9cf61-276f-41cd-a5a9-4898bb8aa198"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8279),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8279),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Pseudonym = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Board", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.ToTable("Board");
                });

            modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("b48c2434-d90e-452e-ac77-86c86aaaab81"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8516),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8516),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("0be700d5-0718-49c3-b723-bcbbaa959e21"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8523),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8524),
                            ModifiedBy = "",
                            Name = "Street Fighter"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Link", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("b1ba0a83-cda0-4e5a-afa0-d8f9b020a6d2"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8673),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8674),
                            ModifiedBy = "",
                            Name = "KVR",
                            Url = "https://www.kvraudio.com/"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("3d9f68ae-a829-4408-bf3f-200182bd60e8"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8681),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8682),
                            ModifiedBy = "",
                            Name = "MuseScore",
                            Url = "https://musescore.com/"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("af336891-ffef-4722-8721-4abf6d8be134"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8687),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8687),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.native-instruments.com"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("85c76af1-21a3-43e3-b4d0-847110a79f42"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8690),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8690),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.steinberg.net/"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("00483056-6981-47a0-b47e-e5abc895cf78"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8693),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8693),
                            ModifiedBy = "",
                            Name = "Clés pour l'harmonie",
                            Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("6171fdac-1dbb-404d-8506-d63b38ead4a4"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8696),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8697),
                            ModifiedBy = "",
                            Name = "Google | Metronome",
                            Url = "https://www.google.com/search?q=metronome"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("8497942f-8140-4b63-91a9-81f8d9dc0ddc"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8701),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8701),
                            ModifiedBy = "",
                            Name = "Google | Stopwatch",
                            Url = "https://www.google.com/search?q=stopwatch"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("96fe5003-70cc-4fba-9943-763f568270b2"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8703),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8704),
                            ModifiedBy = "",
                            Name = "Google | Timer",
                            Url = "https://www.google.com/search?q=timer"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("201eae66-b687-49e1-8d77-313c61037721"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8706),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8706),
                            ModifiedBy = "",
                            Name = "Mangold Project",
                            Url = "https://www.youtube.com/@MangoldProject"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("3dfd95aa-95f3-45af-a790-15b71eccc13b"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8709),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8709),
                            ModifiedBy = "",
                            Name = "# YouTube",
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("ebe28bd1-709c-40e7-87d8-28ffa1007576"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8713),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8714),
                            ModifiedBy = "",
                            Name = "Piano Jazz Concept",
                            Url = "https://www.youtube.com/@Pianojazzconcept"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("ce14f831-86cd-4aaa-8b2f-bcaf91afe79d"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8715),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8716),
                            ModifiedBy = "",
                            Name = "Rick Beato",
                            Url = "https://www.youtube.com/@RickBeato"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("3779c480-e5af-4d42-b59c-af4f98e6ec2a"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8718),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8718),
                            ModifiedBy = "",
                            Name = "Pianote",
                            Url = "https://www.youtube.com/@PianoteOfficial"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("46d90171-e743-4746-be46-8c809f554dcc"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8720),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8721),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Url = "https://www.youtube.com/@TryHardNinja"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("2a0421ce-0447-445a-9705-9e5ad7747489"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8724),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8725),
                            ModifiedBy = "",
                            Name = "Kyle Allen Music",
                            Url = "https://www.youtube.com/@KyleAllenMusic"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("54e24703-c174-41ff-a8a2-1a5f17e2b92d"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8727),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8727),
                            ModifiedBy = "",
                            Name = "Ableton",
                            Url = "https://www.youtube.com/@Ableton"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("db6d1217-8bd4-4e15-9c02-ef2130d99f7e"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8729),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8729),
                            ModifiedBy = "",
                            Name = "La Machine à Mixer",
                            Url = "https://www.youtube.com/@lamachineamixer"
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("7bb5b89a-5a00-464b-a6c9-5517e31c2d41"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8765),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8766),
                            ModifiedBy = "",
                            Name = "Audiofanzine",
                            Url = "https://www.youtube.com/@audiofanzine"
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("138beda3-9e33-44fd-ad87-d640193ab5bf"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8770),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8770),
                            ModifiedBy = "",
                            Name = "Cubase",
                            Url = "https://www.youtube.com/@Cubase"
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("894c2b83-7e1b-445e-b9e1-9021dc205935"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8772),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8773),
                            ModifiedBy = "",
                            Name = "Ten Second Songs",
                            Url = "https://www.youtube.com/@TenSecondSongs"
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("f17695fa-1226-4890-b7da-5e73c977ed07"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8775),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8775),
                            ModifiedBy = "",
                            Name = "The Piano Guys",
                            Url = "https://www.youtube.com/@thepianoguys"
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("6c206636-dbae-4f88-8f07-e5f726044619"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8777),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8777),
                            ModifiedBy = "",
                            Name = "CG5",
                            Url = "https://www.youtube.com/@CG5"
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("4028a28c-2516-4f8a-9cae-96ba1f4c00c6"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8783),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8783),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.youtube.com/@NativeInstruments"
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("9e275ccb-5e6b-4608-bc5c-5e9898b0ec5a"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8785),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8786),
                            ModifiedBy = "",
                            Name = "Ken Tamplin Vocal Academy",
                            Url = "https://www.youtube.com/@kentamplin"
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("21e00bdf-659d-4b58-8369-0913ce720c25"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8788),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8788),
                            ModifiedBy = "",
                            Name = "Pentatonix",
                            Url = "https://www.youtube.com/@PTXofficial"
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("b2fe64e0-5a1c-4ef3-89b7-7efa332d4aec"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8790),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8791),
                            ModifiedBy = "",
                            Name = "Recording Revolution",
                            Url = "https://www.youtube.com/@recordingrevolution"
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("add096f6-be28-4df8-9920-2acc2b29a120"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8794),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8795),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Url = "https://www.youtube.com/@jacobcollier"
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("d09c1f38-9435-4ddf-bd84-df1102819e3f"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8797),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8797),
                            ModifiedBy = "",
                            Name = "Orchestration Online",
                            Url = "https://www.youtube.com/@OrchestrationOnline"
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("58152ed2-cea7-4189-bf9a-948b66e6ec6a"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8799),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8799),
                            ModifiedBy = "",
                            Name = "Nuendo",
                            Url = "https://www.youtube.com/@Nuendo"
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("f62eac67-34c2-4c04-945d-ea14a3709881"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8801),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8801),
                            ModifiedBy = "",
                            Name = "reFX",
                            Url = "https://www.youtube.com/@reFXaudio"
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("0ea4782f-fd4a-497f-9027-ba1ff7afe106"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8805),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8806),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.youtube.com/@steinberg"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("LinkCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("3710833a-f0db-4c08-95b5-4216d1293664"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8865),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8866),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("9b759cd9-9e52-4f72-93cd-6ed4b2d4b5da"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8872),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8872),
                            ModifiedBy = "",
                            Name = "Audio | Mix & Master"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("4461c6e3-db79-4661-b890-37cba1d6ca1e"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8874),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8874),
                            ModifiedBy = "",
                            Name = "Audio | Sound Design"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("e886835d-ce70-407a-88d2-955fd72bccb3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8878),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8878),
                            ModifiedBy = "",
                            Name = "Books"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("96ecba2c-1fb5-44fe-8c7e-5762804660ea"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8880),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8881),
                            ModifiedBy = "",
                            Name = "Books | Harmony"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("3f5f1097-d1d8-4abe-b7be-74146fbe705b"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8884),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8884),
                            ModifiedBy = "",
                            Name = "Software"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("508661c3-bac1-4fe8-a24d-8857be1e6b78"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8886),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8886),
                            ModifiedBy = "",
                            Name = "Software | D.A.W."
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("c73323ff-7d53-426e-b29c-fc823bfa47ca"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8890),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8890),
                            ModifiedBy = "",
                            Name = "Software | V.S.T."
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("d106942b-4d2f-419b-8d33-0f30db1c2346"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8892),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8892),
                            ModifiedBy = "",
                            Name = "Software | Music Notation"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("39cd1a15-0162-4b4c-829b-0539a915330e"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8895),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8895),
                            ModifiedBy = "",
                            Name = "Tools"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("b6055549-a4b0-4913-b157-186aa6cf6f82"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8897),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8897),
                            ModifiedBy = "",
                            Name = "Tools | Global"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("b13bf468-970b-420b-82a5-baf2a32664d4"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8901),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8901),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("8e4b16af-c50a-4ff7-8f59-6e7c68594f51"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8904),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8904),
                            ModifiedBy = "",
                            Name = "YouTube | Artists"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("6d953d5c-a836-4021-bc67-fcfaa5d4e22e"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8907),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8907),
                            ModifiedBy = "",
                            Name = "YouTube | Audio"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("89767ffb-36ca-46e4-8c85-5fdcab6d06b9"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8909),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8909),
                            ModifiedBy = "",
                            Name = "YouTube | Piano & Keys"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Media", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("21d91dd8-90d5-4e37-a933-6f49eadeeca8"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8548),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8548),
                            ModifiedBy = "",
                            Name = "# Unrelated"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("cef75850-e136-4d11-be17-d1841b6bed87"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8552),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8552),
                            ModifiedBy = "",
                            Name = "# Unknown"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("a60b7c9b-7570-4cb0-b672-cb051525c26d"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8554),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8554),
                            ModifiedBy = "",
                            Name = "# Super Franchise"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("475c34e0-07f9-4e95-9640-2789f656c8c3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8557),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8558),
                            ModifiedBy = "",
                            Name = "TV"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("451b6901-4e56-4f4e-be26-5fbcd7f70f31"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8559),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8559),
                            ModifiedBy = "",
                            Name = "Radio"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("018335f6-aeb1-4c1b-a041-3801ac48a484"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8562),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8562),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("3052e44a-64b6-4c20-9ce3-a43c2b320881"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8563),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8564),
                            ModifiedBy = "",
                            Name = "Capcom"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("d5013281-0e9f-4eca-9665-681b111e9044"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8567),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8567),
                            ModifiedBy = "",
                            Name = "Square-Enix"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("3e2a6b5d-92ec-4553-9962-24f3a1f158a0"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8569),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8569),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Model", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("9746dc52-86d0-4e9f-89e1-b6984595a082"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9067),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9068),
                            ModifiedBy = "",
                            Pseudonym = "# Unknown Model"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("5bc73ccf-4e01-4e1b-9a61-38faea4c4886"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9075),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9076),
                            ModifiedBy = "",
                            Pseudonym = "/ Unrelated Model"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("3fa019f2-94bd-44c4-b61e-ef00ebfc73d6"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9078),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "Tony",
                            Gender = "M",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9078),
                            ModifiedBy = "",
                            Pseudonym = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Moods");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Mood");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("RArtistStyle");

                    b.HasData(
                        new
                        {
                            ArtistId = 12,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 12,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 13,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 14,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 15,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 16,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 17,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 18,
                            StyleId = 1
                        },
                        new
                        {
                            ArtistId = 19,
                            StyleId = 2
                        },
                        new
                        {
                            ArtistId = 20,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 21,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 22,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 23,
                            StyleId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RFranchiseMedia");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            MediaId = 9
                        },
                        new
                        {
                            FranchiseId = 2,
                            MediaId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RFranchiseModel");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            ModelId = 3
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RLinkArtist");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("LinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "LinkCategoryId");

                    b.HasIndex("LinkCategoryId");

                    b.ToTable("RLinkCategory");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 9
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 4,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 4
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 5
                        },
                        new
                        {
                            LinkId = 6,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 7,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 8,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 10,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 12,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 13,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 15,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 16,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 17,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 18,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 19,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 20,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 21,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 22,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 23,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 24,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 25,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 2
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 14
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 28,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 29,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 30,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 31,
                            LinkCategoryId = 12
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RLinkModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RMoodArtist");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ArtistId = 12
                        },
                        new
                        {
                            MoodId = 13,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RMoodFranchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RMoodModel");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ModelId = 3
                        },
                        new
                        {
                            MoodId = 13,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ModelId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RMoodTag");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 8
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 19
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 58
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 43
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Style", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("e60bebbd-7b7d-45ac-a886-96cea90e2354"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8391),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8392),
                            ModifiedBy = "",
                            Name = "2D"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("52231342-0e7f-4927-b9be-9e7d5fe50e4b"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8397),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8397),
                            ModifiedBy = "",
                            Name = "2D Animation"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cad5e9ea-e19e-4a18-96a5-4d7152e12992"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8399),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8399),
                            ModifiedBy = "",
                            Name = "3D"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("a7e52799-3dff-4de3-a747-357034b4e05b"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8404),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8404),
                            ModifiedBy = "",
                            Name = "3D Animation"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("c97497cd-f310-485e-a2ad-3f0169921ac6"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8406),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8406),
                            ModifiedBy = "",
                            Name = "Architecture"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("5f324f98-0254-4df7-9a82-1e6e90601410"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8408),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8409),
                            ModifiedBy = "",
                            Name = "Writer"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("ff459a69-379b-4bb8-a960-526bac2e4336"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8410),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8411),
                            ModifiedBy = "",
                            Name = "Music"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("7d2e7f5d-7479-436e-a99b-3a7e1addad38"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8439),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8439),
                            ModifiedBy = "",
                            Name = "Photo"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("e1c8c5cc-0ccf-4cfc-9658-ddeab69ff121"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8441),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8441),
                            ModifiedBy = "",
                            Name = "Video"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("702033e9-b499-4ea3-96ed-a3f3742e66b3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8444),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(8444),
                            ModifiedBy = "",
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TagCategoryId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("93ee90eb-362c-446a-b156-55144e036087"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9665),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9665),
                            ModifiedBy = "",
                            Name = "# All Files",
                            TagCategoryId = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("f2ae020f-9c56-4d9e-b814-c74e8db52904"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9671),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9672),
                            ModifiedBy = "",
                            Name = "Audio",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("9038a1a3-2c29-406a-8551-19063c4f34c3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9674),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9674),
                            ModifiedBy = "",
                            Name = "Document",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("2f89d1cd-91e7-45a2-8c82-3d0775b8502c"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9675),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9676),
                            ModifiedBy = "",
                            Name = "Image",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("35bbc49c-9f8a-4d94-b27a-376d886931be"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9677),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9677),
                            ModifiedBy = "",
                            Name = "Video",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("35d517ec-0e9a-4155-a51d-5886672f8087"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9681),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9682),
                            ModifiedBy = "",
                            Name = "*.txt",
                            TagCategoryId = 3
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("917e7621-0429-4b06-b1cf-f9792d232c96"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9683),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9684),
                            ModifiedBy = "",
                            Name = "*.bmp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("a18fa975-1e20-404c-b988-dedf3a11685c"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9685),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9685),
                            ModifiedBy = "",
                            Name = "*.gif",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("56d14ff4-b207-46da-b069-ee459f629413"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9687),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9687),
                            ModifiedBy = "",
                            Name = "*.jpeg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("530022fe-c75c-499c-9838-fb481e2fe327"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9691),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9691),
                            ModifiedBy = "",
                            Name = "*.jpg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("d04eb623-9ef2-4c6f-9c4b-ebd2702c584e"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9693),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9693),
                            ModifiedBy = "",
                            Name = "*.png",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("46833c45-8dac-4c1c-afc9-3dd18e8050b5"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9695),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9695),
                            ModifiedBy = "",
                            Name = "*.webp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("94bc239b-a54d-4f49-8ac6-384826249b1c"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9697),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9697),
                            ModifiedBy = "",
                            Name = "*.mp4",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("5ace4ad8-3728-415f-979c-7bc3643d9172"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9700),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9700),
                            ModifiedBy = "",
                            Name = "*.webm",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("32240f18-6b36-420c-b5d7-bb0b5581b501"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9702),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9702),
                            ModifiedBy = "",
                            Name = "Landscape",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("4a1d40db-05de-46ad-8d69-7d243e6c2958"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9703),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9704),
                            ModifiedBy = "",
                            Name = "Landscape ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("1e026a79-5670-4fb3-af5e-23c286be8436"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9705),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9706),
                            ModifiedBy = "",
                            Name = "Portrait",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("e7379c4e-d6b7-4fee-a9ad-812da69b9cea"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9735),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9735),
                            ModifiedBy = "",
                            Name = "Portrait ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("f138bbf8-a052-412c-b522-6b8bb6c9563c"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9737),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9737),
                            ModifiedBy = "",
                            Name = "Square",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("574aa8cd-2615-4572-b4b2-594f1f8f8858"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9739),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9739),
                            ModifiedBy = "",
                            Name = "2D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("0c246e9a-f4c0-4861-82d4-ee2a5a4743cf"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9741),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9741),
                            ModifiedBy = "",
                            Name = "2D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("064856bb-fd54-4b97-988a-402b1cd0131f"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9744),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9744),
                            ModifiedBy = "",
                            Name = "3D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("ca077f83-bb9f-4eb2-9727-7cb35b28fb76"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9746),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9746),
                            ModifiedBy = "",
                            Name = "3D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("4ad2f488-0e84-4f25-adb7-d49b9fe03bc5"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9747),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9748),
                            ModifiedBy = "",
                            Name = "Photo",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("efb88d74-ccee-4601-9327-d9709e9c2d19"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9751),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9751),
                            ModifiedBy = "",
                            Name = "Photo | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("ffc9962d-1168-4ce0-a892-7861015440c1"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9754),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9754),
                            ModifiedBy = "",
                            Name = "E.D.M.",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("505f6ac7-6c0a-43e6-a49e-6a5ece4a1d83"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9756),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9756),
                            ModifiedBy = "",
                            Name = "Jazz",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("44d0e8d0-37dc-4e9c-a9e2-964b7ca2be69"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9757),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9758),
                            ModifiedBy = "",
                            Name = "Metal",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("51230685-de5d-47c2-8037-0c7760a5d117"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9759),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9759),
                            ModifiedBy = "",
                            Name = "Orchestral",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("aadccf3a-f8ae-4d7f-8995-39286a1aba55"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9763),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9763),
                            ModifiedBy = "",
                            Name = "Pop Music",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("95ae2acf-69c6-42c2-b7c4-59d4bc3eb9f5"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9765),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9765),
                            ModifiedBy = "",
                            Name = "Rap",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("958c2b0f-6288-455f-9b3b-dcaee77267bd"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9767),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9767),
                            ModifiedBy = "",
                            Name = "Rock",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 33,
                            BusinessId = new Guid("0d0980c1-6734-4678-93bd-c84e6246e4e4"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9768),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9769),
                            ModifiedBy = "",
                            Name = "Traditional",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 34,
                            BusinessId = new Guid("a7153a4f-52d4-47e3-8186-7dff1fa1e076"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9773),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9773),
                            ModifiedBy = "",
                            Name = "# Music Theory",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 35,
                            BusinessId = new Guid("ebcd3a86-8a47-4b93-bd7a-5429ae336be7"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9774),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9775),
                            ModifiedBy = "",
                            Name = "# Harmony",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 36,
                            BusinessId = new Guid("4423dccc-aa7d-487d-b585-e43cdc2a75ab"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9776),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9776),
                            ModifiedBy = "",
                            Name = "Chords",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 37,
                            BusinessId = new Guid("08ec107c-c9ec-4526-bbff-6dd66d401229"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9778),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9778),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 38,
                            BusinessId = new Guid("fbe866ec-3a03-49b2-8d59-929558ad5fcb"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9781),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9781),
                            ModifiedBy = "",
                            Name = "Intervals",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 39,
                            BusinessId = new Guid("94e41be2-39f0-4220-86f5-ee2bbe74a6a7"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9783),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9783),
                            ModifiedBy = "",
                            Name = "Rythm",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 40,
                            BusinessId = new Guid("4b5c7064-ba41-43eb-95f1-1dee07f0210c"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9785),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9785),
                            ModifiedBy = "",
                            Name = "Scales",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 41,
                            BusinessId = new Guid("0b7ed9a0-9d92-44c6-8ebd-9377bc33ca84"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9787),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9787),
                            ModifiedBy = "",
                            Name = "Modes",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 42,
                            BusinessId = new Guid("2390fcda-5fc3-4c7d-964e-152e877f596c"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9790),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9790),
                            ModifiedBy = "",
                            Name = "# Keys",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 43,
                            BusinessId = new Guid("e13262bc-6538-47a4-8749-e3462078c271"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9793),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9793),
                            ModifiedBy = "",
                            Name = "Piano",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 44,
                            BusinessId = new Guid("f46c64cd-ac45-4f94-af76-79aaf8046078"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9795),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9795),
                            ModifiedBy = "",
                            Name = "# Brass",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 45,
                            BusinessId = new Guid("59cd0069-26bb-4cfa-ab4c-a6e9a00272d3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9797),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9797),
                            ModifiedBy = "",
                            Name = "Trombone",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 46,
                            BusinessId = new Guid("5f332b61-f8b6-496c-8c3d-63da0c09e90b"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9800),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9801),
                            ModifiedBy = "",
                            Name = "# Strings",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 47,
                            BusinessId = new Guid("6c89f4b6-fe5a-4b57-ae42-0bf097e43aec"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9802),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9802),
                            ModifiedBy = "",
                            Name = "Violin",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 48,
                            BusinessId = new Guid("ddef18ad-0013-418c-ab29-e7abd3401084"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9804),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9804),
                            ModifiedBy = "",
                            Name = "# Percussions",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 49,
                            BusinessId = new Guid("9b602702-b6fa-4d9a-b050-aeba17ce9a63"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9806),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9806),
                            ModifiedBy = "",
                            Name = "Drums",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 50,
                            BusinessId = new Guid("452229a9-3adb-43c9-897f-7c17b4fa6910"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9809),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9809),
                            ModifiedBy = "",
                            Name = "# Woodwinds",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 51,
                            BusinessId = new Guid("a878cd88-5548-499c-bf04-36be0ae8e457"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9811),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9811),
                            ModifiedBy = "",
                            Name = "Clarinet",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 52,
                            BusinessId = new Guid("0f8d5ccb-4439-49ae-9587-015ec5857042"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9812),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9813),
                            ModifiedBy = "",
                            Name = "# Audio",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 53,
                            BusinessId = new Guid("33d8ece9-cba0-42d3-a291-265295e99772"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9814),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9815),
                            ModifiedBy = "",
                            Name = "Mixing",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 54,
                            BusinessId = new Guid("3c4d592d-91c5-40f3-83d2-3ea31a49c187"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9818),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9818),
                            ModifiedBy = "",
                            Name = "Mastering",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("0ed2c5df-8b61-4fa8-8a58-202b9846a7ac"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9819),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9820),
                            ModifiedBy = "",
                            Name = "Recording",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 56,
                            BusinessId = new Guid("0d0baed2-3160-405b-a905-22235bd4dac0"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9821),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9821),
                            ModifiedBy = "",
                            Name = "Production",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 57,
                            BusinessId = new Guid("01308e9f-e8d6-4b36-963e-70417fbb876a"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9823),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9823),
                            ModifiedBy = "",
                            Name = "Sound Design",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 58,
                            BusinessId = new Guid("f76dd298-a27f-4766-9d2e-55b1c3314a91"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9826),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9827),
                            ModifiedBy = "",
                            Name = "Memes",
                            TagCategoryId = 16
                        },
                        new
                        {
                            EntityId = 59,
                            BusinessId = new Guid("aef674a7-7eb0-430c-9236-5b946824e634"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9828),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9828),
                            ModifiedBy = "",
                            Name = "# Guitar",
                            TagCategoryId = 17
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TagCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("fe4d2fa7-aa43-4ab2-98db-3788151a27bc"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9883),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9883),
                            ModifiedBy = "",
                            Name = "#"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("4479628f-ada0-4fd3-b60a-59406a3c79d6"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9887),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9887),
                            ModifiedBy = "",
                            Name = "# File"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("7a935ec5-b9d0-4ce5-9139-d6dd99573a61"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9891),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9891),
                            ModifiedBy = "",
                            Name = "# File ext. | Doc."
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("efb32cce-b8fc-441d-bbe9-fde8c9df2821"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9893),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9893),
                            ModifiedBy = "",
                            Name = "# File ext. | Image"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("502e111d-bd8f-401e-8714-60c92f9fde66"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9894),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9895),
                            ModifiedBy = "",
                            Name = "# File ext. | Video"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("c8b4a147-06a7-4555-a9ed-097cfd905a66"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9897),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9897),
                            ModifiedBy = "",
                            Name = "# File Format"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("1495468a-1f6a-4af0-9899-25bc755cffe7"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9900),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9901),
                            ModifiedBy = "",
                            Name = "# File Render"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("6d56d926-a4a2-4b0b-bca0-d2738472a208"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9902),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9902),
                            ModifiedBy = "",
                            Name = "Music Genre"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("77222e70-5baf-461f-92b3-d65428ed047a"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9904),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9904),
                            ModifiedBy = "",
                            Name = "Music Theory"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("21544c3f-cd21-4f11-b369-af5fc86148ed"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9906),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9907),
                            ModifiedBy = "",
                            Name = "Keys"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("bfa8de3b-35bf-4c54-be4c-997c035d6182"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9933),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9933),
                            ModifiedBy = "",
                            Name = "Brass"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("592ac1f8-d542-47b2-9e2b-64d798ffcf82"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9935),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9936),
                            ModifiedBy = "",
                            Name = "Strings"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("acc9a6da-dbe2-4af9-83fc-b6e0bd877f97"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9937),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9938),
                            ModifiedBy = "",
                            Name = "Percussions"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("6d91747e-b057-4968-a587-d9b4886fd267"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9939),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9940),
                            ModifiedBy = "",
                            Name = "Woodwinds"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("a8b1aed7-3e22-4e2c-99f0-8f463e89ae6f"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9944),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9944),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("b9703c78-b063-4c0c-b220-7413655e113b"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9946),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9946),
                            ModifiedBy = "",
                            Name = "Fun"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("93b6ff2d-ce21-4d97-98c3-9d2066d6c6db"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9948),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9948),
                            ModifiedBy = "",
                            Name = "Guitar"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Task", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("04/09/2024 14:55:21");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("ca4d904b-aaae-4ff8-aff2-646de39e8fd7"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 966, DateTimeKind.Utc).AddTicks(24),
                            CreatedBy = "",
                            DateEnd = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 966, DateTimeKind.Utc).AddTicks(25),
                            ModifiedBy = "",
                            Name = "Check Mails",
                            TaskCategoryId = 5
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("f1ce8bf6-1afc-40b0-9a6e-236fb16d9e86"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9985),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9985),
                            ModifiedBy = "",
                            Name = "PAD Mobile"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("2c113b0e-09b5-4222-9ac6-d098482813aa"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9989),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9989),
                            ModifiedBy = "",
                            Name = "PAD Cave"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("342e700f-538c-438f-964d-3277ed838d72"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9991),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9991),
                            ModifiedBy = "",
                            Name = "PAD Kids"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("3698886f-8c2e-4fca-b9e4-97708a0b1639"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9993),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9993),
                            ModifiedBy = "",
                            Name = "Shopping"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("00528e5f-6598-4eb2-be13-4d161df26e46"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9995),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9995),
                            ModifiedBy = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.User", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Birthdate = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("07bcafe3-d8d8-48ca-b358-1171d16ff87a"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 966, DateTimeKind.Utc).AddTicks(553),
                            CreatedBy = "",
                            Email = "tonyvan@live.fr",
                            FirstName = "Tony",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 966, DateTimeKind.Utc).AddTicks(553),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 183, 54, 239, 160, 108, 60, 75, 88, 194, 18, 102, 27, 19, 146, 124, 84, 19, 27, 217, 127, 31, 182, 214, 230, 26, 183, 195, 161, 170, 42, 139, 176, 224, 229, 204, 205, 112, 57, 211, 14, 34, 47, 171, 95, 183, 249, 114, 27, 254, 152, 63, 101, 30, 120, 99, 63, 62, 34, 69, 186, 10, 28, 25, 254 },
                            PasswordSalt = new byte[] { 27, 136, 75, 97, 236, 106, 194, 195, 241, 222, 109, 83, 166, 246, 167, 174, 120, 10, 112, 119, 165, 109, 53, 214, 191, 159, 204, 140, 172, 123, 73, 83, 194, 194, 15, 30, 86, 166, 253, 243, 171, 220, 87, 47, 53, 178, 80, 156, 53, 29, 198, 31, 126, 187, 147, 29, 36, 114, 122, 123, 240, 30, 224, 160, 252, 52, 96, 25, 207, 203, 31, 138, 151, 197, 164, 17, 140, 227, 235, 15, 159, 187, 195, 159, 137, 49, 48, 48, 250, 188, 23, 237, 50, 166, 66, 36, 223, 35, 59, 157, 67, 0, 222, 22, 199, 50, 247, 202, 156, 124, 200, 170, 95, 224, 238, 201, 48, 64, 144, 184, 59, 213, 171, 84, 176, 147, 198, 229 },
                            Role = 2
                        },
                        new
                        {
                            EntityId = 2,
                            Birthdate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("566b35bd-5d0b-437a-a09e-2fa66c543853"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 966, DateTimeKind.Utc).AddTicks(585),
                            CreatedBy = "",
                            Email = "floppy@gmail.com",
                            FirstName = "Floppy",
                            LastName = "Disk",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 966, DateTimeKind.Utc).AddTicks(585),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 77, 105, 159, 221, 0, 44, 225, 44, 69, 105, 160, 7, 170, 238, 67, 192, 85, 126, 103, 18, 4, 38, 23, 52, 32, 64, 35, 155, 156, 138, 209, 196, 118, 254, 176, 236, 230, 45, 148, 232, 197, 17, 54, 187, 114, 147, 168, 78, 150, 216, 91, 177, 110, 56, 10, 183, 206, 127, 244, 116, 87, 188, 38, 130 },
                            PasswordSalt = new byte[] { 121, 173, 208, 91, 15, 22, 206, 63, 5, 244, 109, 252, 202, 118, 36, 166, 9, 200, 155, 46, 131, 187, 233, 130, 126, 120, 30, 218, 117, 169, 36, 115, 4, 253, 112, 17, 136, 218, 159, 184, 95, 207, 18, 181, 198, 129, 78, 24, 164, 165, 64, 78, 6, 96, 248, 93, 211, 203, 233, 84, 240, 163, 85, 159, 42, 29, 77, 40, 42, 182, 144, 141, 185, 213, 232, 80, 57, 178, 54, 224, 21, 106, 139, 87, 192, 106, 158, 151, 155, 61, 77, 140, 68, 189, 65, 134, 1, 8, 169, 241, 37, 24, 111, 126, 106, 131, 151, 227, 116, 20, 220, 44, 109, 110, 240, 117, 187, 6, 97, 252, 195, 12, 18, 159, 110, 210, 112, 110 },
                            Role = 1
                        },
                        new
                        {
                            EntityId = 3,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("92941bcd-3c54-4a06-b158-93e07b61690f"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 966, DateTimeKind.Utc).AddTicks(613),
                            CreatedBy = "",
                            Email = "vincent.megag@gmail.com",
                            FirstName = "Vincent",
                            LastName = "Megag",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 966, DateTimeKind.Utc).AddTicks(613),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 218, 28, 56, 18, 75, 78, 185, 145, 78, 141, 1, 222, 220, 119, 11, 157, 94, 197, 132, 187, 24, 158, 182, 148, 223, 28, 252, 181, 243, 137, 52, 13, 64, 201, 140, 193, 21, 221, 214, 255, 35, 213, 203, 125, 138, 35, 236, 85, 62, 47, 85, 183, 30, 101, 20, 119, 207, 174, 45, 73, 196, 168, 173, 218 },
                            PasswordSalt = new byte[] { 206, 178, 49, 175, 109, 35, 231, 152, 198, 185, 132, 199, 198, 204, 74, 96, 10, 144, 18, 54, 30, 215, 12, 89, 137, 222, 155, 151, 250, 171, 8, 211, 75, 133, 197, 84, 165, 217, 226, 242, 149, 211, 0, 70, 187, 5, 247, 170, 12, 170, 172, 23, 104, 60, 249, 48, 238, 57, 151, 121, 212, 100, 158, 192, 190, 116, 145, 135, 72, 129, 72, 86, 88, 67, 149, 1, 36, 16, 14, 7, 129, 152, 149, 25, 143, 109, 153, 65, 8, 229, 198, 17, 16, 241, 45, 51, 205, 58, 176, 45, 178, 44, 190, 20, 184, 147, 191, 161, 100, 161, 224, 174, 65, 186, 50, 61, 64, 13, 102, 252, 186, 181, 139, 98, 44, 221, 214, 23 },
                            Role = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Document", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Document_Size");
                        });

                    b.HasDiscriminator().HasValue("Document");
                });

            modelBuilder.Entity("MB.Domain.Entities.Image", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Image");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9112),
                            CreatedBy = "",
                            Description = "In Chords Chart",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9112),
                            ModifiedBy = "",
                            Name = " Major Key Notes",
                            Score = 0,
                            Type = 1,
                            Height = 510,
                            Size = 61206,
                            Width = 359
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9138),
                            CreatedBy = "",
                            Description = "7 Notes, 7 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9138),
                            ModifiedBy = "",
                            Name = "Major Diatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 940,
                            Size = 136462,
                            Width = 700
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9146),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9146),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1361,
                            Size = 562138,
                            Width = 868
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9150),
                            CreatedBy = "",
                            Description = "5 Notes, 5 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9150),
                            ModifiedBy = "",
                            Name = "Pentatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 524,
                            Size = 74358,
                            Width = 250
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9153),
                            CreatedBy = "",
                            Description = "Color Measure",
                            Extension = "png",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9153),
                            ModifiedBy = "",
                            Name = "Intervals",
                            Score = 0,
                            Type = 1,
                            Height = 844,
                            Size = 56324,
                            Width = 556
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9157),
                            CreatedBy = "",
                            Description = "Absolute Basics",
                            Extension = "png",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9157),
                            ModifiedBy = "",
                            Name = "Time Measure",
                            Score = 0,
                            Type = 1,
                            Height = 255,
                            Size = 8992,
                            Width = 400
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9159),
                            CreatedBy = "",
                            Description = "Natural Order",
                            Extension = "webp",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9160),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            Score = 0,
                            Type = 1,
                            Height = 226,
                            Size = 30964,
                            Width = 600
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9162),
                            CreatedBy = "",
                            Description = "Communication is important",
                            Extension = "png",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9162),
                            ModifiedBy = "",
                            Name = "Guitar Vocabulary",
                            Score = 0,
                            Type = 1,
                            Height = 705,
                            Size = 99994,
                            Width = 512
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9167),
                            CreatedBy = "",
                            Description = "Diatonic Chords in C Major",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9167),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1317,
                            Size = 204898,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9172),
                            CreatedBy = "",
                            Description = "Mmm... You can tell, right ?",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9172),
                            ModifiedBy = "",
                            Name = "Piano Scales",
                            Score = 0,
                            Type = 1,
                            Height = 900,
                            Size = 91482,
                            Width = 695
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9181),
                            CreatedBy = "",
                            Description = "Overview",
                            Extension = "gif",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9181),
                            ModifiedBy = "",
                            Name = "Tessitures",
                            Score = 0,
                            Type = 1,
                            Height = 709,
                            Size = 62391,
                            Width = 1026
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9184),
                            CreatedBy = "",
                            Description = "Circle of Life",
                            Extension = "png",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9184),
                            ModifiedBy = "",
                            Name = "Chord Wheel",
                            Score = 0,
                            Type = 1,
                            Height = 950,
                            Size = 663017,
                            Width = 950
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9186),
                            CreatedBy = "",
                            Description = " ... ",
                            Extension = "jpeg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9187),
                            ModifiedBy = "",
                            Name = "The Mix is Almost Perfect",
                            Score = 0,
                            Type = 1,
                            Height = 480,
                            Size = 45254,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9189),
                            CreatedBy = "",
                            Description = "Basic Chords / Different Keys",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9190),
                            ModifiedBy = "",
                            Name = "Guitar Progressions",
                            Score = 0,
                            Type = 1,
                            Height = 690,
                            Size = 167969,
                            Width = 552
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9192),
                            CreatedBy = "",
                            Description = "Les 3, c'est NON !",
                            Extension = "jpeg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9193),
                            ModifiedBy = "",
                            Name = "Vous le voulez comment votre projet ?",
                            Score = 0,
                            Type = 1,
                            Height = 960,
                            Size = 205144,
                            Width = 720
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9195),
                            CreatedBy = "",
                            Description = "1, 2, 3, 4, 5",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9196),
                            ModifiedBy = "",
                            Name = "Fingers Numerotation",
                            Score = 0,
                            Type = 1,
                            Height = 233,
                            Size = 24030,
                            Width = 350
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9198),
                            CreatedBy = "",
                            Description = "My actual Keyboard",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9198),
                            ModifiedBy = "",
                            Name = "Roland FP-30",
                            Score = 0,
                            Type = 1,
                            Height = 368,
                            Size = 87596,
                            Width = 1680
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9202),
                            CreatedBy = "",
                            Description = "How to build a chord",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9202),
                            ModifiedBy = "",
                            Name = "Chord Formula's",
                            Score = 0,
                            Type = 1,
                            Height = 1109,
                            Size = 221030,
                            Width = 1080
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc4"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9207),
                            CreatedBy = "",
                            Description = "Valeurs de Temps",
                            Extension = "webp",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9208),
                            ModifiedBy = "",
                            Name = "Time Values",
                            Score = 0,
                            Type = 1,
                            Height = 530,
                            Size = 21922,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd4"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9210),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9210),
                            ModifiedBy = "",
                            Name = "Guitar Chords ( B )",
                            Score = 0,
                            Type = 1,
                            Height = 909,
                            Size = 57447,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9214),
                            CreatedBy = "",
                            Description = "Primary Modes",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9215),
                            ModifiedBy = "",
                            Name = "Modes starting in C",
                            Score = 0,
                            Type = 1,
                            Height = 1552,
                            Size = 111187,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9217),
                            CreatedBy = "",
                            Description = "Good luck finding the good one ...",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9218),
                            ModifiedBy = "",
                            Name = "Guitar Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1913,
                            Size = 633229,
                            Width = 1200
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc5"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9220),
                            CreatedBy = "",
                            Description = "Une approche parmis tant d'autres",
                            Extension = "png",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9220),
                            ModifiedBy = "",
                            Name = "Intervalles",
                            Score = 0,
                            Type = 1,
                            Height = 971,
                            Size = 69313,
                            Width = 692
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Video", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Height")
                                .HasColumnName("Video_Height");

                            t.Property("Size")
                                .HasColumnName("Video_Size");

                            t.Property("Width")
                                .HasColumnName("Video_Width");
                        });

                    b.HasDiscriminator().HasValue("Video");

                    b.HasData(
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9282),
                            CreatedBy = "",
                            Description = " Bendy & The Ink Machine ",
                            Extension = "mp4",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9282),
                            ModifiedBy = "",
                            Name = "BATIM - Build our Machine",
                            Score = 0,
                            Type = 2,
                            Duration = 64,
                            Height = 360,
                            Size = 5091239,
                            Width = 640
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.VideoYouTube", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("VideoYouTube");

                    b.HasData(
                        new
                        {
                            EntityId = 85,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                            Created = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9321),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "",
                            Modified = new DateTime(2024, 4, 9, 12, 55, 21, 965, DateTimeKind.Utc).AddTicks(9321),
                            ModifiedBy = "",
                            Name = "Mario Bros 3 Cover",
                            Score = 0,
                            Type = 4,
                            Url = "WWUxrTdjqg0"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Style", "Style")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Media", "Media")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("LinkArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkArtists")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
                {
                    b.HasOne("MB.Domain.Entities.LinkCategory", "LinkCategory")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("LinkCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkModels")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("LinkModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("MoodArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodArtists")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("MoodModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodModels")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
                {
                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodTags")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Tag", "Tag")
                        .WithMany("MoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.HasOne("MB.Domain.Entities.TagCategory", "TagCategory")
                        .WithMany("Tags")
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.Task", b =>
                {
                    b.HasOne("MB.Domain.Entities.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
                {
                    b.Navigation("ArtistStyles");

                    b.Navigation("LinkArtists");

                    b.Navigation("MoodArtists");
                });

            modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
                {
                    b.Navigation("FranchiseMedias");

                    b.Navigation("FranchiseModels");

                    b.Navigation("MoodFranchises");
                });

            modelBuilder.Entity("MB.Domain.Entities.Link", b =>
                {
                    b.Navigation("LinkArtists");

                    b.Navigation("LinkCategories");

                    b.Navigation("LinkModels");
                });

            modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
                {
                    b.Navigation("LinkCategories");
                });

            modelBuilder.Entity("MB.Domain.Entities.Media", b =>
                {
                    b.Navigation("FranchiseMedias");
                });

            modelBuilder.Entity("MB.Domain.Entities.Model", b =>
                {
                    b.Navigation("FranchiseModels");

                    b.Navigation("LinkModels");

                    b.Navigation("MoodModels");
                });

            modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
                {
                    b.Navigation("MoodArtists");

                    b.Navigation("MoodFranchises");

                    b.Navigation("MoodModels");

                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.Entities.Style", b =>
                {
                    b.Navigation("ArtistStyles");
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
