// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250506174552_New_Seed_System")]
    partial class New_Seed_System
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MB.Domain.AchievementAggregate.AchievementDefinition", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoneMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("XpReward")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("AchievementDefinitions", (string)null);

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000001"),
                            Category = "standard",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2654),
                            CreatedBy = "",
                            DoneMessage = "You created an account :)",
                            Goal = "Create an account",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2657),
                            ModifiedBy = "",
                            Title = "Official Member",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000017"),
                            Category = "standard",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2672),
                            CreatedBy = "",
                            DoneMessage = "Your email is verified!",
                            Goal = "Verify your email address",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2672),
                            ModifiedBy = "",
                            Title = "Email Verified",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000018"),
                            Category = "standard",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2676),
                            CreatedBy = "",
                            DoneMessage = "Your profile is complete!",
                            Goal = "Complete your profile (add name, birthdate, avatar)",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2676),
                            ModifiedBy = "",
                            Title = "Profile Completed",
                            XpReward = 75
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000002"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2680),
                            CreatedBy = "",
                            DoneMessage = "You lasted 10 sec. !!",
                            Goal = "Survive 10 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2680),
                            ModifiedBy = "",
                            Title = "Novice (bass)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000003"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2684),
                            CreatedBy = "",
                            DoneMessage = "You lasted 20 sec. !!",
                            Goal = "Survive 20 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2684),
                            ModifiedBy = "",
                            Title = "Intermediate (bass)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000004"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2688),
                            CreatedBy = "",
                            DoneMessage = "You lasted 30 sec. !!",
                            Goal = "Survive 30 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2688),
                            ModifiedBy = "",
                            Title = "Advanced (bass)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000005"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2711),
                            CreatedBy = "",
                            DoneMessage = "You lasted 40 sec. !!",
                            Goal = "Survive 40 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2711),
                            ModifiedBy = "",
                            Title = "Expert (bass)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000006"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2714),
                            CreatedBy = "",
                            DoneMessage = "You lasted 50 sec. !!",
                            Goal = "Survive 50 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2715),
                            ModifiedBy = "",
                            Title = "Master (bass)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000007"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2717),
                            CreatedBy = "",
                            DoneMessage = "You lasted 10 sec. !!",
                            Goal = "Survive 10 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2718),
                            ModifiedBy = "",
                            Title = "Novice (alto)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000008"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2720),
                            CreatedBy = "",
                            DoneMessage = "You lasted 20 sec. !!",
                            Goal = "Survive 20 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2720),
                            ModifiedBy = "",
                            Title = "Intermediate (alto)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000009"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2723),
                            CreatedBy = "",
                            DoneMessage = "You lasted 30 sec. !!",
                            Goal = "Survive 30 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2723),
                            ModifiedBy = "",
                            Title = "Advanced (alto)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000010"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2726),
                            CreatedBy = "",
                            DoneMessage = "You lasted 40 sec. !!",
                            Goal = "Survive 40 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2726),
                            ModifiedBy = "",
                            Title = "Expert (alto)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000011"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2728),
                            CreatedBy = "",
                            DoneMessage = "You lasted 50 sec. !!",
                            Goal = "Survive 50 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2729),
                            ModifiedBy = "",
                            Title = "Master (alto)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000012"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2732),
                            CreatedBy = "",
                            DoneMessage = "You lasted 10 sec. !!",
                            Goal = "Survive 10 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2732),
                            ModifiedBy = "",
                            Title = "Novice (treble)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000013"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2737),
                            CreatedBy = "",
                            DoneMessage = "You lasted 20 sec. !!",
                            Goal = "Survive 20 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2738),
                            ModifiedBy = "",
                            Title = "Intermediate (treble)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000014"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2740),
                            CreatedBy = "",
                            DoneMessage = "You lasted 30 sec. !!",
                            Goal = "Survive 30 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2740),
                            ModifiedBy = "",
                            Title = "Advanced (treble)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000015"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2743),
                            CreatedBy = "",
                            DoneMessage = "You lasted 40 sec. !!",
                            Goal = "Survive 40 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2743),
                            ModifiedBy = "",
                            Title = "Expert (treble)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000016"),
                            Category = "note-master",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2746),
                            CreatedBy = "",
                            DoneMessage = "You lasted 50 sec. !!",
                            Goal = "Survive 50 seconds.",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2746),
                            ModifiedBy = "",
                            Title = "Master (treble)",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000019"),
                            Category = "level",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2749),
                            CreatedBy = "",
                            DoneMessage = "You reached level 2!",
                            Goal = "Reach level 2",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2749),
                            ModifiedBy = "",
                            Title = "Level 2 Achieved",
                            XpReward = 100
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000020"),
                            Category = "level",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2751),
                            CreatedBy = "",
                            DoneMessage = "You reached level 3!",
                            Goal = "Reach level 3",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2752),
                            ModifiedBy = "",
                            Title = "Level 3 Achieved",
                            XpReward = 150
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000021"),
                            Category = "level",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2754),
                            CreatedBy = "",
                            DoneMessage = "You reached level 4!",
                            Goal = "Reach level 4",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2755),
                            ModifiedBy = "",
                            Title = "Level 4 Achieved",
                            XpReward = 200
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000022"),
                            Category = "level",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2757),
                            CreatedBy = "",
                            DoneMessage = "You reached level 5!",
                            Goal = "Reach level 5",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2758),
                            ModifiedBy = "",
                            Title = "Level 5 Achieved",
                            XpReward = 250
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000023"),
                            Category = "level",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2762),
                            CreatedBy = "",
                            DoneMessage = "You reached level 6!",
                            Goal = "Reach level 6",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2763),
                            ModifiedBy = "",
                            Title = "Level 6 Achieved",
                            XpReward = 300
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000024"),
                            Category = "level",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2765),
                            CreatedBy = "",
                            DoneMessage = "You reached level 7!",
                            Goal = "Reach level 7",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2765),
                            ModifiedBy = "",
                            Title = "Level 7 Achieved",
                            XpReward = 350
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000025"),
                            Category = "league",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2768),
                            CreatedBy = "",
                            DoneMessage = "You’re now in Wood league!",
                            Goal = "Be promoted to Wood league",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2769),
                            ModifiedBy = "",
                            Title = "Wood League",
                            XpReward = 50
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000026"),
                            Category = "league",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2772),
                            CreatedBy = "",
                            DoneMessage = "You’re now in Stone league!",
                            Goal = "Be promoted to Stone league",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2772),
                            ModifiedBy = "",
                            Title = "Stone League",
                            XpReward = 100
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000027"),
                            Category = "league",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2775),
                            CreatedBy = "",
                            DoneMessage = "You’re now in Bronze league!",
                            Goal = "Be promoted to Bronze league",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2775),
                            ModifiedBy = "",
                            Title = "Bronze League",
                            XpReward = 150
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000028"),
                            Category = "league",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2778),
                            CreatedBy = "",
                            DoneMessage = "You’re now in Silver league!",
                            Goal = "Be promoted to Silver league",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2778),
                            ModifiedBy = "",
                            Title = "Silver League",
                            XpReward = 200
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000029"),
                            Category = "league",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2792),
                            CreatedBy = "",
                            DoneMessage = "You’re now in Crystal league!",
                            Goal = "Be promoted to Crystal league",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2792),
                            ModifiedBy = "",
                            Title = "Crystal League",
                            XpReward = 250
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000030"),
                            Category = "league",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2795),
                            CreatedBy = "",
                            DoneMessage = "You’re now in Elite league!",
                            Goal = "Be promoted to Elite league",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2795),
                            ModifiedBy = "",
                            Title = "Elite League",
                            XpReward = 300
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000031"),
                            Category = "league",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2800),
                            CreatedBy = "",
                            DoneMessage = "You’re now in Champion league!",
                            Goal = "Be promoted to Champion league",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2800),
                            ModifiedBy = "",
                            Title = "Champion League",
                            XpReward = 350
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("20000000-0000-0000-0000-000000000032"),
                            Category = "league",
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2803),
                            CreatedBy = "",
                            DoneMessage = "You’re now in Legend league!",
                            Goal = "Be promoted to Legend league",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 311, DateTimeKind.Utc).AddTicks(2804),
                            ModifiedBy = "",
                            Title = "Legend League",
                            XpReward = 400
                        });
                });

            modelBuilder.Entity("MB.Domain.AchievementAggregate.UserAchievement", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<int>("AchievementDefinitionId")
                        .HasColumnType("int");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("AchievementDefinitionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAchievements", (string)null);
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.Artist", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000001"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(433),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(434),
                            ModifiedBy = "",
                            Name = "# Unknown Artist",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000002"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(440),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(440),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000003"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(444),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(444),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Illustrator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000004"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(448),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(448),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000005"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(451),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(452),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000006"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(454),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(455),
                            ModifiedBy = "",
                            Name = "/ Unknown A.I. User",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000007"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(463),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(464),
                            ModifiedBy = "",
                            Name = "/ Unknown Musician",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000008"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(466),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(467),
                            ModifiedBy = "",
                            Name = "/ Unknown Photographer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000009"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(469),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(470),
                            ModifiedBy = "",
                            Name = "/ Unknown Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000010"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(472),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(472),
                            ModifiedBy = "",
                            Name = "/ Unknown Videast",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000011"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(475),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(475),
                            ModifiedBy = "",
                            Name = "/ Unknown Writer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000012"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(478),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(478),
                            ModifiedBy = "",
                            Name = "Flying PAD",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000013"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(481),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(481),
                            ModifiedBy = "",
                            Name = "Soën9048",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000014"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(483),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(484),
                            ModifiedBy = "",
                            Name = "CohesivePanda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000015"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(488),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(488),
                            ModifiedBy = "",
                            Name = "Nobuo Uematsu",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000016"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(491),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(491),
                            ModifiedBy = "",
                            Name = "Eichiro Oda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000017"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(493),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(494),
                            ModifiedBy = "",
                            Name = "Masashi Kishimoto",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000018"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(496),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(496),
                            ModifiedBy = "",
                            Name = "Dali",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000019"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(498),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(499),
                            ModifiedBy = "",
                            Name = "Yoko Shimomura",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000020"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(501),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(501),
                            ModifiedBy = "",
                            Name = "Michael Jackson",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000021"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(503),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(504),
                            ModifiedBy = "",
                            Name = "CG5",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000022"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(506),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(506),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-000000000023"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(511),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 312, DateTimeKind.Utc).AddTicks(511),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Pseudonym = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationArtistStyle", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("RArtistStyle");

                    b.HasData(
                        new
                        {
                            ArtistId = 12,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 12,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 13,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 14,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 15,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 16,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 17,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 18,
                            StyleId = 1
                        },
                        new
                        {
                            ArtistId = 19,
                            StyleId = 2
                        },
                        new
                        {
                            ArtistId = 20,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 21,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 22,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 23,
                            StyleId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkArtist", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RLinkArtist");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkModel", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RLinkModel");
                });

            modelBuilder.Entity("MB.Domain.BoardAggregate.Board", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MB.Domain.BookAggregate.Book", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.Franchise", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee1"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 319, DateTimeKind.Utc).AddTicks(6478),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 319, DateTimeKind.Utc).AddTicks(6481),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee2"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 319, DateTimeKind.Utc).AddTicks(6498),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 319, DateTimeKind.Utc).AddTicks(6498),
                            ModifiedBy = "",
                            Name = "Street Fighter"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee3"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 319, DateTimeKind.Utc).AddTicks(6502),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 319, DateTimeKind.Utc).AddTicks(6503),
                            ModifiedBy = "",
                            Name = "# Unrelated Franchise"
                        });
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationBookFranchise", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RBookFranchise");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationFranchiseMedia", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RFranchiseMedia");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            MediaId = 9
                        },
                        new
                        {
                            FranchiseId = 2,
                            MediaId = 7
                        },
                        new
                        {
                            FranchiseId = 3,
                            MediaId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.LeagueAggregate.LeagueDefinition", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconCssClass")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MaxExperience")
                        .HasColumnType("int");

                    b.Property<int>("MinExperience")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("SeasonId");

                    b.ToTable("LeagueDefinitions", (string)null);

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("00000000-0000-0000-0000-000000000101"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3250),
                            CreatedBy = "",
                            IconCssClass = "league-wood",
                            MaxExperience = 99,
                            MinExperience = 0,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3251),
                            ModifiedBy = "",
                            Name = "Wood",
                            Order = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("00000000-0000-0000-0000-000000000102"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3259),
                            CreatedBy = "",
                            IconCssClass = "league-stone",
                            MaxExperience = 199,
                            MinExperience = 100,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3259),
                            ModifiedBy = "",
                            Name = "Stone",
                            Order = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("00000000-0000-0000-0000-000000000103"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3263),
                            CreatedBy = "",
                            IconCssClass = "league-bronze",
                            MaxExperience = 299,
                            MinExperience = 200,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3263),
                            ModifiedBy = "",
                            Name = "Bronze",
                            Order = 3
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("00000000-0000-0000-0000-000000000104"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3267),
                            CreatedBy = "",
                            IconCssClass = "league-silver",
                            MaxExperience = 399,
                            MinExperience = 300,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3267),
                            ModifiedBy = "",
                            Name = "Silver",
                            Order = 4
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("00000000-0000-0000-0000-000000000105"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3270),
                            CreatedBy = "",
                            IconCssClass = "league-crystal",
                            MaxExperience = 499,
                            MinExperience = 400,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3271),
                            ModifiedBy = "",
                            Name = "Crystal",
                            Order = 5
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("00000000-0000-0000-0000-000000000106"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3280),
                            CreatedBy = "",
                            IconCssClass = "league-elite",
                            MaxExperience = 599,
                            MinExperience = 500,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3280),
                            ModifiedBy = "",
                            Name = "Elite",
                            Order = 6
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("00000000-0000-0000-0000-000000000107"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3283),
                            CreatedBy = "",
                            IconCssClass = "league-champion",
                            MaxExperience = 699,
                            MinExperience = 600,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3283),
                            ModifiedBy = "",
                            Name = "Champion",
                            Order = 7
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("00000000-0000-0000-0000-000000000108"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3286),
                            CreatedBy = "",
                            IconCssClass = "league-legend",
                            MinExperience = 700,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(3286),
                            ModifiedBy = "",
                            Name = "Legend",
                            Order = 8
                        });
                });

            modelBuilder.Entity("MB.Domain.LevelAggregate.LevelDefinition", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LevelNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MaxExperience")
                        .HasColumnType("int");

                    b.Property<int>("MinExperience")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("LevelDefinitions", (string)null);

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("10000000-0000-0000-0000-000000000001"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6882),
                            CreatedBy = "",
                            LevelNumber = 1,
                            MaxExperience = 99,
                            MinExperience = 0,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6883),
                            ModifiedBy = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("10000000-0000-0000-0000-000000000002"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6891),
                            CreatedBy = "",
                            LevelNumber = 2,
                            MaxExperience = 199,
                            MinExperience = 100,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6891),
                            ModifiedBy = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("10000000-0000-0000-0000-000000000003"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6895),
                            CreatedBy = "",
                            LevelNumber = 3,
                            MaxExperience = 399,
                            MinExperience = 200,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6895),
                            ModifiedBy = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("10000000-0000-0000-0000-000000000004"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6898),
                            CreatedBy = "",
                            LevelNumber = 4,
                            MaxExperience = 699,
                            MinExperience = 400,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6898),
                            ModifiedBy = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("10000000-0000-0000-0000-000000000005"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6901),
                            CreatedBy = "",
                            LevelNumber = 5,
                            MaxExperience = 999,
                            MinExperience = 700,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6901),
                            ModifiedBy = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("10000000-0000-0000-0000-000000000006"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6910),
                            CreatedBy = "",
                            LevelNumber = 6,
                            MinExperience = 1000,
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 324, DateTimeKind.Utc).AddTicks(6910),
                            ModifiedBy = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.Link", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8785),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8786),
                            ModifiedBy = "",
                            Name = "KVR",
                            Url = "https://www.kvraudio.com/"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8807),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8807),
                            ModifiedBy = "",
                            Name = "MuseScore",
                            Url = "https://musescore.com/"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8811),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8811),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.native-instruments.com"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8814),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8814),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.steinberg.net/"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8817),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8817),
                            ModifiedBy = "",
                            Name = "Clés pour l'harmonie",
                            Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa6"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8820),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8821),
                            ModifiedBy = "",
                            Name = "Google | Metronome",
                            Url = "https://www.google.com/search?q=metronome"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa7"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8824),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8824),
                            ModifiedBy = "",
                            Name = "Google | Stopwatch",
                            Url = "https://www.google.com/search?q=stopwatch"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa8"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8827),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8828),
                            ModifiedBy = "",
                            Name = "Google | Timer",
                            Url = "https://www.google.com/search?q=timer"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa9"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8833),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8833),
                            ModifiedBy = "",
                            Name = "Mangold Project",
                            Url = "https://www.youtube.com/@MangoldProject"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa10"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8837),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8838),
                            ModifiedBy = "",
                            Name = "# YouTube",
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa11"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8840),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8841),
                            ModifiedBy = "",
                            Name = "Piano Jazz Concept",
                            Url = "https://www.youtube.com/@Pianojazzconcept"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa12"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8843),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8843),
                            ModifiedBy = "",
                            Name = "Rick Beato",
                            Url = "https://www.youtube.com/@RickBeato"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa13"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8846),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8846),
                            ModifiedBy = "",
                            Name = "Pianote",
                            Url = "https://www.youtube.com/@PianoteOfficial"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa14"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8849),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8849),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Url = "https://www.youtube.com/@TryHardNinja"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa15"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8852),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8852),
                            ModifiedBy = "",
                            Name = "Kyle Allen Music",
                            Url = "https://www.youtube.com/@KyleAllenMusic"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa16"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8855),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8855),
                            ModifiedBy = "",
                            Name = "Ableton",
                            Url = "https://www.youtube.com/@Ableton"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa17"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8860),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8860),
                            ModifiedBy = "",
                            Name = "La Machine à Mixer",
                            Url = "https://www.youtube.com/@lamachineamixer"
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa18"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8863),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8863),
                            ModifiedBy = "",
                            Name = "Audiofanzine",
                            Url = "https://www.youtube.com/@audiofanzine"
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa19"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8865),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8866),
                            ModifiedBy = "",
                            Name = "Cubase",
                            Url = "https://www.youtube.com/@Cubase"
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa20"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8868),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8868),
                            ModifiedBy = "",
                            Name = "Ten Second Songs",
                            Url = "https://www.youtube.com/@TenSecondSongs"
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa21"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8871),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8871),
                            ModifiedBy = "",
                            Name = "The Piano Guys",
                            Url = "https://www.youtube.com/@thepianoguys"
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa22"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8874),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8874),
                            ModifiedBy = "",
                            Name = "CG5",
                            Url = "https://www.youtube.com/@CG5"
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa23"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8877),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8877),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.youtube.com/@NativeInstruments"
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa24"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8879),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8880),
                            ModifiedBy = "",
                            Name = "Ken Tamplin Vocal Academy",
                            Url = "https://www.youtube.com/@kentamplin"
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa25"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8884),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8884),
                            ModifiedBy = "",
                            Name = "Pentatonix",
                            Url = "https://www.youtube.com/@PTXofficial"
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa26"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8887),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8887),
                            ModifiedBy = "",
                            Name = "Recording Revolution",
                            Url = "https://www.youtube.com/@recordingrevolution"
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa27"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8890),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8891),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Url = "https://www.youtube.com/@jacobcollier"
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa28"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8894),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8894),
                            ModifiedBy = "",
                            Name = "Orchestration Online",
                            Url = "https://www.youtube.com/@OrchestrationOnline"
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa29"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8897),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8897),
                            ModifiedBy = "",
                            Name = "Nuendo",
                            Url = "https://www.youtube.com/@Nuendo"
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa30"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8900),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8900),
                            ModifiedBy = "",
                            Name = "reFX",
                            Url = "https://www.youtube.com/@reFXaudio"
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa31"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8903),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(8903),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.youtube.com/@steinberg"
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.RelationLinkCategory", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("LinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "LinkCategoryId");

                    b.HasIndex("LinkCategoryId");

                    b.ToTable("RLinkCategory");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 9
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 4,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 4
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 5
                        },
                        new
                        {
                            LinkId = 6,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 7,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 8,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 10,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 12,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 13,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 15,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 16,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 17,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 18,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 19,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 20,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 21,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 22,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 23,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 24,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 25,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 2
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 14
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 28,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 29,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 30,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 31,
                            LinkCategoryId = 12
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkCategoryAggregate.LinkCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("LinkCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa32"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1586),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1588),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa33"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1594),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1595),
                            ModifiedBy = "",
                            Name = "Audio | Mix & Master"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa34"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1598),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1598),
                            ModifiedBy = "",
                            Name = "Audio | Sound Design"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa35"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1602),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1602),
                            ModifiedBy = "",
                            Name = "Books"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa36"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1605),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1605),
                            ModifiedBy = "",
                            Name = "Books | Harmony"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa37"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1608),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1608),
                            ModifiedBy = "",
                            Name = "Software"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa38"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1624),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1624),
                            ModifiedBy = "",
                            Name = "Software | D.A.W."
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa39"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1633),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1633),
                            ModifiedBy = "",
                            Name = "Software | V.S.T."
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa40"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1636),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1636),
                            ModifiedBy = "",
                            Name = "Software | Music Notation"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa41"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1639),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1639),
                            ModifiedBy = "",
                            Name = "Tools"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa42"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1642),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1642),
                            ModifiedBy = "",
                            Name = "Tools | Global"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa43"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1645),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1645),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa44"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1648),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1648),
                            ModifiedBy = "",
                            Name = "YouTube | Artists"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa45"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1651),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1651),
                            ModifiedBy = "",
                            Name = "YouTube | Audio"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaa46"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1653),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 325, DateTimeKind.Utc).AddTicks(1653),
                            ModifiedBy = "",
                            Name = "YouTube | Piano & Keys"
                        });
                });

            modelBuilder.Entity("MB.Domain.MediumAggregate.Media", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee4"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3381),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3382),
                            ModifiedBy = "",
                            Name = "# Unrelated"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee5"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3394),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3394),
                            ModifiedBy = "",
                            Name = "# Unknown"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee6"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3398),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3398),
                            ModifiedBy = "",
                            Name = "# Super Franchise"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee7"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3401),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3401),
                            ModifiedBy = "",
                            Name = "TV"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee8"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3404),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3405),
                            ModifiedBy = "",
                            Name = "Radio"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee9"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3407),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3408),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeea"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3410),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3411),
                            ModifiedBy = "",
                            Name = "Capcom"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeeb"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3413),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3413),
                            ModifiedBy = "",
                            Name = "Square-Enix"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeec"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3416),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 326, DateTimeKind.Utc).AddTicks(3416),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.Model", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee1"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 327, DateTimeKind.Utc).AddTicks(1872),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 327, DateTimeKind.Utc).AddTicks(1873),
                            ModifiedBy = "",
                            Pseudonym = "# Unknown Model"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee2"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 327, DateTimeKind.Utc).AddTicks(1881),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 327, DateTimeKind.Utc).AddTicks(1881),
                            ModifiedBy = "",
                            Pseudonym = "# Unrelated Model"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee3"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 327, DateTimeKind.Utc).AddTicks(1884),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "Tony",
                            Gender = "M",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 327, DateTimeKind.Utc).AddTicks(1884),
                            ModifiedBy = "",
                            Pseudonym = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationBookModel", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RBookModel");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationFranchiseModel", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RFranchiseModel");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            ModelId = 3
                        },
                        new
                        {
                            FranchiseId = 3,
                            ModelId = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Mood", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator<int>("Type").HasValue(0);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodArtist", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RMoodArtist");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ArtistId = 12
                        },
                        new
                        {
                            MoodId = 13,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodFranchise", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RMoodFranchise");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodModel", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RMoodModel");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ModelId = 3
                        },
                        new
                        {
                            MoodId = 13,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ModelId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodTag", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RMoodTag");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 8
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 19
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 58
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 43
                        });
                });

            modelBuilder.Entity("MB.Domain.SeasonAggregate.Season", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndsAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("datetime2");

                    b.HasKey("EntityId");

                    b.ToTable("Seasons", (string)null);
                });

            modelBuilder.Entity("MB.Domain.StyleAggregate.Style", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000001"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8872),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8875),
                            ModifiedBy = "",
                            Name = "2D"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000002"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8888),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8889),
                            ModifiedBy = "",
                            Name = "2D Animation"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000003"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8893),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8893),
                            ModifiedBy = "",
                            Name = "3D"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000004"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8910),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8911),
                            ModifiedBy = "",
                            Name = "3D Animation"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000005"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8914),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8915),
                            ModifiedBy = "",
                            Name = "Architecture"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000006"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8937),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8938),
                            ModifiedBy = "",
                            Name = "Writer"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000007"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8941),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8942),
                            ModifiedBy = "",
                            Name = "Music"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000008"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8945),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8945),
                            ModifiedBy = "",
                            Name = "Photo"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000009"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8948),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8949),
                            ModifiedBy = "",
                            Name = "Video"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("bbbbbbbb-bbbb-cccc-dddd-000000000010"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8952),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 351, DateTimeKind.Utc).AddTicks(8952),
                            ModifiedBy = "",
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("BusinessId")
                        .HasDatabaseName("IX_Tag_BusinessId");

                    b.HasIndex("TagCategoryId")
                        .HasDatabaseName("IX_Tag_TagCategoryId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee1"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3176),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3177),
                            ModifiedBy = "",
                            Name = "# All Files",
                            TagCategoryId = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee2"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3184),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3185),
                            ModifiedBy = "",
                            Name = "Audio",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee3"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3195),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3195),
                            ModifiedBy = "",
                            Name = "Document",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee4"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3198),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3199),
                            ModifiedBy = "",
                            Name = "Image",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee5"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3201),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3202),
                            ModifiedBy = "",
                            Name = "Video",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee6"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3204),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3205),
                            ModifiedBy = "",
                            Name = "*.txt",
                            TagCategoryId = 3
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee7"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3208),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3208),
                            ModifiedBy = "",
                            Name = "*.bmp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee8"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3211),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3211),
                            ModifiedBy = "",
                            Name = "*.gif",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee9"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3214),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3214),
                            ModifiedBy = "",
                            Name = "*.jpeg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee10"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3216),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3217),
                            ModifiedBy = "",
                            Name = "*.jpg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee11"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3222),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3223),
                            ModifiedBy = "",
                            Name = "*.png",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee12"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3225),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3226),
                            ModifiedBy = "",
                            Name = "*.webp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee13"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3228),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3229),
                            ModifiedBy = "",
                            Name = "*.mp4",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee14"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3231),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3231),
                            ModifiedBy = "",
                            Name = "*.webm",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee15"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3235),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3235),
                            ModifiedBy = "",
                            Name = "Landscape",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee16"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3238),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3238),
                            ModifiedBy = "",
                            Name = "Landscape (16:9)",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee17"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3241),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3241),
                            ModifiedBy = "",
                            Name = "Portrait",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee18"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3244),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3244),
                            ModifiedBy = "",
                            Name = "Portrait (16:9)",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee19"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3249),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3250),
                            ModifiedBy = "",
                            Name = "Square",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee20"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3253),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3253),
                            ModifiedBy = "",
                            Name = "2D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee21"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3256),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3257),
                            ModifiedBy = "",
                            Name = "2D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee22"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3260),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3260),
                            ModifiedBy = "",
                            Name = "3D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee23"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3263),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3263),
                            ModifiedBy = "",
                            Name = "3D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee24"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3267),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3267),
                            ModifiedBy = "",
                            Name = "Photo",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee25"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3270),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3271),
                            ModifiedBy = "",
                            Name = "Photo | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee26"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3274),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3274),
                            ModifiedBy = "",
                            Name = "E.D.M.",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee27"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3280),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3280),
                            ModifiedBy = "",
                            Name = "Jazz",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee28"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3283),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3283),
                            ModifiedBy = "",
                            Name = "Metal",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee29"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3285),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3286),
                            ModifiedBy = "",
                            Name = "Orchestral",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee30"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3288),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3289),
                            ModifiedBy = "",
                            Name = "Pop Music",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee31"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3291),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3292),
                            ModifiedBy = "",
                            Name = "Rap",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee32"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3294),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3294),
                            ModifiedBy = "",
                            Name = "Rock",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 33,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee33"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3297),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3297),
                            ModifiedBy = "",
                            Name = "Traditional",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 34,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee34"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3301),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3301),
                            ModifiedBy = "",
                            Name = "# Music Theory",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 35,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee35"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3306),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3306),
                            ModifiedBy = "",
                            Name = "# Harmony",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 36,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee36"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3309),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3309),
                            ModifiedBy = "",
                            Name = "Chords",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 37,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee37"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3312),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3312),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 38,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee38"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3315),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3315),
                            ModifiedBy = "",
                            Name = "Intervals",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 39,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee39"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3317),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3318),
                            ModifiedBy = "",
                            Name = "Rythm",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 40,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee40"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3320),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3321),
                            ModifiedBy = "",
                            Name = "Scales",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 41,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee41"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3323),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3323),
                            ModifiedBy = "",
                            Name = "Modes",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 42,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee42"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3326),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3326),
                            ModifiedBy = "",
                            Name = "# Keys",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 43,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee43"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3331),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3332),
                            ModifiedBy = "",
                            Name = "Piano",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 44,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee44"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3334),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3334),
                            ModifiedBy = "",
                            Name = "# Brass",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 45,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee45"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3337),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3337),
                            ModifiedBy = "",
                            Name = "Trombone",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 46,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee46"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3340),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3340),
                            ModifiedBy = "",
                            Name = "# Strings",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 47,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee47"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3342),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3343),
                            ModifiedBy = "",
                            Name = "Violin",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 48,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee48"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3345),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3346),
                            ModifiedBy = "",
                            Name = "# Percussions",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 49,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee49"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3348),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3348),
                            ModifiedBy = "",
                            Name = "Drums",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 50,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee50"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3351),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3351),
                            ModifiedBy = "",
                            Name = "# Woodwinds",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 51,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee51"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3356),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3356),
                            ModifiedBy = "",
                            Name = "Clarinet",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 52,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee52"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3359),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3359),
                            ModifiedBy = "",
                            Name = "# Audio",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 53,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee53"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3362),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3362),
                            ModifiedBy = "",
                            Name = "Mixing",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 54,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee54"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3365),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3366),
                            ModifiedBy = "",
                            Name = "Mastering",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee55"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3369),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3369),
                            ModifiedBy = "",
                            Name = "Recording",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 56,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee56"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3371),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3372),
                            ModifiedBy = "",
                            Name = "Production",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 57,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee57"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3374),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3374),
                            ModifiedBy = "",
                            Name = "Sound Design",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 58,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee58"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3377),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3377),
                            ModifiedBy = "",
                            Name = "Memes",
                            TagCategoryId = 16
                        },
                        new
                        {
                            EntityId = 59,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee59"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3382),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(3382),
                            ModifiedBy = "",
                            Name = "# Guitar",
                            TagCategoryId = 17
                        });
                });

            modelBuilder.Entity("MB.Domain.TagCategoryAggregate.TagCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TagCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee1"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6188),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6189),
                            ModifiedBy = "",
                            Name = "#"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee2"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6200),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6200),
                            ModifiedBy = "",
                            Name = "# File"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee3"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6204),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6204),
                            ModifiedBy = "",
                            Name = "# File ext. | Doc."
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee4"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6216),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6216),
                            ModifiedBy = "",
                            Name = "# File ext. | Image"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee5"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6220),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6220),
                            ModifiedBy = "",
                            Name = "# File ext. | Video"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee6"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6224),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6225),
                            ModifiedBy = "",
                            Name = "# File Format"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee7"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6229),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6229),
                            ModifiedBy = "",
                            Name = "# File Render"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee8"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6233),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6233),
                            ModifiedBy = "",
                            Name = "Music Genre"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee9"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6237),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6237),
                            ModifiedBy = "",
                            Name = "Music Theory"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee10"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6240),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6240),
                            ModifiedBy = "",
                            Name = "Keys"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee11"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6244),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6244),
                            ModifiedBy = "",
                            Name = "Brass"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee12"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6251),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6251),
                            ModifiedBy = "",
                            Name = "Strings"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee13"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6254),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6254),
                            ModifiedBy = "",
                            Name = "Percussions"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee14"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6258),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6258),
                            ModifiedBy = "",
                            Name = "Woodwinds"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee15"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6262),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6262),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee16"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6265),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6266),
                            ModifiedBy = "",
                            Name = "Fun"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee17"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6269),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 352, DateTimeKind.Utc).AddTicks(6269),
                            ModifiedBy = "",
                            Name = "Guitar"
                        });
                });

            modelBuilder.Entity("MB.Domain.TaskAggregate.Task", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("05/06/2025 19:45:51");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee23"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 354, DateTimeKind.Utc).AddTicks(2449),
                            CreatedBy = "",
                            DateEnd = new DateTime(2025, 5, 6, 17, 45, 51, 354, DateTimeKind.Utc).AddTicks(2439),
                            DateStart = new DateTime(2025, 5, 6, 17, 45, 51, 354, DateTimeKind.Utc).AddTicks(2438),
                            Description = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 354, DateTimeKind.Utc).AddTicks(2450),
                            ModifiedBy = "",
                            Name = "Check Mails",
                            TaskCategoryId = 5
                        });
                });

            modelBuilder.Entity("MB.Domain.TaskCategoryAggregate.TaskCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee18"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8008),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8009),
                            ModifiedBy = "",
                            Name = "PAD Mobile"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee19"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8015),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8015),
                            ModifiedBy = "",
                            Name = "PAD Cave"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee20"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8019),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8019),
                            ModifiedBy = "",
                            Name = "PAD Kids"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee21"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8022),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8022),
                            ModifiedBy = "",
                            Name = "Shopping"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeee22"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8025),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 353, DateTimeKind.Utc).AddTicks(8026),
                            ModifiedBy = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.EmailVerificationToken", b =>
                {
                    b.Property<Guid>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TokenId");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("EmailVerificationTokens");
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.User", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("LeagueDefinitionId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.HasIndex("LeagueDefinitionId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.AudioSoundCloud", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<string>("EmbedUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmbedUrl");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ThumbnailUrl");

                    b.Property<string>("Url")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Document", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Document_Size");
                        });

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Image", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000001"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5218),
                            CreatedBy = "",
                            Description = "In Chords Chart",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5219),
                            ModifiedBy = "",
                            Name = "Major Key Notes",
                            Score = 0,
                            Type = 1,
                            Height = 510,
                            Size = 61206,
                            Width = 359
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000002"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5229),
                            CreatedBy = "",
                            Description = "7 Notes, 7 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5229),
                            ModifiedBy = "",
                            Name = "Major Diatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 940,
                            Size = 136462,
                            Width = 700
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000003"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5233),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5234),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1361,
                            Size = 562138,
                            Width = 868
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000004"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5238),
                            CreatedBy = "",
                            Description = "5 Notes, 5 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5238),
                            ModifiedBy = "",
                            Name = "Pentatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 524,
                            Size = 74358,
                            Width = 250
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000005"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5259),
                            CreatedBy = "",
                            Description = "Color Measure",
                            Extension = "png",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5259),
                            ModifiedBy = "",
                            Name = "Intervals",
                            Score = 0,
                            Type = 1,
                            Height = 844,
                            Size = 56324,
                            Width = 556
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000006"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5263),
                            CreatedBy = "",
                            Description = "Absolute Basics",
                            Extension = "png",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5263),
                            ModifiedBy = "",
                            Name = "Time Measure",
                            Score = 0,
                            Type = 1,
                            Height = 255,
                            Size = 8992,
                            Width = 400
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000007"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5266),
                            CreatedBy = "",
                            Description = "Natural Order",
                            Extension = "webp",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5266),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            Score = 0,
                            Type = 1,
                            Height = 226,
                            Size = 30964,
                            Width = 600
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000008"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5269),
                            CreatedBy = "",
                            Description = "Communication is important",
                            Extension = "png",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5270),
                            ModifiedBy = "",
                            Name = "Guitar Vocabulary",
                            Score = 0,
                            Type = 1,
                            Height = 705,
                            Size = 99994,
                            Width = 512
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000009"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5273),
                            CreatedBy = "",
                            Description = "Diatonic Chords in C Major",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5273),
                            ModifiedBy = "",
                            Name = "Piano Chords (Diatonic C Major)",
                            Score = 0,
                            Type = 1,
                            Height = 1317,
                            Size = 204898,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-00000000000a"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5276),
                            CreatedBy = "",
                            Description = "Mmm... You can tell, right ?",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5276),
                            ModifiedBy = "",
                            Name = "Piano Scales",
                            Score = 0,
                            Type = 1,
                            Height = 900,
                            Size = 91482,
                            Width = 695
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-00000000000b"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5279),
                            CreatedBy = "",
                            Description = "Overview",
                            Extension = "gif",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5279),
                            ModifiedBy = "",
                            Name = "Tessitures",
                            Score = 0,
                            Type = 1,
                            Height = 709,
                            Size = 62391,
                            Width = 1026
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-00000000000c"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5283),
                            CreatedBy = "",
                            Description = "Circle of Life",
                            Extension = "png",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5283),
                            ModifiedBy = "",
                            Name = "Chord Wheel",
                            Score = 0,
                            Type = 1,
                            Height = 950,
                            Size = 663017,
                            Width = 950
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-00000000000d"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5289),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "jpeg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5289),
                            ModifiedBy = "",
                            Name = "The Mix is Almost Perfect",
                            Score = 0,
                            Type = 1,
                            Height = 480,
                            Size = 45254,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-00000000000e"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5292),
                            CreatedBy = "",
                            Description = "Basic Chords / Different Keys",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5292),
                            ModifiedBy = "",
                            Name = "Guitar Progressions",
                            Score = 0,
                            Type = 1,
                            Height = 690,
                            Size = 167969,
                            Width = 552
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-00000000000f"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5295),
                            CreatedBy = "",
                            Description = "Les 3, c'est NON !",
                            Extension = "jpeg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5295),
                            ModifiedBy = "",
                            Name = "Vous le voulez comment votre projet ?",
                            Score = 0,
                            Type = 1,
                            Height = 960,
                            Size = 205144,
                            Width = 720
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000010"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5298),
                            CreatedBy = "",
                            Description = "1, 2, 3, 4, 5",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5299),
                            ModifiedBy = "",
                            Name = "Fingers Numerotation",
                            Score = 0,
                            Type = 1,
                            Height = 233,
                            Size = 24030,
                            Width = 350
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000011"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5302),
                            CreatedBy = "",
                            Description = "My actual Keyboard",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5302),
                            ModifiedBy = "",
                            Name = "Roland FP-30",
                            Score = 0,
                            Type = 1,
                            Height = 368,
                            Size = 87596,
                            Width = 1680
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000012"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5305),
                            CreatedBy = "",
                            Description = "How to build a chord",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5306),
                            ModifiedBy = "",
                            Name = "Chord Formula's",
                            Score = 0,
                            Type = 1,
                            Height = 1109,
                            Size = 221030,
                            Width = 1080
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000013"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5309),
                            CreatedBy = "",
                            Description = "Valeurs de Temps",
                            Extension = "webp",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5309),
                            ModifiedBy = "",
                            Name = "Time Values",
                            Score = 0,
                            Type = 1,
                            Height = 530,
                            Size = 21922,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000014"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5312),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5312),
                            ModifiedBy = "",
                            Name = "Guitar Chords (B)",
                            Score = 0,
                            Type = 1,
                            Height = 909,
                            Size = 57447,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000015"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5318),
                            CreatedBy = "",
                            Description = "Primary Modes",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5318),
                            ModifiedBy = "",
                            Name = "Modes starting in C",
                            Score = 0,
                            Type = 1,
                            Height = 1552,
                            Size = 111187,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000016"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5321),
                            CreatedBy = "",
                            Description = "Good luck finding the good one ...",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5322),
                            ModifiedBy = "",
                            Name = "Guitar Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1913,
                            Size = 633229,
                            Width = 1200
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("aaaaaaaa-0000-0000-0000-000000000017"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5325),
                            CreatedBy = "",
                            Description = "Une approche parmi tant d'autres",
                            Extension = "png",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 323, DateTimeKind.Utc).AddTicks(5325),
                            ModifiedBy = "",
                            Name = "Intervalles",
                            Score = 0,
                            Type = 1,
                            Height = 971,
                            Size = 69313,
                            Width = 692
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Video", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", null, t =>
                        {
                            t.Property("Height")
                                .HasColumnName("Video_Height");

                            t.Property("Size")
                                .HasColumnName("Video_Size");

                            t.Property("Width")
                                .HasColumnName("Video_Width");
                        });

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 356, DateTimeKind.Utc).AddTicks(6830),
                            CreatedBy = "",
                            Description = "Bendy & The Ink Machine",
                            Extension = "mp4",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 356, DateTimeKind.Utc).AddTicks(6831),
                            ModifiedBy = "",
                            Name = "BATIM - Build our Machine",
                            Score = 0,
                            Type = 2,
                            Duration = 64,
                            Height = 360,
                            Size = 5091239,
                            Width = 640
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.VideoYouTube", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<string>("Url")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator().HasValue(4);

                    b.HasData(
                        new
                        {
                            EntityId = 85,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                            Created = new DateTime(2025, 5, 6, 17, 45, 51, 356, DateTimeKind.Utc).AddTicks(9005),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "",
                            Modified = new DateTime(2025, 5, 6, 17, 45, 51, 356, DateTimeKind.Utc).AddTicks(9006),
                            ModifiedBy = "",
                            Name = "Mario Bros 3 Cover",
                            Score = 0,
                            Type = 4,
                            Url = "WWUxrTdjqg0"
                        });
                });

            modelBuilder.Entity("MB.Domain.AchievementAggregate.UserAchievement", b =>
                {
                    b.HasOne("MB.Domain.AchievementAggregate.AchievementDefinition", "Definition")
                        .WithMany()
                        .HasForeignKey("AchievementDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MB.Domain.UserAggregate.User", "User")
                        .WithMany("Achievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Definition");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationArtistStyle", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.StyleAggregate.Style", "Style")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkArtist", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("LinkArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkArtists")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkModel", b =>
                {
                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkModels")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("LinkModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationBookFranchise", b =>
                {
                    b.HasOne("MB.Domain.BookAggregate.Book", "Book")
                        .WithMany("BookFranchise")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("BookFranchise")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationFranchiseMedia", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MediumAggregate.Media", "Media")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MB.Domain.LeagueAggregate.LeagueDefinition", b =>
                {
                    b.HasOne("MB.Domain.SeasonAggregate.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Season");
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.RelationLinkCategory", b =>
                {
                    b.HasOne("MB.Domain.LinkCategoryAggregate.LinkCategory", "LinkCategory")
                        .WithMany("RLinkCategories")
                        .HasForeignKey("LinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("LinkCategory");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationBookModel", b =>
                {
                    b.HasOne("MB.Domain.BookAggregate.Book", "Book")
                        .WithMany("BookModel")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("BookModel")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationFranchiseModel", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodArtist", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("MoodArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodArtists")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodFranchise", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodModel", b =>
                {
                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("MoodModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodModels")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodTag", b =>
                {
                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodTags")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.TagAggregate.Tag", "Tag")
                        .WithMany("MoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.HasOne("MB.Domain.TagCategoryAggregate.TagCategory", "TagCategory")
                        .WithMany("Tags")
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("MB.Domain.TaskAggregate.Task", b =>
                {
                    b.HasOne("MB.Domain.TaskCategoryAggregate.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.EmailVerificationToken", b =>
                {
                    b.HasOne("MB.Domain.UserAggregate.User", "User")
                        .WithMany("EmailVerificationTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.User", b =>
                {
                    b.HasOne("MB.Domain.LeagueAggregate.LeagueDefinition", "LeagueDefinition")
                        .WithMany()
                        .HasForeignKey("LeagueDefinitionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MB.Domain.SeasonAggregate.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("LeagueDefinition");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.Artist", b =>
                {
                    b.Navigation("ArtistStyles");

                    b.Navigation("LinkArtists");

                    b.Navigation("MoodArtists");
                });

            modelBuilder.Entity("MB.Domain.BookAggregate.Book", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("BookModel");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.Franchise", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("FranchiseMedias");

                    b.Navigation("FranchiseModels");

                    b.Navigation("MoodFranchises");
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.Link", b =>
                {
                    b.Navigation("LinkArtists");

                    b.Navigation("LinkCategories");

                    b.Navigation("LinkModels");
                });

            modelBuilder.Entity("MB.Domain.LinkCategoryAggregate.LinkCategory", b =>
                {
                    b.Navigation("RLinkCategories");
                });

            modelBuilder.Entity("MB.Domain.MediumAggregate.Media", b =>
                {
                    b.Navigation("FranchiseMedias");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.Model", b =>
                {
                    b.Navigation("BookModel");

                    b.Navigation("FranchiseModels");

                    b.Navigation("LinkModels");

                    b.Navigation("MoodModels");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Mood", b =>
                {
                    b.Navigation("MoodArtists");

                    b.Navigation("MoodFranchises");

                    b.Navigation("MoodModels");

                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.StyleAggregate.Style", b =>
                {
                    b.Navigation("ArtistStyles");
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.TagCategoryAggregate.TagCategory", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MB.Domain.TaskCategoryAggregate.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("EmailVerificationTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
