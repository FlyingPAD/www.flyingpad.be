// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("ed305ccd-a20f-4cd6-86eb-67b9e1fc1123"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3492),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3493),
                            ModifiedBy = "",
                            Name = "# Unknown Artist",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("634c3110-df80-4e3c-9eac-6f951185c591"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3502),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3502),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("ba4125c3-3358-42db-b79b-9cfb4240cc9d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3504),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3505),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Illustrator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("0a7aa9f2-69ca-4ee4-bb6c-ca90312f39e3"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3528),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3529),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("73bc95e1-e9ff-47a6-87ba-01b443e28c38"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3531),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3531),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("13d42c87-43a9-41ad-8046-726a0dc2abe2"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3536),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3536),
                            ModifiedBy = "",
                            Name = "/ Unknown A.I. User",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("2174fa4b-57ed-4c7c-9813-d6111a7de224"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3538),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3539),
                            ModifiedBy = "",
                            Name = "/ Unknown Musician",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("f55702c7-d988-4991-b905-331e5ee8d0e8"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3544),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3545),
                            ModifiedBy = "",
                            Name = "/ Unknown Photographer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("abc50c92-7eea-4290-a035-b11fba5118b0"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3547),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3547),
                            ModifiedBy = "",
                            Name = "/ Unknown Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("58f09e0d-72ce-4a92-955c-8b8bf6486571"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3604),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3604),
                            ModifiedBy = "",
                            Name = "/ Unknown Videast",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("7b464c3c-8846-485a-b50a-c607392b04ce"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3607),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3607),
                            ModifiedBy = "",
                            Name = "/ Unknown Writer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("a2efc106-0147-4f5f-94d0-559e897b3cfe"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3612),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3612),
                            ModifiedBy = "",
                            Name = "Flying PAD",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("fab40098-bb42-4291-9e0c-9419360f6dce"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3614),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3615),
                            ModifiedBy = "",
                            Name = "Soën9048",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("1a8e3439-546a-493f-a725-6f429e2555b8"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3617),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3617),
                            ModifiedBy = "",
                            Name = "CohesivePanda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("16c1aa87-f5c9-4758-87a5-835df2cd8923"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3625),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3625),
                            ModifiedBy = "",
                            Name = "Nobuo Uematsu",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("b92cad49-615b-41e2-8794-058089202e49"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3636),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3636),
                            ModifiedBy = "",
                            Name = "Eichiro Oda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("fd7fc73c-0b84-4a48-bb18-fa966691f2ae"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3639),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3639),
                            ModifiedBy = "",
                            Name = "Masashi Kishimoto",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("f9f5b6c4-67da-46f0-a61d-4f3717bb5d72"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3643),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3643),
                            ModifiedBy = "",
                            Name = "Dali",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("3910f519-e7ee-44c3-a431-a0fba1cbef1d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3646),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3646),
                            ModifiedBy = "",
                            Name = "Yoko Shimomura",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("5a45cced-8840-47e0-b8ae-2af162443886"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3650),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3650),
                            ModifiedBy = "",
                            Name = "Michael Jackson",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("e5a59e2f-aa52-454e-a6da-90da3a02edef"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3653),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3653),
                            ModifiedBy = "",
                            Name = "CG5",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("1bc36a60-af26-495d-9dfc-8980a41ff2b3"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3655),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3655),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("4e92397d-4aa5-4b35-a40d-26411f7e6161"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3658),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(3658),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Pseudonym = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Board", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MB.Domain.Entities.Book", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("b26c6350-3e41-4292-bf33-79ad249fc4b5"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4358),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4358),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("8a47c67a-7b9d-4416-b3d2-a7b79097ae54"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4364),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4364),
                            ModifiedBy = "",
                            Name = "Street Fighter"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("63dac342-a3e1-433d-8c7f-e7ab4db56876"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4370),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4370),
                            ModifiedBy = "",
                            Name = "# Unrelated Franchise"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Link", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("ad98a3eb-28a5-4954-9bac-c70672e3011b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4834),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4834),
                            ModifiedBy = "",
                            Name = "KVR",
                            Url = "https://www.kvraudio.com/"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("ddeeb2d2-6c22-447b-aab2-6ea60c664ecf"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4839),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4839),
                            ModifiedBy = "",
                            Name = "MuseScore",
                            Url = "https://musescore.com/"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("05cc8061-e839-4958-9664-b4652a18c223"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4845),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4846),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.native-instruments.com"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("8195753a-e63d-4687-b9b1-33800e8c00a2"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4848),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4849),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.steinberg.net/"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("6154addc-fe61-4897-a6ef-345add5a945a"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4851),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4851),
                            ModifiedBy = "",
                            Name = "Clés pour l'harmonie",
                            Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("51624d89-acd8-44a5-b098-aec864344687"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4855),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4855),
                            ModifiedBy = "",
                            Name = "Google | Metronome",
                            Url = "https://www.google.com/search?q=metronome"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("2a20e03f-28c6-40fc-842b-ad2927626f66"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4860),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4860),
                            ModifiedBy = "",
                            Name = "Google | Stopwatch",
                            Url = "https://www.google.com/search?q=stopwatch"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("46cd21c5-4e7d-417b-bc9f-90110cf9ab74"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4863),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4863),
                            ModifiedBy = "",
                            Name = "Google | Timer",
                            Url = "https://www.google.com/search?q=timer"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("4dbaec5f-6cc9-4a43-a507-b616c0ce75f5"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4865),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4865),
                            ModifiedBy = "",
                            Name = "Mangold Project",
                            Url = "https://www.youtube.com/@MangoldProject"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("59b35f1a-d33e-412c-a915-912b456de8ad"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4869),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4869),
                            ModifiedBy = "",
                            Name = "# YouTube",
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("3125f519-781a-4bdf-928a-ab22364350f4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4961),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4962),
                            ModifiedBy = "",
                            Name = "Piano Jazz Concept",
                            Url = "https://www.youtube.com/@Pianojazzconcept"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("2fb8125b-3929-4e07-9716-ade297dd215c"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4965),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4965),
                            ModifiedBy = "",
                            Name = "Rick Beato",
                            Url = "https://www.youtube.com/@RickBeato"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("dac82349-f89e-45fb-be90-bfd12926b5a4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4969),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4969),
                            ModifiedBy = "",
                            Name = "Pianote",
                            Url = "https://www.youtube.com/@PianoteOfficial"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("087f4dcf-9530-4c36-9520-4686d916d66b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4972),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4972),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Url = "https://www.youtube.com/@TryHardNinja"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("91caba08-79f2-4ac8-9888-c8d09b4e941e"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4976),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4976),
                            ModifiedBy = "",
                            Name = "Kyle Allen Music",
                            Url = "https://www.youtube.com/@KyleAllenMusic"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("d7a25edb-311f-4ae0-94c9-872fee738c3a"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4979),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4979),
                            ModifiedBy = "",
                            Name = "Ableton",
                            Url = "https://www.youtube.com/@Ableton"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("c8cd3b14-16e8-4289-a0a7-1b309045d192"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4981),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4981),
                            ModifiedBy = "",
                            Name = "La Machine à Mixer",
                            Url = "https://www.youtube.com/@lamachineamixer"
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("1e67cbbb-68a8-480f-9b5b-2950d48bfac5"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4986),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4987),
                            ModifiedBy = "",
                            Name = "Audiofanzine",
                            Url = "https://www.youtube.com/@audiofanzine"
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("77e8fd98-deeb-4181-bb01-be31e7b3c427"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5153),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5154),
                            ModifiedBy = "",
                            Name = "Cubase",
                            Url = "https://www.youtube.com/@Cubase"
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("5b8f6045-c4b4-420f-a62f-dde5a886fc00"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5159),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5160),
                            ModifiedBy = "",
                            Name = "Ten Second Songs",
                            Url = "https://www.youtube.com/@TenSecondSongs"
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("9117b54a-8cda-4ff2-b7e7-d0dcc0afed3a"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5162),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5162),
                            ModifiedBy = "",
                            Name = "The Piano Guys",
                            Url = "https://www.youtube.com/@thepianoguys"
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("222b62ec-c335-4423-a535-5e7a41412b25"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5165),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5165),
                            ModifiedBy = "",
                            Name = "CG5",
                            Url = "https://www.youtube.com/@CG5"
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("4247480e-e311-4e62-9841-6511ca186407"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5170),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5170),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.youtube.com/@NativeInstruments"
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("7fcaf30f-c3bc-43de-93c5-3ad4ce7c4f5c"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5172),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5173),
                            ModifiedBy = "",
                            Name = "Ken Tamplin Vocal Academy",
                            Url = "https://www.youtube.com/@kentamplin"
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("2564958f-f98c-4a64-b52d-4092140a4b1f"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5175),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5175),
                            ModifiedBy = "",
                            Name = "Pentatonix",
                            Url = "https://www.youtube.com/@PTXofficial"
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("73085834-04f9-449d-98b9-dc8b0a3a3fcd"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5177),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5178),
                            ModifiedBy = "",
                            Name = "Recording Revolution",
                            Url = "https://www.youtube.com/@recordingrevolution"
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("51d3f43c-4ff4-47e0-8bb8-97a15b6b56b7"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5182),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5182),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Url = "https://www.youtube.com/@jacobcollier"
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("c02f11eb-6859-4a27-8d0f-b372625bd53a"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5185),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5185),
                            ModifiedBy = "",
                            Name = "Orchestration Online",
                            Url = "https://www.youtube.com/@OrchestrationOnline"
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("4233ebfd-5639-4b25-81c9-0faa5e76ccbb"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5187),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5187),
                            ModifiedBy = "",
                            Name = "Nuendo",
                            Url = "https://www.youtube.com/@Nuendo"
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("8c25f804-48bd-411f-b1cd-0a3acefdf537"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5190),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5190),
                            ModifiedBy = "",
                            Name = "reFX",
                            Url = "https://www.youtube.com/@reFXaudio"
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("e10cedf5-2de9-431d-a54d-4645b67192a8"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5194),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5195),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.youtube.com/@steinberg"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("LinkCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("0718dc76-d029-4ae2-aa27-713bdda46aac"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5314),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5314),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("1e984970-7df4-41d7-a50f-998e293bfa97"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5321),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5321),
                            ModifiedBy = "",
                            Name = "Audio | Mix & Master"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("deba71b0-abc8-4859-ba68-1f9a521bcb32"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5323),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5324),
                            ModifiedBy = "",
                            Name = "Audio | Sound Design"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("2233af1c-c46b-40a8-86b7-cb64ff178160"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5329),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5329),
                            ModifiedBy = "",
                            Name = "Books"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("91f2a803-a16d-46aa-8d68-133299772fd8"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5331),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5332),
                            ModifiedBy = "",
                            Name = "Books | Harmony"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("56030d3d-7dba-4a4a-88a9-f8c12affe59e"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5335),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5335),
                            ModifiedBy = "",
                            Name = "Software"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("bcaf15c8-c32f-49cb-8094-f34b23950055"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5337),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5338),
                            ModifiedBy = "",
                            Name = "Software | D.A.W."
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("b844c591-a9d5-41f5-854d-1b9601948634"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5342),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5342),
                            ModifiedBy = "",
                            Name = "Software | V.S.T."
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("57714521-2e0a-4e67-bc21-d64d8e457ce3"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5344),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5345),
                            ModifiedBy = "",
                            Name = "Software | Music Notation"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("485eab0e-beb7-46b7-acd8-d1c493faba8d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5347),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5348),
                            ModifiedBy = "",
                            Name = "Tools"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("fddeb02d-2b6a-4e9d-b8a4-a800d54158df"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5350),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5350),
                            ModifiedBy = "",
                            Name = "Tools | Global"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("dae25751-95c0-4190-a434-81755c030e1c"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5354),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5355),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("fc099f6b-365c-45c7-8908-841405ef93f3"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5357),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5357),
                            ModifiedBy = "",
                            Name = "YouTube | Artists"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("e5521785-abf7-4ff2-8a99-f8e8624aeff4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5359),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5360),
                            ModifiedBy = "",
                            Name = "YouTube | Audio"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("6443c171-4d5d-4022-beec-e8d00fda5715"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5362),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5362),
                            ModifiedBy = "",
                            Name = "YouTube | Piano & Keys"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Media", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("44905ab2-02d1-4219-900d-4e212c43ecff"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4527),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4527),
                            ModifiedBy = "",
                            Name = "# Unrelated"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("2eef1be7-9958-4149-b3b0-24ba3bd44b11"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4531),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4531),
                            ModifiedBy = "",
                            Name = "# Unknown"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("4e36c114-30e8-4ba7-b3b7-c59aaee6465f"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4534),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4534),
                            ModifiedBy = "",
                            Name = "# Super Franchise"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("fe3987f3-d5eb-4b50-a2f4-17ff3e0b8aa6"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4539),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4539),
                            ModifiedBy = "",
                            Name = "TV"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("fd0b7efb-9380-48fe-9794-7d9053d0a4d7"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4544),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4544),
                            ModifiedBy = "",
                            Name = "Radio"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("d11a566f-f258-4361-a2e3-ee69bdb5fa99"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4548),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4548),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("bfa9a3b0-5a21-48df-b2c1-2a6118a426fd"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4550),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4550),
                            ModifiedBy = "",
                            Name = "Capcom"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("b4878429-99fb-4c02-9e74-f85857d6149b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4555),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4555),
                            ModifiedBy = "",
                            Name = "Square-Enix"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("a41184e6-9683-4c65-8c1c-ba78f05b227d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4557),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4557),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Model", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("c615d532-fd9e-4965-b10c-e797180d5279"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5959),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5960),
                            ModifiedBy = "",
                            Pseudonym = "# Unknown Model"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("7ebfe731-a8a3-4c93-9138-c54c5f58101c"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5966),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5966),
                            ModifiedBy = "",
                            Pseudonym = "# Unrelated Model"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("41ab6f76-2add-4548-a3c1-376f4b548a80"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5969),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "Tony",
                            Gender = "M",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(5969),
                            ModifiedBy = "",
                            Pseudonym = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Moods");

                    b.HasDiscriminator().HasValue("Mood");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("RArtistStyle");

                    b.HasData(
                        new
                        {
                            ArtistId = 12,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 12,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 13,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 14,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 15,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 16,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 17,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 18,
                            StyleId = 1
                        },
                        new
                        {
                            ArtistId = 19,
                            StyleId = 2
                        },
                        new
                        {
                            ArtistId = 20,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 21,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 22,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 23,
                            StyleId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookFranchise", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RBookFranchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookModel", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RBookModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RFranchiseMedia");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            MediaId = 9
                        },
                        new
                        {
                            FranchiseId = 2,
                            MediaId = 7
                        },
                        new
                        {
                            FranchiseId = 3,
                            MediaId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RFranchiseModel");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            ModelId = 3
                        },
                        new
                        {
                            FranchiseId = 3,
                            ModelId = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RLinkArtist");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("LinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "LinkCategoryId");

                    b.HasIndex("LinkCategoryId");

                    b.ToTable("RLinkCategory");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 9
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 4,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 4
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 5
                        },
                        new
                        {
                            LinkId = 6,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 7,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 8,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 10,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 12,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 13,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 15,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 16,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 17,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 18,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 19,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 20,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 21,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 22,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 23,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 24,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 25,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 2
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 14
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 28,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 29,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 30,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 31,
                            LinkCategoryId = 12
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RLinkModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RMoodArtist");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ArtistId = 12
                        },
                        new
                        {
                            MoodId = 13,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RMoodFranchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RMoodModel");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ModelId = 3
                        },
                        new
                        {
                            MoodId = 13,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ModelId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RMoodTag");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 8
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 19
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 58
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 43
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Style", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("002d4123-cd86-4a9a-a355-30827182895a"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4060),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4061),
                            ModifiedBy = "",
                            Name = "2D"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("b04eb020-92e3-4cfa-8420-fad543c7d5af"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4065),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4065),
                            ModifiedBy = "",
                            Name = "2D Animation"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("47f7cd28-df38-42bc-94c4-a90394573250"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4067),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4068),
                            ModifiedBy = "",
                            Name = "3D"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("7cb3e838-be2a-4aae-8178-e9e9cd97f3ae"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4071),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4071),
                            ModifiedBy = "",
                            Name = "3D Animation"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("fc6ed00d-8e25-4cd7-a43b-b153b3e074aa"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4075),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4076),
                            ModifiedBy = "",
                            Name = "Architecture"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("b02404a9-0fc9-4f12-a42f-0ad3d921c20b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4080),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4080),
                            ModifiedBy = "",
                            Name = "Writer"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("7265771d-5c20-447e-8247-ea7bee8587fe"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4082),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4082),
                            ModifiedBy = "",
                            Name = "Music"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("e25e8f17-c705-44d8-b5a8-ec055195073b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4084),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4085),
                            ModifiedBy = "",
                            Name = "Photo"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("4fc27811-bc4e-45bc-acf2-f292470a3087"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4089),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4089),
                            ModifiedBy = "",
                            Name = "Video"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("c33533b5-52a1-4f58-930d-6116c2630855"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4093),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(4093),
                            ModifiedBy = "",
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("BusinessId")
                        .HasDatabaseName("IX_Tag_BusinessId");

                    b.HasIndex("TagCategoryId")
                        .HasDatabaseName("IX_Tag_TagCategoryId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("e58fa6b8-737e-4fcb-a24d-c9ff5078e4bf"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7096),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7097),
                            ModifiedBy = "",
                            Name = "# All Files",
                            TagCategoryId = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("af41d900-cd26-479d-8c12-abba3db622a1"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7108),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7108),
                            ModifiedBy = "",
                            Name = "Audio",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("4923f7ee-5651-482d-8c92-fa90429c800b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7111),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7111),
                            ModifiedBy = "",
                            Name = "Document",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("c8f19854-93f9-4421-a3fb-01532b6108bb"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7113),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7113),
                            ModifiedBy = "",
                            Name = "Image",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("2721b9e4-e3fc-44dd-85e4-eecc410c5af8"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7116),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7116),
                            ModifiedBy = "",
                            Name = "Video",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("36817148-4c01-4976-82ca-26795f6ad06a"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7121),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7122),
                            ModifiedBy = "",
                            Name = "*.txt",
                            TagCategoryId = 3
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("2bb04308-c7ee-4e7b-be7e-e681186f16b9"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7124),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7124),
                            ModifiedBy = "",
                            Name = "*.bmp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("11fcce29-4647-430d-81fb-f37796fdf526"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7126),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7127),
                            ModifiedBy = "",
                            Name = "*.gif",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("1de126e0-90c2-4ba7-83f4-71a0bcb3e9ef"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7129),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7129),
                            ModifiedBy = "",
                            Name = "*.jpeg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("97c53558-d337-4e47-b99b-e93072bd53c9"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7134),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7135),
                            ModifiedBy = "",
                            Name = "*.jpg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("0434da26-88af-415e-aa75-e6470d0fdd3d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7137),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7137),
                            ModifiedBy = "",
                            Name = "*.png",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("45766385-d9c7-4a67-ad92-a4b86e4bdd33"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7139),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7140),
                            ModifiedBy = "",
                            Name = "*.webp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("7b16f67e-6186-45f9-b159-07b95a750f45"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7142),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7142),
                            ModifiedBy = "",
                            Name = "*.mp4",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("94e1e79e-de0b-420f-8856-cde4b97b79c8"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7147),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7147),
                            ModifiedBy = "",
                            Name = "*.webm",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("c1c97ebf-1103-48a1-b5b5-3779c1788bb1"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7150),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7150),
                            ModifiedBy = "",
                            Name = "Landscape",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("a801c890-4f11-462b-b3f7-09be125c0ee1"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7153),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7153),
                            ModifiedBy = "",
                            Name = "Landscape ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("30704053-1918-4636-9d58-ac4e98e9df34"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7155),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7155),
                            ModifiedBy = "",
                            Name = "Portrait",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("6f282791-fd2c-4758-92b8-50e86a25dded"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7161),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7161),
                            ModifiedBy = "",
                            Name = "Portrait ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("f6ce0ab3-f4e5-42a6-bbc3-d34180b91838"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7163),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7163),
                            ModifiedBy = "",
                            Name = "Square",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("974f0f6d-8f6d-4fa1-86e4-b9c90193550c"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7166),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7166),
                            ModifiedBy = "",
                            Name = "2D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("8c9f26fe-17c4-4fa7-b294-9ceac752a0f7"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7168),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7168),
                            ModifiedBy = "",
                            Name = "2D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("7bdc0ff9-0a0d-4a48-976b-d225e453e432"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7173),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7173),
                            ModifiedBy = "",
                            Name = "3D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("af3d7102-6e1e-4863-9056-f8b3a5965e4a"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7175),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7176),
                            ModifiedBy = "",
                            Name = "3D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("ffba7dcd-4587-4844-bb19-1d3305b1449d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7178),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7178),
                            ModifiedBy = "",
                            Name = "Photo",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("7c0f8497-82a7-48b3-a4b4-7b498b08ab4d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7180),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7181),
                            ModifiedBy = "",
                            Name = "Photo | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("de0854cd-a7ef-43dd-9924-6850eda7a968"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7185),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7185),
                            ModifiedBy = "",
                            Name = "E.D.M.",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("e91fa8c0-b4f8-43ac-806d-53fdb196931b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7187),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7188),
                            ModifiedBy = "",
                            Name = "Jazz",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("7fbe35d8-acf5-4aa8-a1cc-8ee61deed650"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7190),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7190),
                            ModifiedBy = "",
                            Name = "Metal",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("bd908bd3-f511-4faf-ae3f-cb8b3ac5d40a"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7192),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7193),
                            ModifiedBy = "",
                            Name = "Orchestral",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("c734d65b-4972-45f1-a37c-2a2b1274fdcd"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7197),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7197),
                            ModifiedBy = "",
                            Name = "Pop Music",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("f44690ee-64a7-4d92-9fab-baeb97d58fe4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7200),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7200),
                            ModifiedBy = "",
                            Name = "Rap",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("965c50d8-3790-471c-96af-f83dc1920c71"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7202),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7202),
                            ModifiedBy = "",
                            Name = "Rock",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 33,
                            BusinessId = new Guid("743a7fee-3e53-485f-9e7b-bbb17112bdad"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7205),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7205),
                            ModifiedBy = "",
                            Name = "Traditional",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 34,
                            BusinessId = new Guid("c191aa53-7193-4e52-8228-b13537e8a80e"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7210),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7211),
                            ModifiedBy = "",
                            Name = "# Music Theory",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 35,
                            BusinessId = new Guid("c7a0ad09-f019-4d14-9ac1-a8e709ef3c3b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7213),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7213),
                            ModifiedBy = "",
                            Name = "# Harmony",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 36,
                            BusinessId = new Guid("b1e63f63-2b7b-4585-a273-3adaa837f5d0"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7216),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7217),
                            ModifiedBy = "",
                            Name = "Chords",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 37,
                            BusinessId = new Guid("3b1039fe-a816-46b5-bef0-41294f2a6054"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7219),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7219),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 38,
                            BusinessId = new Guid("31ad7cc3-2934-4a3d-9d1b-a115e023d549"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7223),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7224),
                            ModifiedBy = "",
                            Name = "Intervals",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 39,
                            BusinessId = new Guid("691db1a2-0433-402b-8884-556c756f7d8e"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7226),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7226),
                            ModifiedBy = "",
                            Name = "Rythm",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 40,
                            BusinessId = new Guid("27bfcfcf-5fb4-419a-8860-fee0273c6dd4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7229),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7229),
                            ModifiedBy = "",
                            Name = "Scales",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 41,
                            BusinessId = new Guid("6002325f-4e3a-4e42-9872-3fa105eb7038"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7231),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7232),
                            ModifiedBy = "",
                            Name = "Modes",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 42,
                            BusinessId = new Guid("e1c2f7c8-a118-4785-b735-8c8d19bbd3f8"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7236),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7236),
                            ModifiedBy = "",
                            Name = "# Keys",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 43,
                            BusinessId = new Guid("a8040ae8-8118-4077-88ad-39b2f97f5bbc"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7239),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7239),
                            ModifiedBy = "",
                            Name = "Piano",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 44,
                            BusinessId = new Guid("363d47c0-f0f3-4c54-b38c-4072b27f2176"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7241),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7241),
                            ModifiedBy = "",
                            Name = "# Brass",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 45,
                            BusinessId = new Guid("e3298533-013f-4a8e-8c58-89456a7c0552"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7244),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7244),
                            ModifiedBy = "",
                            Name = "Trombone",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 46,
                            BusinessId = new Guid("19a43ecb-eb0a-4ae3-a68a-e68b7e04091e"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7248),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7249),
                            ModifiedBy = "",
                            Name = "# Strings",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 47,
                            BusinessId = new Guid("60699e77-0228-4940-bdb9-c55df2359f0f"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7251),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7251),
                            ModifiedBy = "",
                            Name = "Violin",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 48,
                            BusinessId = new Guid("1d3d4076-ad29-470b-88f3-054507fe906d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7253),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7254),
                            ModifiedBy = "",
                            Name = "# Percussions",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 49,
                            BusinessId = new Guid("bcccb715-5fb9-475a-a8c0-0cf7ee9e0c9b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7256),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7256),
                            ModifiedBy = "",
                            Name = "Drums",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 50,
                            BusinessId = new Guid("3ac9321f-2c4a-4f85-957f-f971e01ac0ba"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7299),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7300),
                            ModifiedBy = "",
                            Name = "# Woodwinds",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 51,
                            BusinessId = new Guid("e9be50b2-0582-4ede-b987-c076f9e7f049"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7302),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7302),
                            ModifiedBy = "",
                            Name = "Clarinet",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 52,
                            BusinessId = new Guid("1e0eec3f-c997-4e73-b485-bdd15ddbae05"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7305),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7305),
                            ModifiedBy = "",
                            Name = "# Audio",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 53,
                            BusinessId = new Guid("fccb3b70-6fe0-402a-aedd-5325cbd7c3a4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7307),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7307),
                            ModifiedBy = "",
                            Name = "Mixing",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 54,
                            BusinessId = new Guid("11b42501-fbf6-4349-9709-36c5bc008b45"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7312),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7312),
                            ModifiedBy = "",
                            Name = "Mastering",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("2ae02f67-6990-49c3-b3e7-e4449ccf9a19"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7315),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7315),
                            ModifiedBy = "",
                            Name = "Recording",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 56,
                            BusinessId = new Guid("7dec1ffe-463f-450d-8263-484debb322f6"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7317),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7317),
                            ModifiedBy = "",
                            Name = "Production",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 57,
                            BusinessId = new Guid("7875417f-e61f-4892-8c51-a90bdf2d75cb"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7319),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7320),
                            ModifiedBy = "",
                            Name = "Sound Design",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 58,
                            BusinessId = new Guid("ecee3308-7210-4f7c-9256-92adcc2d1a9f"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7326),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7326),
                            ModifiedBy = "",
                            Name = "Memes",
                            TagCategoryId = 16
                        },
                        new
                        {
                            EntityId = 59,
                            BusinessId = new Guid("151748e1-c2d7-4af8-8951-d5f627d31c0d"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7329),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7329),
                            ModifiedBy = "",
                            Name = "# Guitar",
                            TagCategoryId = 17
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TagCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("9c2e899d-27af-48ed-9c52-5e396bd9457c"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7447),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7448),
                            ModifiedBy = "",
                            Name = "#"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("cbf341bd-43ff-4d5f-8726-1cdc440ad8be"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7452),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7452),
                            ModifiedBy = "",
                            Name = "# File"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("2ca4dad9-ded9-44e7-804e-3d77d1562576"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7458),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7458),
                            ModifiedBy = "",
                            Name = "# File ext. | Doc."
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("d2e50e96-c18f-4b5b-b237-fbaeb70cf048"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7461),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7461),
                            ModifiedBy = "",
                            Name = "# File ext. | Image"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("4acb7182-b340-480f-aaa0-563cd2826752"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7463),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7463),
                            ModifiedBy = "",
                            Name = "# File ext. | Video"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("9adc67e8-ac7e-42f7-b498-420bf824bdef"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7467),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7467),
                            ModifiedBy = "",
                            Name = "# File Format"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("728ab7c7-f5eb-46b0-a3dd-d2101d64c90f"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7472),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7472),
                            ModifiedBy = "",
                            Name = "# File Render"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("52c1b6dd-5b1f-4610-9775-a479477158c8"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7474),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7474),
                            ModifiedBy = "",
                            Name = "Music Genre"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("f0e4cc1c-7112-489b-ad46-53af4990ac96"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7477),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7477),
                            ModifiedBy = "",
                            Name = "Music Theory"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("6d675561-829d-4187-8b4e-4db7defdf2a9"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7480),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7480),
                            ModifiedBy = "",
                            Name = "Keys"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("3edcb1ac-0bd3-44b8-8830-f0b1f226bd77"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7486),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7486),
                            ModifiedBy = "",
                            Name = "Brass"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("d02caded-71d4-480e-85ed-d30821765eac"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7488),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7488),
                            ModifiedBy = "",
                            Name = "Strings"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("1ace9749-a861-4b8f-9248-6a8fec30fc70"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7491),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7491),
                            ModifiedBy = "",
                            Name = "Percussions"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("a4be0983-717f-403f-aac6-2f425cc207fa"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7493),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7494),
                            ModifiedBy = "",
                            Name = "Woodwinds"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("03643a28-634b-4087-ae16-eacfc38fa687"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7498),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7499),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("f6c2aba3-cee8-4c03-b24e-ed5e51b96fc2"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7501),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7501),
                            ModifiedBy = "",
                            Name = "Fun"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("bd9b8763-e15c-4461-b75e-cb3ccccf50da"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7503),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7504),
                            ModifiedBy = "",
                            Name = "Guitar"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Task", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("12/23/2024 14:41:11");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("549e8c5d-f796-4c3f-95cf-7a6fa6ecdefe"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7661),
                            CreatedBy = "",
                            DateEnd = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7658),
                            DateStart = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7658),
                            Description = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7661),
                            ModifiedBy = "",
                            Name = "Check Mails",
                            TaskCategoryId = 5
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("9f7e1a4d-d50b-42ec-8f1c-00fdb0febc6b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7580),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7580),
                            ModifiedBy = "",
                            Name = "PAD Mobile"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("f0ac7953-3b96-425a-8600-6958640d12ff"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7587),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7588),
                            ModifiedBy = "",
                            Name = "PAD Cave"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("1fba525e-0ce5-449e-8736-bf954aef5752"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7590),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7590),
                            ModifiedBy = "",
                            Name = "PAD Kids"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("ab1cc6b3-fe8a-4674-8e47-b5a00896ea36"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7593),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7593),
                            ModifiedBy = "",
                            Name = "Shopping"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("c659c798-ac21-482c-943e-fa49a52c6990"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7595),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(7596),
                            ModifiedBy = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.User", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Birthdate = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("9e9ab3d9-5cba-48bb-9252-1cdb6e5b4cdf"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(8336),
                            CreatedBy = "",
                            Email = "tonyvan@live.fr",
                            FirstName = "Tony",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(8338),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 137, 206, 253, 149, 155, 42, 123, 142, 19, 248, 92, 69, 145, 163, 210, 52, 187, 246, 54, 127, 169, 11, 174, 121, 170, 160, 72, 80, 16, 157, 19, 172, 184, 193, 250, 250, 218, 86, 83, 73, 57, 249, 154, 152, 110, 145, 150, 234, 73, 177, 246, 85, 247, 82, 98, 9, 181, 84, 179, 93, 93, 223, 75, 95 },
                            PasswordSalt = new byte[] { 120, 22, 129, 127, 107, 22, 113, 43, 88, 8, 20, 13, 13, 23, 56, 178, 132, 114, 34, 96, 178, 140, 173, 203, 173, 232, 211, 33, 221, 21, 66, 76, 221, 216, 110, 222, 164, 99, 78, 181, 61, 36, 38, 66, 239, 61, 135, 1, 6, 173, 161, 223, 216, 29, 243, 116, 186, 122, 5, 198, 25, 118, 72, 62, 97, 210, 192, 22, 156, 160, 124, 0, 237, 181, 172, 226, 29, 179, 229, 62, 30, 17, 253, 15, 26, 166, 137, 146, 58, 155, 134, 211, 142, 79, 72, 90, 171, 59, 202, 246, 116, 137, 10, 103, 124, 233, 226, 133, 145, 245, 209, 174, 44, 117, 31, 222, 11, 254, 236, 44, 216, 35, 112, 189, 54, 173, 210, 153 },
                            Pseudonym = "",
                            Role = 2
                        },
                        new
                        {
                            EntityId = 2,
                            Birthdate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("db6b520c-4515-4076-a139-c22713e42513"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(8451),
                            CreatedBy = "",
                            Email = "floppy@gmail.com",
                            FirstName = "Floppy",
                            LastName = "Disk",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(8451),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 25, 198, 82, 208, 180, 146, 152, 104, 185, 22, 87, 157, 213, 138, 24, 16, 44, 101, 211, 32, 72, 190, 178, 236, 134, 184, 41, 199, 163, 8, 171, 156, 50, 42, 165, 127, 194, 155, 130, 84, 69, 79, 94, 67, 233, 44, 194, 135, 71, 10, 142, 235, 219, 99, 67, 154, 18, 8, 238, 27, 109, 70, 44, 143 },
                            PasswordSalt = new byte[] { 32, 17, 196, 218, 72, 149, 10, 211, 75, 64, 42, 153, 51, 90, 84, 45, 33, 234, 170, 226, 190, 97, 144, 158, 5, 186, 104, 31, 189, 179, 168, 180, 89, 198, 102, 182, 97, 50, 225, 184, 77, 155, 42, 15, 152, 225, 23, 194, 44, 210, 24, 167, 160, 46, 21, 212, 206, 82, 138, 133, 9, 19, 206, 237, 41, 60, 78, 193, 161, 187, 1, 201, 15, 203, 103, 138, 107, 98, 181, 118, 17, 194, 234, 118, 199, 110, 85, 169, 105, 206, 26, 122, 211, 114, 232, 23, 156, 85, 43, 36, 229, 99, 244, 36, 247, 141, 53, 251, 168, 74, 166, 253, 48, 72, 254, 72, 67, 10, 150, 169, 254, 151, 43, 23, 121, 111, 157, 202 },
                            Pseudonym = "",
                            Role = 1
                        },
                        new
                        {
                            EntityId = 3,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("2a216d26-b09b-422e-b0ef-04e98f48b91b"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(8535),
                            CreatedBy = "",
                            Email = "vincent.megag@gmail.com",
                            FirstName = "Vincent",
                            LastName = "Megag",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(8535),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 88, 203, 50, 175, 106, 165, 108, 84, 226, 179, 174, 18, 234, 13, 53, 176, 84, 97, 167, 231, 86, 151, 108, 71, 34, 89, 238, 159, 165, 162, 67, 239, 4, 229, 218, 141, 244, 122, 131, 89, 207, 78, 123, 114, 245, 16, 79, 195, 182, 33, 53, 51, 50, 85, 188, 197, 179, 127, 140, 101, 229, 113, 23, 74 },
                            PasswordSalt = new byte[] { 238, 93, 9, 80, 130, 159, 118, 25, 32, 188, 140, 196, 231, 17, 249, 243, 174, 113, 28, 100, 7, 176, 107, 10, 160, 244, 183, 22, 132, 167, 34, 115, 24, 210, 146, 241, 189, 187, 98, 192, 27, 167, 165, 97, 111, 95, 250, 228, 166, 221, 194, 147, 233, 244, 208, 17, 128, 241, 127, 137, 166, 13, 55, 119, 94, 74, 83, 183, 14, 89, 185, 151, 204, 173, 7, 83, 169, 194, 232, 252, 64, 11, 93, 113, 10, 230, 80, 131, 108, 101, 169, 238, 118, 106, 148, 129, 163, 95, 95, 65, 88, 181, 72, 172, 14, 65, 143, 83, 140, 5, 245, 218, 170, 26, 249, 100, 95, 54, 158, 66, 77, 142, 203, 153, 98, 127, 179, 99 },
                            Pseudonym = "",
                            Role = 2
                        },
                        new
                        {
                            EntityId = 4,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("3497ed51-e927-4cc4-9d84-254eeb9ca199"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(8618),
                            CreatedBy = "",
                            Email = "test@test.com",
                            FirstName = "Admin",
                            LastName = "...",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(8618),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 243, 47, 194, 245, 115, 41, 23, 57, 133, 222, 220, 172, 95, 42, 141, 127, 104, 152, 188, 33, 104, 121, 68, 87, 16, 7, 58, 80, 223, 52, 87, 245, 193, 57, 162, 21, 48, 76, 204, 15, 142, 194, 126, 123, 14, 76, 235, 0, 128, 221, 136, 216, 196, 21, 227, 182, 218, 215, 234, 252, 37, 177, 207, 161 },
                            PasswordSalt = new byte[] { 102, 144, 18, 60, 150, 39, 5, 7, 143, 25, 125, 104, 61, 254, 115, 23, 233, 233, 108, 135, 15, 28, 9, 220, 50, 190, 134, 64, 207, 80, 91, 35, 66, 174, 192, 60, 254, 253, 115, 202, 33, 103, 169, 147, 58, 153, 44, 221, 40, 118, 176, 62, 185, 43, 188, 31, 85, 139, 243, 177, 108, 21, 106, 132, 93, 91, 146, 181, 40, 191, 47, 253, 130, 108, 21, 82, 234, 123, 23, 171, 25, 4, 70, 5, 28, 75, 134, 70, 201, 113, 0, 153, 9, 24, 75, 132, 12, 94, 85, 205, 25, 185, 103, 3, 217, 159, 144, 164, 89, 105, 194, 13, 255, 68, 167, 243, 162, 72, 179, 225, 139, 138, 151, 204, 109, 238, 102, 245 },
                            Pseudonym = "",
                            Role = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Document", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Document_Size");
                        });

                    b.HasDiscriminator().HasValue("Document");
                });

            modelBuilder.Entity("MB.Domain.Entities.Image", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Image");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6036),
                            CreatedBy = "",
                            Description = "In Chords Chart",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6036),
                            ModifiedBy = "",
                            Name = " Major Key Notes",
                            Score = 0,
                            Type = 1,
                            Height = 510,
                            Size = 61206,
                            Width = 359
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6061),
                            CreatedBy = "",
                            Description = "7 Notes, 7 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6061),
                            ModifiedBy = "",
                            Name = "Major Diatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 940,
                            Size = 136462,
                            Width = 700
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6068),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6069),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1361,
                            Size = 562138,
                            Width = 868
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6072),
                            CreatedBy = "",
                            Description = "5 Notes, 5 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6072),
                            ModifiedBy = "",
                            Name = "Pentatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 524,
                            Size = 74358,
                            Width = 250
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6076),
                            CreatedBy = "",
                            Description = "Color Measure",
                            Extension = "png",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6076),
                            ModifiedBy = "",
                            Name = "Intervals",
                            Score = 0,
                            Type = 1,
                            Height = 844,
                            Size = 56324,
                            Width = 556
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6080),
                            CreatedBy = "",
                            Description = "Absolute Basics",
                            Extension = "png",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6080),
                            ModifiedBy = "",
                            Name = "Time Measure",
                            Score = 0,
                            Type = 1,
                            Height = 255,
                            Size = 8992,
                            Width = 400
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6083),
                            CreatedBy = "",
                            Description = "Natural Order",
                            Extension = "webp",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6083),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            Score = 0,
                            Type = 1,
                            Height = 226,
                            Size = 30964,
                            Width = 600
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6086),
                            CreatedBy = "",
                            Description = "Communication is important",
                            Extension = "png",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6086),
                            ModifiedBy = "",
                            Name = "Guitar Vocabulary",
                            Score = 0,
                            Type = 1,
                            Height = 705,
                            Size = 99994,
                            Width = 512
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6089),
                            CreatedBy = "",
                            Description = "Diatonic Chords in C Major",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6089),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1317,
                            Size = 204898,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6093),
                            CreatedBy = "",
                            Description = "Mmm... You can tell, right ?",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6093),
                            ModifiedBy = "",
                            Name = "Piano Scales",
                            Score = 0,
                            Type = 1,
                            Height = 900,
                            Size = 91482,
                            Width = 695
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6098),
                            CreatedBy = "",
                            Description = "Overview",
                            Extension = "gif",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6098),
                            ModifiedBy = "",
                            Name = "Tessitures",
                            Score = 0,
                            Type = 1,
                            Height = 709,
                            Size = 62391,
                            Width = 1026
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6101),
                            CreatedBy = "",
                            Description = "Circle of Life",
                            Extension = "png",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6101),
                            ModifiedBy = "",
                            Name = "Chord Wheel",
                            Score = 0,
                            Type = 1,
                            Height = 950,
                            Size = 663017,
                            Width = 950
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6104),
                            CreatedBy = "",
                            Description = " ... ",
                            Extension = "jpeg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6104),
                            ModifiedBy = "",
                            Name = "The Mix is Almost Perfect",
                            Score = 0,
                            Type = 1,
                            Height = 480,
                            Size = 45254,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6107),
                            CreatedBy = "",
                            Description = "Basic Chords / Different Keys",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6107),
                            ModifiedBy = "",
                            Name = "Guitar Progressions",
                            Score = 0,
                            Type = 1,
                            Height = 690,
                            Size = 167969,
                            Width = 552
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc3"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6110),
                            CreatedBy = "",
                            Description = "Les 3, c'est NON !",
                            Extension = "jpeg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6111),
                            ModifiedBy = "",
                            Name = "Vous le voulez comment votre projet ?",
                            Score = 0,
                            Type = 1,
                            Height = 960,
                            Size = 205144,
                            Width = 720
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6146),
                            CreatedBy = "",
                            Description = "1, 2, 3, 4, 5",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6147),
                            ModifiedBy = "",
                            Name = "Fingers Numerotation",
                            Score = 0,
                            Type = 1,
                            Height = 233,
                            Size = 24030,
                            Width = 350
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6150),
                            CreatedBy = "",
                            Description = "My actual Keyboard",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6150),
                            ModifiedBy = "",
                            Name = "Roland FP-30",
                            Score = 0,
                            Type = 1,
                            Height = 368,
                            Size = 87596,
                            Width = 1680
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6156),
                            CreatedBy = "",
                            Description = "How to build a chord",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6156),
                            ModifiedBy = "",
                            Name = "Chord Formula's",
                            Score = 0,
                            Type = 1,
                            Height = 1109,
                            Size = 221030,
                            Width = 1080
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6162),
                            CreatedBy = "",
                            Description = "Valeurs de Temps",
                            Extension = "webp",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6162),
                            ModifiedBy = "",
                            Name = "Time Values",
                            Score = 0,
                            Type = 1,
                            Height = 530,
                            Size = 21922,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd4"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6165),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6165),
                            ModifiedBy = "",
                            Name = "Guitar Chords ( B )",
                            Score = 0,
                            Type = 1,
                            Height = 909,
                            Size = 57447,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6169),
                            CreatedBy = "",
                            Description = "Primary Modes",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6169),
                            ModifiedBy = "",
                            Name = "Modes starting in C",
                            Score = 0,
                            Type = 1,
                            Height = 1552,
                            Size = 111187,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6172),
                            CreatedBy = "",
                            Description = "Good luck finding the good one ...",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6172),
                            ModifiedBy = "",
                            Name = "Guitar Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1913,
                            Size = 633229,
                            Width = 1200
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc5"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6264),
                            CreatedBy = "",
                            Description = "Une approche parmis tant d'autres",
                            Extension = "png",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6265),
                            ModifiedBy = "",
                            Name = "Intervalles",
                            Score = 0,
                            Type = 1,
                            Height = 971,
                            Size = 69313,
                            Width = 692
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Video", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Height")
                                .HasColumnName("Video_Height");

                            t.Property("Size")
                                .HasColumnName("Video_Size");

                            t.Property("Width")
                                .HasColumnName("Video_Width");
                        });

                    b.HasDiscriminator().HasValue("Video");

                    b.HasData(
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6399),
                            CreatedBy = "",
                            Description = " Bendy & The Ink Machine ",
                            Extension = "mp4",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6399),
                            ModifiedBy = "",
                            Name = "BATIM - Build our Machine",
                            Score = 0,
                            Type = 2,
                            Duration = 64,
                            Height = 360,
                            Size = 5091239,
                            Width = 640
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.VideoYouTube", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("VideoYouTube");

                    b.HasData(
                        new
                        {
                            EntityId = 85,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                            Created = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6468),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "",
                            Modified = new DateTime(2024, 12, 23, 13, 41, 11, 719, DateTimeKind.Utc).AddTicks(6469),
                            ModifiedBy = "",
                            Name = "Mario Bros 3 Cover",
                            Score = 0,
                            Type = 4,
                            Url = "WWUxrTdjqg0"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Style", "Style")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookFranchise", b =>
                {
                    b.HasOne("MB.Domain.Entities.Book", "Book")
                        .WithMany("BookFranchise")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("BookFranchise")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Book", "Book")
                        .WithMany("BookModel")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("BookModel")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Media", "Media")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("LinkArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkArtists")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
                {
                    b.HasOne("MB.Domain.Entities.LinkCategory", "LinkCategory")
                        .WithMany("RLinkCategories")
                        .HasForeignKey("LinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("LinkCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkModels")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("LinkModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("MoodArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodArtists")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("MoodModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodModels")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
                {
                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodTags")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Tag", "Tag")
                        .WithMany("MoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.HasOne("MB.Domain.Entities.TagCategory", "TagCategory")
                        .WithMany("Tags")
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.Task", b =>
                {
                    b.HasOne("MB.Domain.Entities.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
                {
                    b.Navigation("ArtistStyles");

                    b.Navigation("LinkArtists");

                    b.Navigation("MoodArtists");
                });

            modelBuilder.Entity("MB.Domain.Entities.Book", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("BookModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("FranchiseMedias");

                    b.Navigation("FranchiseModels");

                    b.Navigation("MoodFranchises");
                });

            modelBuilder.Entity("MB.Domain.Entities.Link", b =>
                {
                    b.Navigation("LinkArtists");

                    b.Navigation("LinkCategories");

                    b.Navigation("LinkModels");
                });

            modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
                {
                    b.Navigation("RLinkCategories");
                });

            modelBuilder.Entity("MB.Domain.Entities.Media", b =>
                {
                    b.Navigation("FranchiseMedias");
                });

            modelBuilder.Entity("MB.Domain.Entities.Model", b =>
                {
                    b.Navigation("BookModel");

                    b.Navigation("FranchiseModels");

                    b.Navigation("LinkModels");

                    b.Navigation("MoodModels");
                });

            modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
                {
                    b.Navigation("MoodArtists");

                    b.Navigation("MoodFranchises");

                    b.Navigation("MoodModels");

                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.Entities.Style", b =>
                {
                    b.Navigation("ArtistStyles");
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
