// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MB.Domain.ArtistAggregate.Artist", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("146cf1e9-2426-4282-9da4-68bc006c8e74"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1238),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1240),
                            ModifiedBy = "",
                            Name = "# Unknown Artist",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("170ef61e-7c45-41d3-945d-193cbf25bdc1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1252),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1253),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("fe105f22-e819-41b2-8130-2ef294c95878"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1255),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1255),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Illustrator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("aa08397c-13e6-4c3f-8dc7-bc4787819518"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1258),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1258),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("8f9bff5a-d72b-47aa-81ea-8628c869fdb1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1264),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1264),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("8e7fefea-3aab-4382-adb9-4e0cacafa905"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1269),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1269),
                            ModifiedBy = "",
                            Name = "/ Unknown A.I. User",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("efb4d174-4631-4830-8681-cecaac64929d"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1271),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1271),
                            ModifiedBy = "",
                            Name = "/ Unknown Musician",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("7d418d2f-60af-448f-a4a4-b83030da3d64"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1274),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1274),
                            ModifiedBy = "",
                            Name = "/ Unknown Photographer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("40ab667c-bfa2-4ef6-bc21-acd0085d116e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1279),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1279),
                            ModifiedBy = "",
                            Name = "/ Unknown Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("2bba982d-4f4a-4150-a8c5-c8ea941fa23f"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1283),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1283),
                            ModifiedBy = "",
                            Name = "/ Unknown Videast",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("cac5e592-f7d0-4fb1-a6b8-109ef8a94a99"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1286),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1286),
                            ModifiedBy = "",
                            Name = "/ Unknown Writer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("78f2bbca-945d-4d88-a588-966ea2cddca2"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1288),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1288),
                            ModifiedBy = "",
                            Name = "Flying PAD",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("21dc4cbf-5b9b-42a1-a332-74d1d390ae38"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1293),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1293),
                            ModifiedBy = "",
                            Name = "Soën9048",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("cf3a7701-c45e-44c2-bab2-0ff4cf6e3107"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1295),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1295),
                            ModifiedBy = "",
                            Name = "CohesivePanda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("021944ea-f19e-4703-b83f-868069eb42fe"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1298),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1298),
                            ModifiedBy = "",
                            Name = "Nobuo Uematsu",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("a0ba59ce-4988-4d0f-991c-a2f86f4f20c0"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1300),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1300),
                            ModifiedBy = "",
                            Name = "Eichiro Oda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("e7c9c44f-57ef-4487-af3f-5290dc29f8c6"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1305),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1305),
                            ModifiedBy = "",
                            Name = "Masashi Kishimoto",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("633baf0e-0634-4f5d-9c70-0e18562fa94b"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1376),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1377),
                            ModifiedBy = "",
                            Name = "Dali",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("e358ed8e-02cc-4016-8efb-5e9f0cc50cae"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1380),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1380),
                            ModifiedBy = "",
                            Name = "Yoko Shimomura",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("4db5d504-7fbf-412b-b9fa-e50319c3b9b3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1382),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1383),
                            ModifiedBy = "",
                            Name = "Michael Jackson",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("a015ceb7-4520-4275-85b1-67b5e63f52a1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1388),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1388),
                            ModifiedBy = "",
                            Name = "CG5",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("b194e7e3-33d0-4e96-8376-11d21dd55650"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1390),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1390),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("1799729a-5e71-4010-a8d1-11ddde9fc055"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1392),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1393),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Pseudonym = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationArtistStyle", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("RArtistStyle");

                    b.HasData(
                        new
                        {
                            ArtistId = 12,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 12,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 13,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 14,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 15,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 16,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 17,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 18,
                            StyleId = 1
                        },
                        new
                        {
                            ArtistId = 19,
                            StyleId = 2
                        },
                        new
                        {
                            ArtistId = 20,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 21,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 22,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 23,
                            StyleId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkArtist", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RLinkArtist");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkModel", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RLinkModel");
                });

            modelBuilder.Entity("MB.Domain.BoardAggregate.Board", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MB.Domain.BookAggregate.Book", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.Franchise", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("922543b2-09fc-47dd-9368-02a790c463dc"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1803),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1803),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("99db88b3-e269-40a6-b6d1-eee504015da4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1809),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1809),
                            ModifiedBy = "",
                            Name = "Street Fighter"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("ca6646a8-4f2a-438f-be2d-2ca137618ba5"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1813),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1813),
                            ModifiedBy = "",
                            Name = "# Unrelated Franchise"
                        });
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationBookFranchise", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RBookFranchise");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationFranchiseMedia", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RFranchiseMedia");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            MediaId = 9
                        },
                        new
                        {
                            FranchiseId = 2,
                            MediaId = 7
                        },
                        new
                        {
                            FranchiseId = 3,
                            MediaId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.Link", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("92c535ab-b245-45ab-9f30-f79ef97c20d3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2103),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2103),
                            ModifiedBy = "",
                            Name = "KVR",
                            Url = "https://www.kvraudio.com/"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("963a71d9-17b3-4053-9a30-8409166e00c0"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2108),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2108),
                            ModifiedBy = "",
                            Name = "MuseScore",
                            Url = "https://musescore.com/"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("66d140c5-e068-4376-bfe4-23de6f7bbf90"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2111),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2111),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.native-instruments.com"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("f97061d7-f972-48ab-b65d-710d4aae287e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2118),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2118),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.steinberg.net/"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("5e1d816b-1ca6-448b-9422-a8352a957cf4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2121),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2121),
                            ModifiedBy = "",
                            Name = "Clés pour l'harmonie",
                            Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("a79c6948-bd5f-4d38-b88e-61f754777317"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2125),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2125),
                            ModifiedBy = "",
                            Name = "Google | Metronome",
                            Url = "https://www.google.com/search?q=metronome"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("fa08be28-8a3d-4ba8-aa1b-fe56ec61810a"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2128),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2128),
                            ModifiedBy = "",
                            Name = "Google | Stopwatch",
                            Url = "https://www.google.com/search?q=stopwatch"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("120a1a43-9d9e-4db2-88cf-3b8332d6e5f8"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2133),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2133),
                            ModifiedBy = "",
                            Name = "Google | Timer",
                            Url = "https://www.google.com/search?q=timer"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("e68cba04-a16f-4d7b-a607-a91ef20e6371"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2135),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2135),
                            ModifiedBy = "",
                            Name = "Mangold Project",
                            Url = "https://www.youtube.com/@MangoldProject"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("9ee6ea79-8f52-4e7d-af0b-497bc1f2db10"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2139),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2139),
                            ModifiedBy = "",
                            Name = "# YouTube",
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("97e05b7c-164d-4289-8ba9-bdb6be2d7e4e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2141),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2142),
                            ModifiedBy = "",
                            Name = "Piano Jazz Concept",
                            Url = "https://www.youtube.com/@Pianojazzconcept"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("4843ee50-b9aa-4215-ba0e-12e0355add68"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2146),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2146),
                            ModifiedBy = "",
                            Name = "Rick Beato",
                            Url = "https://www.youtube.com/@RickBeato"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("a8f177cd-d51d-4fbb-81e2-0340088be630"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2149),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2149),
                            ModifiedBy = "",
                            Name = "Pianote",
                            Url = "https://www.youtube.com/@PianoteOfficial"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("a8b23cd8-a9f5-410e-b565-03add719f870"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2151),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2151),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Url = "https://www.youtube.com/@TryHardNinja"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("c05a5c4f-a78c-44c7-a7f1-60e29536662a"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2154),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2154),
                            ModifiedBy = "",
                            Name = "Kyle Allen Music",
                            Url = "https://www.youtube.com/@KyleAllenMusic"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("df455711-6a8b-46df-b79f-3e182611b4d5"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2158),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2159),
                            ModifiedBy = "",
                            Name = "Ableton",
                            Url = "https://www.youtube.com/@Ableton"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("0fb11071-0508-4cca-acb7-0bc7d7d31b2e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2161),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2161),
                            ModifiedBy = "",
                            Name = "La Machine à Mixer",
                            Url = "https://www.youtube.com/@lamachineamixer"
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("1c3056b0-0266-4916-abe8-0fd4224f06ae"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2164),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2165),
                            ModifiedBy = "",
                            Name = "Audiofanzine",
                            Url = "https://www.youtube.com/@audiofanzine"
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("4e404d4b-ad66-4eef-ab74-f50fe4e3fded"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2168),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2168),
                            ModifiedBy = "",
                            Name = "Cubase",
                            Url = "https://www.youtube.com/@Cubase"
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("84b11926-8add-4abf-99dc-7a0d5f52a441"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2173),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2173),
                            ModifiedBy = "",
                            Name = "Ten Second Songs",
                            Url = "https://www.youtube.com/@TenSecondSongs"
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("01fb8fe3-c596-429d-97f4-c78a9d5e28e2"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2175),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2176),
                            ModifiedBy = "",
                            Name = "The Piano Guys",
                            Url = "https://www.youtube.com/@thepianoguys"
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("b03e20fa-999f-4bac-a05d-865c88981149"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2178),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2178),
                            ModifiedBy = "",
                            Name = "CG5",
                            Url = "https://www.youtube.com/@CG5"
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("0a65719a-ce29-4ba1-a6bc-f78121f0989b"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2180),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2181),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.youtube.com/@NativeInstruments"
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("3169b4fa-d31d-4f29-a192-cc039e7a1c77"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2185),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2185),
                            ModifiedBy = "",
                            Name = "Ken Tamplin Vocal Academy",
                            Url = "https://www.youtube.com/@kentamplin"
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("d6ba1a79-f462-48ab-8e5d-c6f9cb0fb4fe"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2187),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2188),
                            ModifiedBy = "",
                            Name = "Pentatonix",
                            Url = "https://www.youtube.com/@PTXofficial"
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("d908ca64-669d-4670-acca-61e437e21958"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2190),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2190),
                            ModifiedBy = "",
                            Name = "Recording Revolution",
                            Url = "https://www.youtube.com/@recordingrevolution"
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("94a6a584-3d54-472a-8c5a-3cfaad2515f9"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2193),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2193),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Url = "https://www.youtube.com/@jacobcollier"
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("189050d0-c7db-4142-b195-5202d3c16345"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2197),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2197),
                            ModifiedBy = "",
                            Name = "Orchestration Online",
                            Url = "https://www.youtube.com/@OrchestrationOnline"
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("d699acd8-bd20-40d6-b042-50c82b548bc2"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2200),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2200),
                            ModifiedBy = "",
                            Name = "Nuendo",
                            Url = "https://www.youtube.com/@Nuendo"
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("183906ba-4035-4c9f-826f-da8585483914"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2202),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2203),
                            ModifiedBy = "",
                            Name = "reFX",
                            Url = "https://www.youtube.com/@reFXaudio"
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("956298b0-9fe5-4e2b-8512-f6c75cb1bfc9"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2205),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2205),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.youtube.com/@steinberg"
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.RelationLinkCategory", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("LinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "LinkCategoryId");

                    b.HasIndex("LinkCategoryId");

                    b.ToTable("RLinkCategory");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 9
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 4,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 4
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 5
                        },
                        new
                        {
                            LinkId = 6,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 7,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 8,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 10,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 12,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 13,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 15,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 16,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 17,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 18,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 19,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 20,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 21,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 22,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 23,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 24,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 25,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 2
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 14
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 28,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 29,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 30,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 31,
                            LinkCategoryId = 12
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkCategoryAggregate.LinkCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("LinkCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("ca44e74c-9a47-4932-88da-944a26f0bbe0"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2294),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2295),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("3f3bca58-3fc3-40ac-87a1-1c2fd68015eb"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2301),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2301),
                            ModifiedBy = "",
                            Name = "Audio | Mix & Master"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("42926187-e86d-48de-9910-45b52bb7bfea"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2303),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2304),
                            ModifiedBy = "",
                            Name = "Audio | Sound Design"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("88210f2b-f385-4b4d-9c97-b1debc3d3630"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2306),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2306),
                            ModifiedBy = "",
                            Name = "Books"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("40c4d3f2-deb8-4716-925d-0dbabf996fbe"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2310),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2311),
                            ModifiedBy = "",
                            Name = "Books | Harmony"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("b4541aee-d8b2-472f-8485-f2696688c4a9"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2314),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2314),
                            ModifiedBy = "",
                            Name = "Software"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("8e55d966-8e05-4d47-b536-97477cb2d8ef"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2316),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2317),
                            ModifiedBy = "",
                            Name = "Software | D.A.W."
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("a0be2dae-8258-4e49-b967-1a98eeb101ae"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2319),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2319),
                            ModifiedBy = "",
                            Name = "Software | V.S.T."
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("12a901ca-190b-466a-877f-54132f607b12"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2324),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2324),
                            ModifiedBy = "",
                            Name = "Software | Music Notation"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("31eb18a2-c98e-43c0-9b5f-e05377edb516"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2327),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2328),
                            ModifiedBy = "",
                            Name = "Tools"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("fa13f53b-b4ad-4ad4-a7c7-7bfed049e7cf"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2330),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2330),
                            ModifiedBy = "",
                            Name = "Tools | Global"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("884e6dd2-4672-4b60-bb62-6c932741e502"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2332),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2332),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("f4080549-69a6-488c-836b-8e36024e3bf3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2337),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2337),
                            ModifiedBy = "",
                            Name = "YouTube | Artists"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("907b6da8-47e2-4172-bb2e-5d5eee576d1e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2339),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2339),
                            ModifiedBy = "",
                            Name = "YouTube | Audio"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("2d1ee3c8-a8be-4bd7-88a7-b1b2934a2484"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2342),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2342),
                            ModifiedBy = "",
                            Name = "YouTube | Piano & Keys"
                        });
                });

            modelBuilder.Entity("MB.Domain.MediumAggregate.Media", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("1226dcba-a2e7-4ef1-80cf-791bbd7470e7"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1863),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1863),
                            ModifiedBy = "",
                            Name = "# Unrelated"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("353ba6d1-36cc-4060-8ac5-1d8073d545c7"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1868),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1868),
                            ModifiedBy = "",
                            Name = "# Unknown"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("32025ef8-98d1-4175-b98a-b7a5674d2b55"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1871),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1872),
                            ModifiedBy = "",
                            Name = "# Super Franchise"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("702e9c52-793a-419f-b30b-f96b43e55e03"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1875),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1875),
                            ModifiedBy = "",
                            Name = "TV"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("6b0ea01a-9c35-4a5b-893e-3a1e5b1e1ece"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1880),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1880),
                            ModifiedBy = "",
                            Name = "Radio"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("77881dbd-b1cd-4a9d-9b5d-ee39ff53e832"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1884),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1885),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("c00c7468-8fc4-409f-9fbe-1bf999604e7a"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1887),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1888),
                            ModifiedBy = "",
                            Name = "Capcom"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("26b4f8f7-2202-4d51-8239-bad55e5926b1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1890),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1890),
                            ModifiedBy = "",
                            Name = "Square-Enix"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("31eda03c-4483-4198-b76f-1defbd44588e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1895),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1895),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.Model", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("051bd2d2-386a-41c8-a68b-8fb2fb6107f8"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2714),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2715),
                            ModifiedBy = "",
                            Pseudonym = "# Unknown Model"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("9e8be2ca-8890-4628-b69a-bb664aeac37c"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2730),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2730),
                            ModifiedBy = "",
                            Pseudonym = "# Unrelated Model"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("f931276a-7788-4c01-b62f-f291d93d4306"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2734),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "Tony",
                            Gender = "M",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2735),
                            ModifiedBy = "",
                            Pseudonym = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationBookModel", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RBookModel");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationFranchiseModel", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RFranchiseModel");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            ModelId = 3
                        },
                        new
                        {
                            FranchiseId = 3,
                            ModelId = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Mood", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator<int>("Type").HasValue(0);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodArtist", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RMoodArtist");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ArtistId = 12
                        },
                        new
                        {
                            MoodId = 13,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodFranchise", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RMoodFranchise");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodModel", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RMoodModel");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ModelId = 3
                        },
                        new
                        {
                            MoodId = 13,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ModelId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodTag", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RMoodTag");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 8
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 19
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 58
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 43
                        });
                });

            modelBuilder.Entity("MB.Domain.StyleAggregate.Style", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("d502dae3-6fd8-4969-a66c-58c316d7cbaf"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1624),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1624),
                            ModifiedBy = "",
                            Name = "2D"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("312b346f-bf8e-4ccf-aff0-7c133db9e5b1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1635),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1636),
                            ModifiedBy = "",
                            Name = "2D Animation"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("056570ae-d8ae-4dd4-a346-213ceea3929a"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1638),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1638),
                            ModifiedBy = "",
                            Name = "3D"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("e2def073-6391-4840-ae3f-1a7ef4084024"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1641),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1641),
                            ModifiedBy = "",
                            Name = "3D Animation"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("1c2d57ec-2fb4-41d5-8c63-b861c108f6eb"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1643),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1644),
                            ModifiedBy = "",
                            Name = "Architecture"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("0e48abdc-e2b9-4c79-88bc-d45720edd1ba"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1650),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1650),
                            ModifiedBy = "",
                            Name = "Writer"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("271d6073-a1b5-4dca-85d5-5b3f55e239fa"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1652),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1652),
                            ModifiedBy = "",
                            Name = "Music"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("6e941a8c-3ad4-4fe4-9cd4-84fd35622bce"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1655),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1655),
                            ModifiedBy = "",
                            Name = "Photo"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("f799b33d-2e31-4d02-952d-fa089aca44dc"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1657),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1658),
                            ModifiedBy = "",
                            Name = "Video"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("21ab1bd2-cf7f-4340-8587-6548c41b018f"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1663),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(1664),
                            ModifiedBy = "",
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("BusinessId")
                        .HasDatabaseName("IX_Tag_BusinessId");

                    b.HasIndex("TagCategoryId")
                        .HasDatabaseName("IX_Tag_TagCategoryId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("a805c62c-f0dd-411d-990e-b520497d499d"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4014),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4015),
                            ModifiedBy = "",
                            Name = "# All Files",
                            TagCategoryId = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("e5e85de0-b7fe-42dd-b9b2-4bee21edfe0b"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4023),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4023),
                            ModifiedBy = "",
                            Name = "Audio",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("7bb2772c-27d2-4385-b605-0cdf59dff443"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4031),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4031),
                            ModifiedBy = "",
                            Name = "Document",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("c5273aff-12f9-40c4-adc8-fe0ce01c5c70"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4033),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4034),
                            ModifiedBy = "",
                            Name = "Image",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("89f57d6b-38d9-4e58-8618-ab5624b67740"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4036),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4036),
                            ModifiedBy = "",
                            Name = "Video",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("c59b2485-771d-4eeb-916e-7e6678aa202e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4039),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4040),
                            ModifiedBy = "",
                            Name = "*.txt",
                            TagCategoryId = 3
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("f9398a88-2de9-4585-a672-4b2fe867319d"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4044),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4044),
                            ModifiedBy = "",
                            Name = "*.bmp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("2fa2591e-6c91-4af2-88e1-f57ea1d3f09d"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4047),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4047),
                            ModifiedBy = "",
                            Name = "*.gif",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("f6384f85-658e-47ea-8f68-738621418548"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4049),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4049),
                            ModifiedBy = "",
                            Name = "*.jpeg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("f34cf5b8-0c61-4995-aeb6-bdb076527001"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4052),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4053),
                            ModifiedBy = "",
                            Name = "*.jpg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("ba51ce48-d19e-45c5-928f-f175bc8ce3d0"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4057),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4057),
                            ModifiedBy = "",
                            Name = "*.png",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("6b2d1f62-682f-481c-9245-ccf5373c16f4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4060),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4060),
                            ModifiedBy = "",
                            Name = "*.webp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("fd25b95b-4ecd-41a7-88dd-8b75d29325dd"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4062),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4062),
                            ModifiedBy = "",
                            Name = "*.mp4",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("f6aed2d3-be42-4095-8544-3cded57feba3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4064),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4065),
                            ModifiedBy = "",
                            Name = "*.webm",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("d19f62ac-9a3c-4389-830a-68d12c20bc61"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4069),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4069),
                            ModifiedBy = "",
                            Name = "Landscape",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("e3964e69-c1e4-4a8e-bc0e-309860c3c052"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4071),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4072),
                            ModifiedBy = "",
                            Name = "Landscape ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("730c393a-fa9f-4551-99c7-760e130bbc10"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4074),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4074),
                            ModifiedBy = "",
                            Name = "Portrait",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("8797dc74-e414-44c3-a954-7f96c472d179"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4077),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4078),
                            ModifiedBy = "",
                            Name = "Portrait ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("bbf01adf-b1a1-4cb4-9c52-9d25aac08986"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4082),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4082),
                            ModifiedBy = "",
                            Name = "Square",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("d5c12951-b91c-4299-9f7e-38c9ac407f5c"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4084),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4085),
                            ModifiedBy = "",
                            Name = "2D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("f1343f49-5632-4f8e-96e1-5a247983dfbe"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4088),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4088),
                            ModifiedBy = "",
                            Name = "2D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("141c255c-6639-43f6-ab43-d37b48a65101"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4090),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4090),
                            ModifiedBy = "",
                            Name = "3D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("ef1a9fe7-86ed-4f1d-b3d9-fdb902bb8bb0"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4095),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4095),
                            ModifiedBy = "",
                            Name = "3D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("a29d4f64-da45-4c9e-899d-667e64d31f14"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4097),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4098),
                            ModifiedBy = "",
                            Name = "Photo",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("1b1e7510-cd02-4a3d-ad2a-04390d9172ff"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4100),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4100),
                            ModifiedBy = "",
                            Name = "Photo | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("acf52c3a-a69c-4971-80b9-1b67d3d9c0ae"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4102),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4102),
                            ModifiedBy = "",
                            Name = "E.D.M.",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("3370ef82-bafb-4240-9851-60b45941c816"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4107),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4107),
                            ModifiedBy = "",
                            Name = "Jazz",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("82308f0c-9529-48db-938f-be0edd97726a"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4109),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4110),
                            ModifiedBy = "",
                            Name = "Metal",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("81d8bf48-abe4-4fef-874a-e4978d612770"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4112),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4112),
                            ModifiedBy = "",
                            Name = "Orchestral",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("4eea340d-7220-4548-91f9-2be60eab516e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4114),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4115),
                            ModifiedBy = "",
                            Name = "Pop Music",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("e8d8c221-0cad-4e39-ab80-68fd6fe95663"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4119),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4119),
                            ModifiedBy = "",
                            Name = "Rap",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("edf08791-daa8-4de8-8056-4f8fe2cef4a8"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4121),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4122),
                            ModifiedBy = "",
                            Name = "Rock",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 33,
                            BusinessId = new Guid("3adf28d9-a9da-4dfe-acb0-345887ab0686"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4124),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4124),
                            ModifiedBy = "",
                            Name = "Traditional",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 34,
                            BusinessId = new Guid("27d5df6c-3cd4-4195-a152-d8e7815f0e00"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4127),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4128),
                            ModifiedBy = "",
                            Name = "# Music Theory",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 35,
                            BusinessId = new Guid("812d8fec-0286-4431-914f-5fec018ea760"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4132),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4132),
                            ModifiedBy = "",
                            Name = "# Harmony",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 36,
                            BusinessId = new Guid("d438812c-f950-40f1-8b72-49527096fa3c"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4134),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4135),
                            ModifiedBy = "",
                            Name = "Chords",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 37,
                            BusinessId = new Guid("6c28ba68-de0c-4c27-a216-4fa665f4a42e"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4137),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4137),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 38,
                            BusinessId = new Guid("c42be781-4a81-4744-a3c7-582208a71eec"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4139),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4139),
                            ModifiedBy = "",
                            Name = "Intervals",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 39,
                            BusinessId = new Guid("f83d78e1-dc53-42f5-8810-57cfdcd8bf02"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4144),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4144),
                            ModifiedBy = "",
                            Name = "Rythm",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 40,
                            BusinessId = new Guid("e20bf3a6-69de-49b8-9b32-cf3e59ed7204"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4146),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4147),
                            ModifiedBy = "",
                            Name = "Scales",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 41,
                            BusinessId = new Guid("39a03afb-54a4-4f69-b46d-99a6b4a93f02"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4149),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4149),
                            ModifiedBy = "",
                            Name = "Modes",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 42,
                            BusinessId = new Guid("35f6de74-3d5f-4704-91bf-67ea94dc6d16"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4151),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4151),
                            ModifiedBy = "",
                            Name = "# Keys",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 43,
                            BusinessId = new Guid("84527b62-283c-41cf-b401-2e395706994b"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4157),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4157),
                            ModifiedBy = "",
                            Name = "Piano",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 44,
                            BusinessId = new Guid("cd6b1fba-ae17-4911-a157-f672d98ad368"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4159),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4159),
                            ModifiedBy = "",
                            Name = "# Brass",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 45,
                            BusinessId = new Guid("c3474d63-cea5-4dbf-a691-8c02a4bc54dc"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4162),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4162),
                            ModifiedBy = "",
                            Name = "Trombone",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 46,
                            BusinessId = new Guid("493c0120-956a-44fc-ad34-84de4e31d98a"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4164),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4164),
                            ModifiedBy = "",
                            Name = "# Strings",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 47,
                            BusinessId = new Guid("c6405e42-343c-4fb1-8ade-5d2c81b338b6"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4169),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4169),
                            ModifiedBy = "",
                            Name = "Violin",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 48,
                            BusinessId = new Guid("fb9b46a9-5885-4c41-9845-43c5df7502a3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4171),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4171),
                            ModifiedBy = "",
                            Name = "# Percussions",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 49,
                            BusinessId = new Guid("3862bc8f-87bb-49b1-91ad-881385ae553f"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4174),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4174),
                            ModifiedBy = "",
                            Name = "Drums",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 50,
                            BusinessId = new Guid("62fc554e-58ec-4c3b-b258-175b2a63b1b1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4176),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4176),
                            ModifiedBy = "",
                            Name = "# Woodwinds",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 51,
                            BusinessId = new Guid("3fa18361-cf38-4023-ba8b-cb4f19133bf7"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4181),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4181),
                            ModifiedBy = "",
                            Name = "Clarinet",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 52,
                            BusinessId = new Guid("d0d841dd-1a2b-48a9-80cd-58e03ed3e129"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4183),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4183),
                            ModifiedBy = "",
                            Name = "# Audio",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 53,
                            BusinessId = new Guid("5bcae623-fee0-4925-9d79-56d71e738b1d"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4186),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4186),
                            ModifiedBy = "",
                            Name = "Mixing",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 54,
                            BusinessId = new Guid("83f241f4-abd6-45c6-ab7e-7d818f5d37d5"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4188),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4188),
                            ModifiedBy = "",
                            Name = "Mastering",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("da969a41-6cf1-4270-8273-91a2368c03fb"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4193),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4193),
                            ModifiedBy = "",
                            Name = "Recording",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 56,
                            BusinessId = new Guid("95c2a62f-0021-4c06-9a88-dd0726e32495"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4195),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4196),
                            ModifiedBy = "",
                            Name = "Production",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 57,
                            BusinessId = new Guid("ae4ffe14-bc18-42b8-b1f9-14380cdba0d7"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4198),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4198),
                            ModifiedBy = "",
                            Name = "Sound Design",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 58,
                            BusinessId = new Guid("1b481d28-b524-40b6-ab46-d9f8552c31f8"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4200),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4200),
                            ModifiedBy = "",
                            Name = "Memes",
                            TagCategoryId = 16
                        },
                        new
                        {
                            EntityId = 59,
                            BusinessId = new Guid("cb6f70b0-00cb-4f38-b102-ab592dc9768f"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4205),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4205),
                            ModifiedBy = "",
                            Name = "# Guitar",
                            TagCategoryId = 17
                        });
                });

            modelBuilder.Entity("MB.Domain.TagCategoryAggregate.TagCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TagCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("ec9a7bbc-6d7e-4b85-9711-0cb1ba9fd84d"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4354),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4355),
                            ModifiedBy = "",
                            Name = "#"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("b4cae43f-ade2-4146-948e-56e3b4596fc4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4360),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4360),
                            ModifiedBy = "",
                            Name = "# File"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("33d3b5ee-5ae9-4b17-9396-385b5cb4fc19"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4363),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4363),
                            ModifiedBy = "",
                            Name = "# File ext. | Doc."
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("2acfe1cc-8885-460a-9ea2-235896c4a444"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4370),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4370),
                            ModifiedBy = "",
                            Name = "# File ext. | Image"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("53c2cb84-5d81-47f4-bde1-3de6a2a68805"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4374),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4374),
                            ModifiedBy = "",
                            Name = "# File ext. | Video"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("07d4cfeb-275e-4359-a904-7b94c4422b99"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4379),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4379),
                            ModifiedBy = "",
                            Name = "# File Format"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("4f35aad2-d3af-4f64-812d-4a607880f256"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4382),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4382),
                            ModifiedBy = "",
                            Name = "# File Render"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("0dc01a5b-5ebe-4445-ad07-e921db5e5697"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4387),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4388),
                            ModifiedBy = "",
                            Name = "Music Genre"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("961d58a8-5b6a-4a8f-8e21-50ff1e579832"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4390),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4390),
                            ModifiedBy = "",
                            Name = "Music Theory"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("affa2a8f-1e25-4ee9-a4f9-9a4a3a299ddc"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4394),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4394),
                            ModifiedBy = "",
                            Name = "Keys"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("807dce70-3cbb-4fbd-8125-85f50c509957"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4397),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4397),
                            ModifiedBy = "",
                            Name = "Brass"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("5e482498-f196-428d-9626-801804879738"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4403),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4403),
                            ModifiedBy = "",
                            Name = "Strings"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("0cf69978-c6e8-485f-b3da-ff6eab735ed6"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4406),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4406),
                            ModifiedBy = "",
                            Name = "Percussions"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("3682bb09-1174-4384-bdf4-36a27c5a5a71"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4409),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4409),
                            ModifiedBy = "",
                            Name = "Woodwinds"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("0d1930bc-562c-448a-9e04-6cd5b0ed1a35"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4412),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4412),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("8eebf040-ca0c-4d75-8168-6ecbfc63c3b0"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4417),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4417),
                            ModifiedBy = "",
                            Name = "Fun"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("8f83fa0f-ee53-4d3e-a451-612c7ffb28fa"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4420),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4420),
                            ModifiedBy = "",
                            Name = "Guitar"
                        });
                });

            modelBuilder.Entity("MB.Domain.TaskAggregate.Task", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("04/21/2025 16:16:48");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("0b71aa0f-d9d9-485b-9c3d-44755d6d0cf2"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4548),
                            CreatedBy = "",
                            DateEnd = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4546),
                            DateStart = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4544),
                            Description = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4548),
                            ModifiedBy = "",
                            Name = "Check Mails",
                            TaskCategoryId = 5
                        });
                });

            modelBuilder.Entity("MB.Domain.TaskCategoryAggregate.TaskCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("afd568a8-ff56-4d48-a2e0-0f0367bb9f26"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4481),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4482),
                            ModifiedBy = "",
                            Name = "PAD Mobile"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("87eb1767-5f6b-4449-ab0c-6e39de623d07"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4487),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4487),
                            ModifiedBy = "",
                            Name = "PAD Cave"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cf42e875-f35e-4778-8ae4-e81b0743aff4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4493),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4493),
                            ModifiedBy = "",
                            Name = "PAD Kids"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("072e8b8f-17cb-48b4-b3f8-5aac2eca4586"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4496),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4496),
                            ModifiedBy = "",
                            Name = "Shopping"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("1f0293ff-34fc-4eb4-bf87-0670b5efd2e1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4499),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4499),
                            ModifiedBy = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.User", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Birthdate = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("dfae075f-b927-4adc-8dd2-abb4882c854c"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4965),
                            CreatedBy = "",
                            Email = "tonyvan@live.fr",
                            Experience = 0,
                            FirstName = "Tony",
                            LastName = "Van Langenhove",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(4966),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 105, 241, 128, 147, 125, 180, 119, 119, 221, 9, 200, 142, 210, 17, 55, 212, 47, 51, 17, 23, 147, 183, 188, 30, 171, 151, 210, 228, 106, 46, 172, 135, 71, 105, 101, 37, 99, 215, 179, 249, 237, 189, 97, 200, 55, 128, 116, 244, 55, 10, 77, 132, 154, 179, 169, 220, 17, 176, 137, 185, 244, 191, 112, 98 },
                            PasswordSalt = new byte[] { 250, 228, 219, 255, 108, 7, 32, 2, 226, 215, 96, 160, 48, 166, 84, 90, 180, 12, 211, 9, 26, 163, 173, 95, 194, 207, 57, 131, 50, 106, 252, 58, 3, 121, 32, 3, 111, 129, 102, 218, 242, 194, 236, 7, 135, 27, 152, 8, 18, 109, 26, 239, 146, 12, 0, 101, 136, 100, 77, 74, 4, 89, 251, 59, 205, 37, 254, 170, 54, 163, 118, 171, 154, 46, 243, 156, 136, 218, 133, 70, 52, 244, 78, 12, 37, 146, 48, 200, 162, 132, 113, 151, 215, 202, 233, 147, 141, 167, 232, 23, 99, 179, 189, 191, 85, 151, 240, 170, 82, 151, 54, 153, 133, 79, 18, 46, 213, 21, 197, 147, 244, 240, 121, 86, 80, 229, 53, 141 },
                            Role = 2,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 2,
                            Birthdate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("ac7932ab-38ff-457f-bfb0-a5474e587af0"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(5102),
                            CreatedBy = "",
                            Email = "floppy@gmail.com",
                            Experience = 0,
                            FirstName = "Floppy",
                            LastName = "Disk",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(5102),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 245, 51, 66, 4, 91, 162, 86, 229, 94, 43, 141, 139, 72, 61, 97, 225, 149, 247, 92, 34, 167, 10, 102, 22, 231, 132, 150, 14, 231, 195, 33, 126, 218, 8, 167, 122, 29, 123, 0, 22, 201, 41, 229, 56, 77, 225, 34, 81, 154, 224, 220, 56, 210, 176, 204, 157, 154, 242, 33, 208, 53, 156, 145, 88 },
                            PasswordSalt = new byte[] { 254, 39, 182, 131, 64, 147, 112, 37, 72, 175, 245, 48, 112, 39, 19, 161, 125, 74, 249, 5, 231, 100, 136, 67, 14, 212, 30, 7, 101, 164, 23, 4, 10, 63, 98, 246, 14, 207, 228, 165, 119, 194, 77, 17, 83, 10, 157, 44, 62, 91, 253, 165, 227, 15, 218, 144, 73, 30, 79, 103, 187, 93, 191, 198, 178, 148, 2, 214, 64, 76, 209, 85, 85, 143, 63, 103, 198, 206, 103, 163, 221, 217, 163, 71, 16, 249, 170, 57, 241, 175, 81, 139, 246, 100, 173, 81, 160, 5, 133, 74, 79, 45, 176, 195, 208, 98, 191, 189, 15, 205, 59, 83, 116, 141, 219, 211, 56, 155, 154, 209, 212, 207, 43, 192, 151, 77, 230, 1 },
                            Role = 1,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 3,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("5745e0df-8a00-4bd1-ae96-d7096b1f0024"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(5170),
                            CreatedBy = "",
                            Email = "vincent.megag@gmail.com",
                            Experience = 0,
                            FirstName = "Vincent",
                            LastName = "Megag",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(5170),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 19, 208, 216, 56, 128, 104, 62, 215, 0, 15, 103, 147, 191, 184, 254, 97, 9, 130, 98, 110, 231, 253, 31, 207, 238, 188, 197, 134, 140, 195, 148, 123, 128, 195, 111, 37, 61, 228, 88, 63, 233, 5, 80, 8, 208, 141, 144, 171, 235, 158, 201, 12, 246, 47, 218, 59, 140, 226, 55, 240, 25, 176, 213, 112 },
                            PasswordSalt = new byte[] { 142, 114, 244, 246, 61, 58, 88, 5, 215, 158, 249, 18, 155, 193, 173, 189, 254, 123, 212, 37, 69, 143, 20, 215, 76, 40, 56, 231, 117, 73, 219, 53, 87, 208, 159, 254, 93, 9, 79, 221, 88, 125, 254, 46, 117, 54, 17, 180, 80, 1, 33, 116, 36, 178, 226, 65, 46, 91, 106, 45, 89, 192, 73, 202, 243, 156, 160, 125, 70, 231, 49, 109, 163, 38, 15, 92, 122, 218, 60, 136, 220, 159, 131, 236, 139, 172, 129, 182, 237, 54, 48, 139, 39, 20, 88, 65, 131, 197, 205, 71, 2, 32, 100, 8, 139, 254, 1, 245, 24, 127, 213, 144, 126, 188, 249, 144, 239, 232, 221, 14, 140, 93, 184, 184, 80, 11, 36, 109 },
                            Role = 2,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 4,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("23a92409-11b7-42e6-81d1-1c0712185c14"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(5233),
                            CreatedBy = "",
                            Email = "test@test.com",
                            Experience = 0,
                            FirstName = "Admin",
                            LastName = "...",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(5233),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 239, 14, 153, 84, 15, 181, 27, 14, 87, 218, 160, 155, 209, 179, 125, 183, 217, 246, 195, 17, 109, 236, 243, 199, 61, 161, 238, 189, 38, 188, 213, 17, 148, 204, 90, 83, 190, 206, 119, 116, 135, 168, 30, 7, 245, 133, 208, 212, 87, 198, 74, 55, 118, 155, 247, 223, 249, 185, 66, 166, 176, 22, 109, 4 },
                            PasswordSalt = new byte[] { 13, 85, 49, 207, 138, 15, 248, 216, 241, 203, 218, 18, 154, 62, 248, 110, 170, 215, 228, 62, 86, 13, 2, 148, 29, 193, 74, 225, 158, 69, 113, 208, 168, 134, 152, 207, 249, 132, 205, 48, 138, 53, 146, 161, 241, 79, 251, 12, 37, 223, 35, 178, 26, 219, 22, 24, 201, 54, 14, 50, 97, 83, 99, 143, 34, 166, 141, 132, 226, 18, 232, 254, 201, 47, 196, 6, 57, 24, 137, 251, 125, 65, 244, 106, 189, 101, 249, 30, 99, 219, 59, 158, 177, 164, 211, 73, 254, 100, 130, 30, 165, 98, 242, 139, 162, 43, 97, 237, 179, 225, 153, 131, 248, 133, 79, 225, 210, 230, 98, 30, 103, 97, 0, 235, 200, 255, 136, 109 },
                            Role = 2,
                            UserName = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Document", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Document_Size");
                        });

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Image", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2831),
                            CreatedBy = "",
                            Description = "In Chords Chart",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2831),
                            ModifiedBy = "",
                            Name = " Major Key Notes",
                            Score = 0,
                            Type = 1,
                            Height = 510,
                            Size = 61206,
                            Width = 359
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2849),
                            CreatedBy = "",
                            Description = "7 Notes, 7 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2850),
                            ModifiedBy = "",
                            Name = "Major Diatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 940,
                            Size = 136462,
                            Width = 700
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2857),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2857),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1361,
                            Size = 562138,
                            Width = 868
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2863),
                            CreatedBy = "",
                            Description = "5 Notes, 5 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2864),
                            ModifiedBy = "",
                            Name = "Pentatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 524,
                            Size = 74358,
                            Width = 250
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2875),
                            CreatedBy = "",
                            Description = "Color Measure",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2875),
                            ModifiedBy = "",
                            Name = "Intervals",
                            Score = 0,
                            Type = 1,
                            Height = 844,
                            Size = 56324,
                            Width = 556
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2885),
                            CreatedBy = "",
                            Description = "Absolute Basics",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2886),
                            ModifiedBy = "",
                            Name = "Time Measure",
                            Score = 0,
                            Type = 1,
                            Height = 255,
                            Size = 8992,
                            Width = 400
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2892),
                            CreatedBy = "",
                            Description = "Natural Order",
                            Extension = "webp",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2892),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            Score = 0,
                            Type = 1,
                            Height = 226,
                            Size = 30964,
                            Width = 600
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2899),
                            CreatedBy = "",
                            Description = "Communication is important",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2899),
                            ModifiedBy = "",
                            Name = "Guitar Vocabulary",
                            Score = 0,
                            Type = 1,
                            Height = 705,
                            Size = 99994,
                            Width = 512
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2904),
                            CreatedBy = "",
                            Description = "Diatonic Chords in C Major",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2905),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1317,
                            Size = 204898,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2913),
                            CreatedBy = "",
                            Description = "Mmm... You can tell, right ?",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2913),
                            ModifiedBy = "",
                            Name = "Piano Scales",
                            Score = 0,
                            Type = 1,
                            Height = 900,
                            Size = 91482,
                            Width = 695
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2919),
                            CreatedBy = "",
                            Description = "Overview",
                            Extension = "gif",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2919),
                            ModifiedBy = "",
                            Name = "Tessitures",
                            Score = 0,
                            Type = 1,
                            Height = 709,
                            Size = 62391,
                            Width = 1026
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2925),
                            CreatedBy = "",
                            Description = "Circle of Life",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2926),
                            ModifiedBy = "",
                            Name = "Chord Wheel",
                            Score = 0,
                            Type = 1,
                            Height = 950,
                            Size = 663017,
                            Width = 950
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2936),
                            CreatedBy = "",
                            Description = " ... ",
                            Extension = "jpeg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2936),
                            ModifiedBy = "",
                            Name = "The Mix is Almost Perfect",
                            Score = 0,
                            Type = 1,
                            Height = 480,
                            Size = 45254,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2941),
                            CreatedBy = "",
                            Description = "Basic Chords / Different Keys",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2942),
                            ModifiedBy = "",
                            Name = "Guitar Progressions",
                            Score = 0,
                            Type = 1,
                            Height = 690,
                            Size = 167969,
                            Width = 552
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2948),
                            CreatedBy = "",
                            Description = "Les 3, c'est NON !",
                            Extension = "jpeg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2949),
                            ModifiedBy = "",
                            Name = "Vous le voulez comment votre projet ?",
                            Score = 0,
                            Type = 1,
                            Height = 960,
                            Size = 205144,
                            Width = 720
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2955),
                            CreatedBy = "",
                            Description = "1, 2, 3, 4, 5",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2955),
                            ModifiedBy = "",
                            Name = "Fingers Numerotation",
                            Score = 0,
                            Type = 1,
                            Height = 233,
                            Size = 24030,
                            Width = 350
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2962),
                            CreatedBy = "",
                            Description = "My actual Keyboard",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2962),
                            ModifiedBy = "",
                            Name = "Roland FP-30",
                            Score = 0,
                            Type = 1,
                            Height = 368,
                            Size = 87596,
                            Width = 1680
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2970),
                            CreatedBy = "",
                            Description = "How to build a chord",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2971),
                            ModifiedBy = "",
                            Name = "Chord Formula's",
                            Score = 0,
                            Type = 1,
                            Height = 1109,
                            Size = 221030,
                            Width = 1080
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2980),
                            CreatedBy = "",
                            Description = "Valeurs de Temps",
                            Extension = "webp",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2980),
                            ModifiedBy = "",
                            Name = "Time Values",
                            Score = 0,
                            Type = 1,
                            Height = 530,
                            Size = 21922,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd4"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2985),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(2985),
                            ModifiedBy = "",
                            Name = "Guitar Chords ( B )",
                            Score = 0,
                            Type = 1,
                            Height = 909,
                            Size = 57447,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3076),
                            CreatedBy = "",
                            Description = "Primary Modes",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3077),
                            ModifiedBy = "",
                            Name = "Modes starting in C",
                            Score = 0,
                            Type = 1,
                            Height = 1552,
                            Size = 111187,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3085),
                            CreatedBy = "",
                            Description = "Good luck finding the good one ...",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3085),
                            ModifiedBy = "",
                            Name = "Guitar Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1913,
                            Size = 633229,
                            Width = 1200
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc5"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3092),
                            CreatedBy = "",
                            Description = "Une approche parmis tant d'autres",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3092),
                            ModifiedBy = "",
                            Name = "Intervalles",
                            Score = 0,
                            Type = 1,
                            Height = 971,
                            Size = 69313,
                            Width = 692
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Video", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Height")
                                .HasColumnName("Video_Height");

                            t.Property("Size")
                                .HasColumnName("Video_Size");

                            t.Property("Width")
                                .HasColumnName("Video_Width");
                        });

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3252),
                            CreatedBy = "",
                            Description = " Bendy & The Ink Machine ",
                            Extension = "mp4",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3254),
                            ModifiedBy = "",
                            Name = "BATIM - Build our Machine",
                            Score = 0,
                            Type = 2,
                            Duration = 64,
                            Height = 360,
                            Size = 5091239,
                            Width = 640
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.VideoYouTube", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue(4);

                    b.HasData(
                        new
                        {
                            EntityId = 85,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                            Created = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3360),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "",
                            Modified = new DateTime(2025, 4, 21, 14, 16, 48, 471, DateTimeKind.Utc).AddTicks(3360),
                            ModifiedBy = "",
                            Name = "Mario Bros 3 Cover",
                            Score = 0,
                            Type = 4,
                            Url = "WWUxrTdjqg0"
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationArtistStyle", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.StyleAggregate.Style", "Style")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkArtist", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("LinkArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkArtists")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkModel", b =>
                {
                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkModels")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("LinkModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationBookFranchise", b =>
                {
                    b.HasOne("MB.Domain.BookAggregate.Book", "Book")
                        .WithMany("BookFranchise")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("BookFranchise")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationFranchiseMedia", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MediumAggregate.Media", "Media")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.RelationLinkCategory", b =>
                {
                    b.HasOne("MB.Domain.LinkCategoryAggregate.LinkCategory", "LinkCategory")
                        .WithMany("RLinkCategories")
                        .HasForeignKey("LinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("LinkCategory");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationBookModel", b =>
                {
                    b.HasOne("MB.Domain.BookAggregate.Book", "Book")
                        .WithMany("BookModel")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("BookModel")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationFranchiseModel", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodArtist", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("MoodArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodArtists")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodFranchise", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodModel", b =>
                {
                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("MoodModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodModels")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodTag", b =>
                {
                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodTags")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.TagAggregate.Tag", "Tag")
                        .WithMany("MoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.HasOne("MB.Domain.TagCategoryAggregate.TagCategory", "TagCategory")
                        .WithMany("Tags")
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("MB.Domain.TaskAggregate.Task", b =>
                {
                    b.HasOne("MB.Domain.TaskCategoryAggregate.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.Artist", b =>
                {
                    b.Navigation("ArtistStyles");

                    b.Navigation("LinkArtists");

                    b.Navigation("MoodArtists");
                });

            modelBuilder.Entity("MB.Domain.BookAggregate.Book", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("BookModel");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.Franchise", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("FranchiseMedias");

                    b.Navigation("FranchiseModels");

                    b.Navigation("MoodFranchises");
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.Link", b =>
                {
                    b.Navigation("LinkArtists");

                    b.Navigation("LinkCategories");

                    b.Navigation("LinkModels");
                });

            modelBuilder.Entity("MB.Domain.LinkCategoryAggregate.LinkCategory", b =>
                {
                    b.Navigation("RLinkCategories");
                });

            modelBuilder.Entity("MB.Domain.MediumAggregate.Media", b =>
                {
                    b.Navigation("FranchiseMedias");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.Model", b =>
                {
                    b.Navigation("BookModel");

                    b.Navigation("FranchiseModels");

                    b.Navigation("LinkModels");

                    b.Navigation("MoodModels");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Mood", b =>
                {
                    b.Navigation("MoodArtists");

                    b.Navigation("MoodFranchises");

                    b.Navigation("MoodModels");

                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.StyleAggregate.Style", b =>
                {
                    b.Navigation("ArtistStyles");
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.TagCategoryAggregate.TagCategory", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MB.Domain.TaskCategoryAggregate.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
