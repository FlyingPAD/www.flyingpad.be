// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250430121055_AddEmaiVerification")]
    partial class AddEmaiVerification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MB.Domain.ArtistAggregate.Artist", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("ebaf98a7-4467-40a3-a85d-de4545cfbfb2"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4963),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4964),
                            ModifiedBy = "",
                            Name = "# Unknown Artist",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("e969e3ca-1fa1-4540-a466-28e913c1d109"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4975),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4975),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("5fcd5207-2502-4054-bc0c-a511528ed492"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4977),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4978),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Illustrator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("6ef8bdda-a72e-4124-ba1e-3cb8f1b25889"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4997),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4997),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("307be23a-5728-44cd-86ff-8d0f26d34884"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(4999),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5000),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("f9a25710-ea8f-4750-b557-eb0f6e6607ec"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5004),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5004),
                            ModifiedBy = "",
                            Name = "/ Unknown A.I. User",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("345b784f-86fb-4327-a589-41b09adffefb"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5006),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5007),
                            ModifiedBy = "",
                            Name = "/ Unknown Musician",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("bf654060-e680-42de-9aec-35169353c26f"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5011),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5012),
                            ModifiedBy = "",
                            Name = "/ Unknown Photographer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("0179f86a-09f8-46ab-9f2f-ff1102166471"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5014),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5014),
                            ModifiedBy = "",
                            Name = "/ Unknown Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("232153f3-38c7-43b7-b069-86bc65d0f948"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5017),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5017),
                            ModifiedBy = "",
                            Name = "/ Unknown Videast",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("17bd1b78-adcc-4e99-bb03-dd1485f2dd92"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5019),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5019),
                            ModifiedBy = "",
                            Name = "/ Unknown Writer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("9067fc89-245f-4a97-9eec-3457ce3cad70"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5024),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5024),
                            ModifiedBy = "",
                            Name = "Flying PAD",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("f2f6f368-338d-418b-b151-cca396e0ca0d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5026),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5026),
                            ModifiedBy = "",
                            Name = "Soën9048",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("1ae25e6b-83cd-4cee-acae-f9ee5333a02c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5039),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5040),
                            ModifiedBy = "",
                            Name = "CohesivePanda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("761794b0-28fb-41f9-888a-3658e247d229"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5049),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5049),
                            ModifiedBy = "",
                            Name = "Nobuo Uematsu",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("e20b07ee-68f6-4aa3-aee9-391baff7cbfd"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5053),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5054),
                            ModifiedBy = "",
                            Name = "Eichiro Oda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("9701327d-f5e3-4234-98e2-dea1c8844ef0"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5056),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5056),
                            ModifiedBy = "",
                            Name = "Masashi Kishimoto",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("61eec827-8c7f-45b8-938f-2785cd05c98b"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5059),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5060),
                            ModifiedBy = "",
                            Name = "Dali",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("0639529c-d836-4cbb-8b5e-80f7ba819e64"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5062),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5062),
                            ModifiedBy = "",
                            Name = "Yoko Shimomura",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("44822889-0676-4ed7-9c7d-415b9bad8f73"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5066),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5066),
                            ModifiedBy = "",
                            Name = "Michael Jackson",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("a2605bf1-4d88-4b9f-b101-b3e953e66642"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5068),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5069),
                            ModifiedBy = "",
                            Name = "CG5",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("99fc4192-ae48-45d1-b2e0-3089998e8812"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5071),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5071),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("6a5f61ef-0b2b-4305-915f-b9e74694e3b7"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5074),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5074),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Pseudonym = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationArtistStyle", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("RArtistStyle");

                    b.HasData(
                        new
                        {
                            ArtistId = 12,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 12,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 13,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 14,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 15,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 16,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 17,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 18,
                            StyleId = 1
                        },
                        new
                        {
                            ArtistId = 19,
                            StyleId = 2
                        },
                        new
                        {
                            ArtistId = 20,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 21,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 22,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 23,
                            StyleId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkArtist", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RLinkArtist");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkModel", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RLinkModel");
                });

            modelBuilder.Entity("MB.Domain.BoardAggregate.Board", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MB.Domain.BookAggregate.Book", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.Franchise", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("0a3cf2fc-d88a-4c01-9029-a46a9f6f81a5"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5486),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5487),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("45cb54e2-cbba-4c3b-8a36-a76fb56608cf"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5493),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5494),
                            ModifiedBy = "",
                            Name = "Street Fighter"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("b91e90a0-1d80-4bd6-94f7-694ba3f4081d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5548),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5549),
                            ModifiedBy = "",
                            Name = "# Unrelated Franchise"
                        });
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationBookFranchise", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RBookFranchise");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationFranchiseMedia", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RFranchiseMedia");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            MediaId = 9
                        },
                        new
                        {
                            FranchiseId = 2,
                            MediaId = 7
                        },
                        new
                        {
                            FranchiseId = 3,
                            MediaId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.Link", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("017b8836-4064-4671-b997-d89e395f3c60"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5864),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5865),
                            ModifiedBy = "",
                            Name = "KVR",
                            Url = "https://www.kvraudio.com/"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("88e8b749-9256-4d33-94d2-d8e957c53c32"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5871),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5872),
                            ModifiedBy = "",
                            Name = "MuseScore",
                            Url = "https://musescore.com/"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("ad94a6e0-20cf-4411-a2ec-fcbe15b36a8c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5877),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5877),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.native-instruments.com"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("046ad1f9-a16d-447d-b7e3-6cdab3a764df"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5879),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5880),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.steinberg.net/"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("a6e2b824-f39a-4bfd-adbf-145962b4892c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5882),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5882),
                            ModifiedBy = "",
                            Name = "Clés pour l'harmonie",
                            Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("2feb45b5-75bc-47cd-b483-4a24bf09a4e0"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5886),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5886),
                            ModifiedBy = "",
                            Name = "Google | Metronome",
                            Url = "https://www.google.com/search?q=metronome"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("bb87ba9d-5dae-4942-bec9-2a065bf044cf"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5890),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5891),
                            ModifiedBy = "",
                            Name = "Google | Stopwatch",
                            Url = "https://www.google.com/search?q=stopwatch"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("e3802d4b-884e-44e0-b080-bb44c30f357b"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5894),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5894),
                            ModifiedBy = "",
                            Name = "Google | Timer",
                            Url = "https://www.google.com/search?q=timer"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("01cb67b1-6d49-4923-9991-95ab642e6e35"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5896),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5896),
                            ModifiedBy = "",
                            Name = "Mangold Project",
                            Url = "https://www.youtube.com/@MangoldProject"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("fd2ed02d-1d03-4e11-931b-6c3e0c00a035"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5899),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5899),
                            ModifiedBy = "",
                            Name = "# YouTube",
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("d8efef12-ba07-4350-a5d5-29561617f753"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5904),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5904),
                            ModifiedBy = "",
                            Name = "Piano Jazz Concept",
                            Url = "https://www.youtube.com/@Pianojazzconcept"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("4d52e83e-9d6b-4176-aa8a-a834d84120e4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5906),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5906),
                            ModifiedBy = "",
                            Name = "Rick Beato",
                            Url = "https://www.youtube.com/@RickBeato"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("c0f6e3b2-7bdf-4f2a-823f-6d5f26d57fe3"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5909),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5909),
                            ModifiedBy = "",
                            Name = "Pianote",
                            Url = "https://www.youtube.com/@PianoteOfficial"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("5829e1e8-9cd8-4e1d-87e2-d3b17ea9db64"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5911),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5911),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Url = "https://www.youtube.com/@TryHardNinja"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("b3e73fcd-52da-4cd3-9993-ee5108b6050a"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5916),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5916),
                            ModifiedBy = "",
                            Name = "Kyle Allen Music",
                            Url = "https://www.youtube.com/@KyleAllenMusic"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("7db42c0d-3410-4a4d-9ab0-47c5aa8f071c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5918),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5918),
                            ModifiedBy = "",
                            Name = "Ableton",
                            Url = "https://www.youtube.com/@Ableton"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("2ebe5aa4-8aba-4dae-9e08-d9f5138b909e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5920),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5920),
                            ModifiedBy = "",
                            Name = "La Machine à Mixer",
                            Url = "https://www.youtube.com/@lamachineamixer"
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("145d4b6e-f7e5-4c33-98cd-c6f5da8d5cdb"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5923),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5924),
                            ModifiedBy = "",
                            Name = "Audiofanzine",
                            Url = "https://www.youtube.com/@audiofanzine"
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("67645337-c66c-4746-a0b4-d77c93504763"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5928),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5928),
                            ModifiedBy = "",
                            Name = "Cubase",
                            Url = "https://www.youtube.com/@Cubase"
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("0712b32a-2a4f-4b9a-862f-6e3ea8af3a1d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5930),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5931),
                            ModifiedBy = "",
                            Name = "Ten Second Songs",
                            Url = "https://www.youtube.com/@TenSecondSongs"
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("a61b1fa7-688d-4377-8de3-77ac5f7154ec"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5933),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5933),
                            ModifiedBy = "",
                            Name = "The Piano Guys",
                            Url = "https://www.youtube.com/@thepianoguys"
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("a86a1197-bc04-46d1-84cf-e08f8e7b30d1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5935),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5935),
                            ModifiedBy = "",
                            Name = "CG5",
                            Url = "https://www.youtube.com/@CG5"
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("de099225-3f62-43e6-bf99-62f86d0a3778"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5940),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5940),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.youtube.com/@NativeInstruments"
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("04191d65-dc86-462f-88d3-ad98656f3781"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5942),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5942),
                            ModifiedBy = "",
                            Name = "Ken Tamplin Vocal Academy",
                            Url = "https://www.youtube.com/@kentamplin"
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("e2be0724-fb74-43fa-889b-206e3fe06bd1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5944),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5945),
                            ModifiedBy = "",
                            Name = "Pentatonix",
                            Url = "https://www.youtube.com/@PTXofficial"
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("ea6cc5bd-4f13-48a1-8ba4-fb5948554cc3"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5947),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5947),
                            ModifiedBy = "",
                            Name = "Recording Revolution",
                            Url = "https://www.youtube.com/@recordingrevolution"
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("bb850514-8f18-457a-9159-d25cccc63ada"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5952),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5952),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Url = "https://www.youtube.com/@jacobcollier"
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("3883a284-18b1-4b54-9d88-a48a97887f80"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5954),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5954),
                            ModifiedBy = "",
                            Name = "Orchestration Online",
                            Url = "https://www.youtube.com/@OrchestrationOnline"
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("c133fb44-1c05-45fd-b9bc-be520c99f26e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5957),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5957),
                            ModifiedBy = "",
                            Name = "Nuendo",
                            Url = "https://www.youtube.com/@Nuendo"
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("b2fa80ae-d59e-4927-9c88-fec4cbf15f06"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5960),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5960),
                            ModifiedBy = "",
                            Name = "reFX",
                            Url = "https://www.youtube.com/@reFXaudio"
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("d76bb936-adf0-4667-90be-f609f26b7fc6"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5965),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5965),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.youtube.com/@steinberg"
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.RelationLinkCategory", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("LinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "LinkCategoryId");

                    b.HasIndex("LinkCategoryId");

                    b.ToTable("RLinkCategory");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 9
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 4,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 4
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 5
                        },
                        new
                        {
                            LinkId = 6,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 7,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 8,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 10,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 12,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 13,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 15,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 16,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 17,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 18,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 19,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 20,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 21,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 22,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 23,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 24,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 25,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 2
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 14
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 28,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 29,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 30,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 31,
                            LinkCategoryId = 12
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkCategoryAggregate.LinkCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("LinkCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("6494cb9f-81e0-4bd5-ab33-0546ebe42910"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6102),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6103),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("5f5e0cdd-8df7-4638-a03c-7a5dce1679da"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6109),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6109),
                            ModifiedBy = "",
                            Name = "Audio | Mix & Master"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("e0658f12-8326-491f-bf26-c9d40e374390"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6111),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6112),
                            ModifiedBy = "",
                            Name = "Audio | Sound Design"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("d8d7276e-7d9f-4ce1-8d76-9144174fdb2d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6118),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6118),
                            ModifiedBy = "",
                            Name = "Books"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("b1bd3297-9cfd-42c5-8332-91fa9ab8fa8b"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6120),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6120),
                            ModifiedBy = "",
                            Name = "Books | Harmony"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("8bd9fca3-a6da-4d57-a4ce-35aefdd18e74"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6124),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6124),
                            ModifiedBy = "",
                            Name = "Software"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("de20f5ea-bbd9-4473-bb0f-d85053a62071"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6126),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6126),
                            ModifiedBy = "",
                            Name = "Software | D.A.W."
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("20d5cf3a-e4af-43bd-b40d-b21708d9acb4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6130),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6131),
                            ModifiedBy = "",
                            Name = "Software | V.S.T."
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("3f83cd95-a4c1-4f73-9ad9-ef63d6e2fbfc"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6133),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6133),
                            ModifiedBy = "",
                            Name = "Software | Music Notation"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("7c571268-8386-4c2d-986e-8a1d68e0edac"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6136),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6136),
                            ModifiedBy = "",
                            Name = "Tools"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("266e032e-e01b-418b-be0c-8438eb955603"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6138),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6138),
                            ModifiedBy = "",
                            Name = "Tools | Global"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("e8df7311-020e-4871-a1df-7d70d8d4732a"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6142),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6143),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("1f042609-f59f-4bf8-9296-78c11b849f9b"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6145),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6145),
                            ModifiedBy = "",
                            Name = "YouTube | Artists"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("edecf290-9f5b-428a-9466-07bafef39de8"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6147),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6147),
                            ModifiedBy = "",
                            Name = "YouTube | Audio"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("43832c4b-a273-4947-b694-8bc1dd87fdc9"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6149),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6149),
                            ModifiedBy = "",
                            Name = "YouTube | Piano & Keys"
                        });
                });

            modelBuilder.Entity("MB.Domain.MediumAggregate.Media", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("122921ca-c747-4648-9ff7-66fb5e6a020b"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5629),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5630),
                            ModifiedBy = "",
                            Name = "# Unrelated"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("2bd2e43f-2af9-4cc1-a0dd-c5a8c67f5cb2"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5635),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5635),
                            ModifiedBy = "",
                            Name = "# Unknown"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("bba6c7e1-c4cc-4e94-8fcc-e79a2588a00e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5637),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5638),
                            ModifiedBy = "",
                            Name = "# Super Franchise"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("03a598b3-21a5-4e9b-b929-dc02c30cfa9e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5643),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5644),
                            ModifiedBy = "",
                            Name = "TV"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("5bf6093a-7f31-40b0-a778-d1792bcc529e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5646),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5646),
                            ModifiedBy = "",
                            Name = "Radio"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("baa90002-2cd2-4454-b9bd-8451d0c20520"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5650),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5650),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("6aca3308-8e6e-4ea1-8ed9-366be6b00d69"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5652),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5652),
                            ModifiedBy = "",
                            Name = "Capcom"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("89d91921-3571-44b1-931b-51372aa5aa06"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5656),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5657),
                            ModifiedBy = "",
                            Name = "Square-Enix"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("0c7f0510-8912-45b5-9441-eae79b599d9f"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5659),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5659),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.Model", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("63e1981b-1a37-4fd2-a28e-f60cb3f89142"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6359),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6360),
                            ModifiedBy = "",
                            Pseudonym = "# Unknown Model"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("f509e20f-261f-4e41-8b88-aed26edc2acf"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6366),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6366),
                            ModifiedBy = "",
                            Pseudonym = "# Unrelated Model"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("87cab1d4-5cd9-40fa-8518-98931ca8007c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6369),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "Tony",
                            Gender = "M",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6370),
                            ModifiedBy = "",
                            Pseudonym = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationBookModel", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RBookModel");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationFranchiseModel", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RFranchiseModel");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            ModelId = 3
                        },
                        new
                        {
                            FranchiseId = 3,
                            ModelId = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Mood", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator<int>("Type").HasValue(0);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodArtist", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RMoodArtist");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ArtistId = 12
                        },
                        new
                        {
                            MoodId = 13,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodFranchise", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RMoodFranchise");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodModel", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RMoodModel");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ModelId = 3
                        },
                        new
                        {
                            MoodId = 13,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ModelId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodTag", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RMoodTag");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 8
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 19
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 58
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 43
                        });
                });

            modelBuilder.Entity("MB.Domain.StyleAggregate.Style", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("a49abb93-b691-473f-bc92-9bdf6129c10c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5290),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5290),
                            ModifiedBy = "",
                            Name = "2D"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("e321ca1e-4c98-4904-8318-5dd586208b55"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5296),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5296),
                            ModifiedBy = "",
                            Name = "2D Animation"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("84b0d32f-d6ac-4823-9a88-d834ac47b83e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5299),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5299),
                            ModifiedBy = "",
                            Name = "3D"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("8f1cf5b2-ef0d-4958-9894-32919b681f71"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5301),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5301),
                            ModifiedBy = "",
                            Name = "3D Animation"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("bd92cbca-14e8-4d85-b05f-b8ab4c1d80c3"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5307),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5307),
                            ModifiedBy = "",
                            Name = "Architecture"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("02ba23e0-4e24-4c6a-b530-3e39a607fc2b"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5310),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5310),
                            ModifiedBy = "",
                            Name = "Writer"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("24d52a54-17f4-45c3-b57d-0cd6ae71f673"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5313),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5313),
                            ModifiedBy = "",
                            Name = "Music"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("87493f45-017c-4249-a669-d8ff322883bf"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5315),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5315),
                            ModifiedBy = "",
                            Name = "Photo"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("3d6643a1-7e73-4804-bc75-d2b1424a4d40"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5319),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5320),
                            ModifiedBy = "",
                            Name = "Video"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("614b8193-a6ff-46d3-91ac-1aaa4a18aba1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5323),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(5323),
                            ModifiedBy = "",
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("BusinessId")
                        .HasDatabaseName("IX_Tag_BusinessId");

                    b.HasIndex("TagCategoryId")
                        .HasDatabaseName("IX_Tag_TagCategoryId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("294878f6-d163-4563-91a7-3762478c42d1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7405),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7407),
                            ModifiedBy = "",
                            Name = "# All Files",
                            TagCategoryId = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("4c44ef84-e05a-41cd-b8f9-a1db2fa31d13"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7412),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7412),
                            ModifiedBy = "",
                            Name = "Audio",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("9f2f256e-e6fa-4165-83bb-d3eccba45d40"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7415),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7415),
                            ModifiedBy = "",
                            Name = "Document",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("27ccde90-29ee-443f-8161-f31f4797c342"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7417),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7417),
                            ModifiedBy = "",
                            Name = "Image",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("67127fd2-8ca3-495b-a1ff-300786b272c9"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7422),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7422),
                            ModifiedBy = "",
                            Name = "Video",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("2dc49cae-4f61-471c-868b-b145287d7e55"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7425),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7426),
                            ModifiedBy = "",
                            Name = "*.txt",
                            TagCategoryId = 3
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("18d5f67e-7016-4cc0-9bff-56caf0854d5c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7428),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7428),
                            ModifiedBy = "",
                            Name = "*.bmp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("e7444f73-9deb-4905-96c2-d48af89d1344"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7430),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7430),
                            ModifiedBy = "",
                            Name = "*.gif",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("be37b8fb-ef4f-418a-98b4-0421541ef37e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7435),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7435),
                            ModifiedBy = "",
                            Name = "*.jpeg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("b50677a9-5303-4b30-a146-c568a6ba4f64"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7439),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7440),
                            ModifiedBy = "",
                            Name = "*.jpg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("b1491f7a-39ce-494a-8c42-bd2cee250866"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7442),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7442),
                            ModifiedBy = "",
                            Name = "*.png",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("a4732c0a-4970-403d-ae04-4330d2c542f6"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7445),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7445),
                            ModifiedBy = "",
                            Name = "*.webp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("128fd1ab-8427-41c2-b833-035c6e1c842f"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7449),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7449),
                            ModifiedBy = "",
                            Name = "*.mp4",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("6312124e-6f31-4b7a-b6c9-6830661b231c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7451),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7452),
                            ModifiedBy = "",
                            Name = "*.webm",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("a38d0044-9c3f-4cf2-8095-a7352949bc83"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7454),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7454),
                            ModifiedBy = "",
                            Name = "Landscape",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("9c3b66b8-4463-4f37-8278-23012face1cf"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7456),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7456),
                            ModifiedBy = "",
                            Name = "Landscape ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("c19543b6-3fe3-445d-b31d-0abdc553eded"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7460),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7461),
                            ModifiedBy = "",
                            Name = "Portrait",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("4c8cf567-1e5a-4ba3-bd0d-119b40145768"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7464),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7464),
                            ModifiedBy = "",
                            Name = "Portrait ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("9fe01c43-2e57-4415-9205-e4b57cabfb43"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7466),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7466),
                            ModifiedBy = "",
                            Name = "Square",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("7a0256c0-fd84-4960-8662-a8e8da9e3334"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7468),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7469),
                            ModifiedBy = "",
                            Name = "2D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("dbb91a12-a5a2-4e2b-9990-189df67269fd"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7473),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7473),
                            ModifiedBy = "",
                            Name = "2D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("a3d5b6c4-0586-432b-9ed3-f4ea3431685b"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7475),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7475),
                            ModifiedBy = "",
                            Name = "3D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("672ba361-7f17-4607-9951-d66dabe9717f"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7478),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7478),
                            ModifiedBy = "",
                            Name = "3D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("ece3ed27-2c5b-453d-ae62-653048e88ac6"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7480),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7480),
                            ModifiedBy = "",
                            Name = "Photo",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("43bffd5f-9243-4225-89bc-e3d09eadc3d7"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7484),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7485),
                            ModifiedBy = "",
                            Name = "Photo | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("34e4b75f-a38c-47ae-a1d8-1499d9caa55d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7487),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7487),
                            ModifiedBy = "",
                            Name = "E.D.M.",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("43318f5f-d63a-4099-be15-e771dc38f5d6"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7489),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7489),
                            ModifiedBy = "",
                            Name = "Jazz",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("23389ffe-4c14-43aa-a65b-6e9fc5a32b67"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7491),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7492),
                            ModifiedBy = "",
                            Name = "Metal",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("ecfe55a6-af0b-4676-9a19-682c77d533f8"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7496),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7496),
                            ModifiedBy = "",
                            Name = "Orchestral",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("815bd7c9-1946-4545-8911-a491ab82d79d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7498),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7498),
                            ModifiedBy = "",
                            Name = "Pop Music",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("31be778a-bdb0-4b59-9421-e0cc806791d0"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7501),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7501),
                            ModifiedBy = "",
                            Name = "Rap",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("3f7c3e44-fa84-4337-ad16-ca84bded3057"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7504),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7504),
                            ModifiedBy = "",
                            Name = "Rock",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 33,
                            BusinessId = new Guid("64c3e5b3-c0d8-4bf8-9681-59610af71130"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7508),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7508),
                            ModifiedBy = "",
                            Name = "Traditional",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 34,
                            BusinessId = new Guid("88e8e37c-823a-4b84-a853-cdf6f8f3136a"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7566),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7566),
                            ModifiedBy = "",
                            Name = "# Music Theory",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 35,
                            BusinessId = new Guid("c89aac88-222f-4caa-8386-96f06a738a1b"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7569),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7569),
                            ModifiedBy = "",
                            Name = "# Harmony",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 36,
                            BusinessId = new Guid("3761de3f-cacd-4606-8355-c3bea4c55c3c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7571),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7571),
                            ModifiedBy = "",
                            Name = "Chords",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 37,
                            BusinessId = new Guid("ba1b30e7-02a3-47bd-b003-45a51dae5ef9"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7576),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7576),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 38,
                            BusinessId = new Guid("3cb10245-2308-40f1-b5ae-02f35826507a"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7578),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7579),
                            ModifiedBy = "",
                            Name = "Intervals",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 39,
                            BusinessId = new Guid("bee6e8d6-f32b-42db-a179-91c6d5d6a58a"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7581),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7581),
                            ModifiedBy = "",
                            Name = "Rythm",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 40,
                            BusinessId = new Guid("2c756784-6877-4ae2-98ca-909df575e7e0"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7583),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7583),
                            ModifiedBy = "",
                            Name = "Scales",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 41,
                            BusinessId = new Guid("161b1cb2-ab05-46d9-822a-17778cdb42a0"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7587),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7588),
                            ModifiedBy = "",
                            Name = "Modes",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 42,
                            BusinessId = new Guid("5c4da291-70a3-4426-9b44-fe826bb9cfe1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7590),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7590),
                            ModifiedBy = "",
                            Name = "# Keys",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 43,
                            BusinessId = new Guid("32295705-b2dc-4d02-971f-a375cdadcb08"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7592),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7592),
                            ModifiedBy = "",
                            Name = "Piano",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 44,
                            BusinessId = new Guid("0538bb72-944c-4058-b9ed-0bf9b58deae9"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7594),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7595),
                            ModifiedBy = "",
                            Name = "# Brass",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 45,
                            BusinessId = new Guid("75cb6e5e-3b03-43a6-bca0-ead160f1df44"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7599),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7599),
                            ModifiedBy = "",
                            Name = "Trombone",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 46,
                            BusinessId = new Guid("304a9b6f-01ce-45c9-b30e-9de823c888c2"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7601),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7601),
                            ModifiedBy = "",
                            Name = "# Strings",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 47,
                            BusinessId = new Guid("83b6049b-5509-4b98-8cff-104c0bebfe79"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7604),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7604),
                            ModifiedBy = "",
                            Name = "Violin",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 48,
                            BusinessId = new Guid("a8d9d544-0d58-4127-8a80-ce2ae2b4b0c4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7606),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7606),
                            ModifiedBy = "",
                            Name = "# Percussions",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 49,
                            BusinessId = new Guid("ed3a7f3d-f3d0-423d-9458-bfa59f561250"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7610),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7610),
                            ModifiedBy = "",
                            Name = "Drums",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 50,
                            BusinessId = new Guid("05a5b11d-06cc-473e-841f-766af9e7eb28"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7612),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7613),
                            ModifiedBy = "",
                            Name = "# Woodwinds",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 51,
                            BusinessId = new Guid("7f3c3a8b-6ffe-4616-b91c-b17e732d8934"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7615),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7615),
                            ModifiedBy = "",
                            Name = "Clarinet",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 52,
                            BusinessId = new Guid("9af66a4e-3f0a-46b0-9412-7a961391f52f"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7617),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7617),
                            ModifiedBy = "",
                            Name = "# Audio",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 53,
                            BusinessId = new Guid("c2e1e0bb-169c-40ba-8117-3a73b62a0dc4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7623),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7624),
                            ModifiedBy = "",
                            Name = "Mixing",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 54,
                            BusinessId = new Guid("a8248b19-b88c-45df-979e-f8677479b6c9"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7626),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7626),
                            ModifiedBy = "",
                            Name = "Mastering",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("8a8cfc70-95c1-443d-b86e-8c0d5dbd1601"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7628),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7628),
                            ModifiedBy = "",
                            Name = "Recording",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 56,
                            BusinessId = new Guid("d829399b-a731-4623-b2dd-d8bbe36bce05"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7630),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7631),
                            ModifiedBy = "",
                            Name = "Production",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 57,
                            BusinessId = new Guid("771f6090-6501-4e1b-89de-3340a172b4d0"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7635),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7635),
                            ModifiedBy = "",
                            Name = "Sound Design",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 58,
                            BusinessId = new Guid("e1c882bc-70fd-4d1a-b2c8-dfae21c7a7c0"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7637),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7637),
                            ModifiedBy = "",
                            Name = "Memes",
                            TagCategoryId = 16
                        },
                        new
                        {
                            EntityId = 59,
                            BusinessId = new Guid("f647235b-73af-473a-ab67-4d066a90409d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7639),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7640),
                            ModifiedBy = "",
                            Name = "# Guitar",
                            TagCategoryId = 17
                        });
                });

            modelBuilder.Entity("MB.Domain.TagCategoryAggregate.TagCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TagCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("4e746816-97ee-49f5-9a52-819b998e6bfe"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7762),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7763),
                            ModifiedBy = "",
                            Name = "#"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("1c0e61cd-7a58-446a-b5a5-86a3f1dd39bc"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7771),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7771),
                            ModifiedBy = "",
                            Name = "# File"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("8ba1e26e-da85-49a3-96f3-7534561ddc12"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7774),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7774),
                            ModifiedBy = "",
                            Name = "# File ext. | Doc."
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("9e325fa5-4e0f-4eca-af3b-ebef9001c54d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7776),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7777),
                            ModifiedBy = "",
                            Name = "# File ext. | Image"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("35458084-ec33-4b05-ae1c-9fc04ca9524e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7779),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7779),
                            ModifiedBy = "",
                            Name = "# File ext. | Video"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("b44040b1-0ec3-45cb-bf93-b504cbc587db"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7785),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7785),
                            ModifiedBy = "",
                            Name = "# File Format"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("fa24bfdd-e589-4b39-b5e3-46fcb2fb20f9"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7787),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7787),
                            ModifiedBy = "",
                            Name = "# File Render"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("b4c9cdef-88f3-42ec-9009-c6db6596fd8d"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7789),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7790),
                            ModifiedBy = "",
                            Name = "Music Genre"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("96bc8164-62b0-4310-89e4-5b29b21ef61c"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7792),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7792),
                            ModifiedBy = "",
                            Name = "Music Theory"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("694174c2-3266-4894-bd6e-a47a3cb930ae"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7797),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7798),
                            ModifiedBy = "",
                            Name = "Keys"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("ae176893-ec6b-40fd-9c0d-8d7b62aa54a4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7800),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7800),
                            ModifiedBy = "",
                            Name = "Brass"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("16cc55eb-50a7-49a2-a895-ec91870b1bef"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7803),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7803),
                            ModifiedBy = "",
                            Name = "Strings"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("03469936-70ef-4e4b-bc9c-517f753efd2f"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7805),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7805),
                            ModifiedBy = "",
                            Name = "Percussions"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("1cc3e413-03d9-4b7d-b42e-35d56d959f9e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7810),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7810),
                            ModifiedBy = "",
                            Name = "Woodwinds"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("0aaea2ab-0768-4426-ba09-187ba9b6c4e3"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7812),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7812),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("6996a956-a4d4-4939-83a0-a590e146794e"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7815),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7815),
                            ModifiedBy = "",
                            Name = "Fun"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aa677a45-4c0c-44de-a901-16a17493b5b7"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7817),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7817),
                            ModifiedBy = "",
                            Name = "Guitar"
                        });
                });

            modelBuilder.Entity("MB.Domain.TaskAggregate.Task", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("04/30/2025 14:10:52");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("72c6094c-99e7-4ff5-a1d5-3fbf8f43d918"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8037),
                            CreatedBy = "",
                            DateEnd = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8034),
                            DateStart = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8032),
                            Description = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8037),
                            ModifiedBy = "",
                            Name = "Check Mails",
                            TaskCategoryId = 5
                        });
                });

            modelBuilder.Entity("MB.Domain.TaskCategoryAggregate.TaskCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("6ac7e1f7-c5b6-4c88-b320-bf0bac4b7c5f"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7898),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7899),
                            ModifiedBy = "",
                            Name = "PAD Mobile"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("69741af4-f72d-4f43-a0a7-493ea6ab0435"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7904),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7904),
                            ModifiedBy = "",
                            Name = "PAD Cave"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("d678fa1f-6d3c-46ea-a7cc-762071ef9c58"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7950),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7950),
                            ModifiedBy = "",
                            Name = "PAD Kids"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("22b5a7ce-df7d-4d62-874a-4d9231de2cc1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7953),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7953),
                            ModifiedBy = "",
                            Name = "Shopping"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("e9a20f4b-c623-4438-8a2d-1bddec6bfd0f"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7958),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(7959),
                            ModifiedBy = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.EmailVerificationToken", b =>
                {
                    b.Property<Guid>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TokenId");

                    b.HasIndex("ExpiresAt");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("EmailVerificationTokens");
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.User", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Birthdate = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("09a4d57a-ec9e-4e0a-926a-df492cac8520"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8545),
                            CreatedBy = "",
                            Email = "tonyvan@live.fr",
                            Experience = 0,
                            FirstName = "Tony",
                            IsEmailVerified = false,
                            LastName = "Van Langenhove",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8547),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 37, 110, 206, 90, 139, 85, 200, 57, 180, 250, 148, 94, 25, 164, 7, 113, 100, 222, 64, 83, 207, 162, 0, 57, 213, 26, 122, 55, 6, 55, 3, 3, 56, 173, 128, 132, 90, 4, 2, 39, 151, 203, 74, 45, 237, 124, 17, 102, 209, 36, 231, 99, 254, 174, 180, 86, 253, 12, 252, 112, 95, 135, 137, 229 },
                            PasswordSalt = new byte[] { 189, 34, 18, 113, 248, 103, 113, 157, 225, 82, 10, 115, 13, 134, 96, 27, 89, 123, 198, 241, 227, 64, 233, 1, 171, 233, 46, 255, 134, 156, 182, 30, 248, 235, 146, 189, 93, 214, 84, 87, 122, 216, 4, 232, 227, 75, 132, 105, 210, 20, 181, 110, 35, 146, 16, 226, 55, 3, 139, 91, 212, 241, 198, 135, 35, 246, 185, 3, 71, 12, 66, 175, 206, 27, 245, 184, 122, 72, 153, 238, 10, 130, 120, 25, 240, 202, 220, 90, 118, 113, 48, 195, 183, 88, 62, 195, 189, 26, 45, 105, 41, 128, 203, 143, 125, 155, 93, 22, 4, 189, 110, 187, 37, 218, 132, 179, 247, 46, 86, 232, 165, 249, 236, 129, 150, 241, 162, 16 },
                            Role = 2,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 2,
                            Birthdate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("0dc9665f-58a5-432a-a663-dda1e991cef2"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8651),
                            CreatedBy = "",
                            Email = "floppy@gmail.com",
                            Experience = 0,
                            FirstName = "Floppy",
                            IsEmailVerified = false,
                            LastName = "Disk",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8651),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 49, 153, 240, 253, 109, 70, 9, 215, 50, 221, 46, 244, 237, 110, 187, 173, 145, 252, 81, 62, 222, 204, 153, 50, 103, 136, 127, 245, 2, 0, 241, 29, 104, 115, 109, 172, 232, 85, 145, 127, 11, 16, 101, 233, 61, 232, 40, 250, 149, 148, 34, 221, 117, 55, 49, 245, 246, 178, 189, 14, 28, 17, 123, 170 },
                            PasswordSalt = new byte[] { 1, 75, 177, 2, 44, 210, 236, 55, 162, 98, 209, 193, 210, 185, 69, 175, 138, 229, 159, 146, 60, 213, 133, 65, 65, 236, 238, 203, 86, 207, 64, 77, 22, 1, 198, 56, 191, 247, 225, 108, 108, 245, 98, 38, 55, 169, 171, 85, 90, 214, 87, 226, 233, 21, 51, 74, 23, 56, 27, 32, 52, 248, 199, 0, 238, 31, 89, 46, 194, 122, 60, 165, 189, 234, 61, 6, 231, 21, 48, 182, 220, 237, 172, 198, 60, 223, 242, 104, 18, 171, 124, 44, 57, 211, 182, 7, 83, 242, 50, 191, 37, 29, 253, 179, 75, 107, 38, 215, 171, 24, 50, 54, 22, 70, 113, 205, 137, 182, 101, 16, 103, 10, 1, 136, 11, 129, 59, 129 },
                            Role = 1,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 3,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("c955d393-acb9-41b1-a642-9b78ce0e97ff"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8738),
                            CreatedBy = "",
                            Email = "vincent.megag@gmail.com",
                            Experience = 0,
                            FirstName = "Vincent",
                            IsEmailVerified = false,
                            LastName = "Megag",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8738),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 75, 15, 75, 114, 10, 156, 93, 226, 131, 140, 222, 144, 35, 22, 63, 6, 192, 158, 101, 185, 51, 4, 163, 94, 63, 128, 123, 200, 204, 170, 189, 246, 160, 29, 5, 111, 36, 138, 85, 237, 106, 223, 13, 149, 64, 29, 93, 251, 202, 25, 66, 231, 211, 156, 62, 101, 243, 31, 37, 55, 73, 232, 137, 112 },
                            PasswordSalt = new byte[] { 201, 87, 241, 108, 194, 65, 210, 58, 172, 94, 186, 189, 183, 213, 31, 154, 158, 113, 18, 249, 220, 197, 50, 112, 3, 159, 118, 18, 162, 136, 224, 48, 110, 241, 203, 116, 120, 61, 114, 220, 227, 55, 140, 136, 168, 168, 80, 62, 155, 33, 18, 117, 212, 72, 167, 188, 41, 72, 110, 187, 178, 252, 255, 115, 246, 173, 194, 222, 49, 170, 22, 59, 105, 217, 182, 122, 168, 93, 211, 42, 54, 242, 243, 134, 10, 72, 81, 27, 122, 196, 187, 204, 191, 40, 69, 142, 253, 174, 198, 10, 177, 76, 247, 214, 188, 190, 87, 80, 8, 192, 33, 86, 167, 77, 166, 86, 152, 77, 166, 123, 230, 156, 172, 77, 9, 175, 208, 224 },
                            Role = 2,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 4,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("c16594ac-2bb5-4d5d-a477-ce342cddd7b5"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8821),
                            CreatedBy = "",
                            Email = "test@test.com",
                            Experience = 0,
                            FirstName = "Admin",
                            IsEmailVerified = false,
                            LastName = "...",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(8821),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 26, 205, 151, 164, 64, 60, 163, 48, 27, 212, 232, 4, 192, 110, 134, 189, 131, 29, 247, 94, 236, 90, 248, 206, 199, 126, 102, 62, 141, 107, 159, 106, 173, 199, 207, 25, 103, 118, 254, 184, 114, 147, 206, 81, 162, 82, 17, 64, 23, 139, 210, 243, 200, 242, 238, 105, 26, 34, 169, 94, 228, 179, 187, 227 },
                            PasswordSalt = new byte[] { 179, 64, 32, 168, 240, 181, 158, 114, 154, 215, 169, 209, 161, 241, 246, 201, 164, 156, 205, 33, 200, 126, 51, 141, 186, 41, 217, 80, 188, 109, 30, 159, 27, 187, 184, 138, 205, 86, 180, 219, 227, 208, 66, 223, 216, 215, 169, 5, 10, 223, 170, 117, 47, 151, 6, 141, 231, 155, 98, 200, 57, 108, 141, 54, 28, 26, 189, 123, 74, 207, 210, 142, 197, 151, 45, 45, 53, 20, 35, 117, 113, 179, 202, 48, 4, 39, 140, 192, 40, 40, 58, 58, 67, 32, 62, 222, 92, 28, 132, 153, 235, 216, 5, 13, 98, 88, 249, 36, 202, 113, 59, 71, 134, 153, 116, 151, 211, 87, 135, 66, 167, 253, 187, 29, 238, 110, 213, 19 },
                            Role = 2,
                            UserName = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.AudioSoundCloud", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<string>("EmbedUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmbedUrl");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ThumbnailUrl");

                    b.Property<string>("Url")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Document", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Document_Size");
                        });

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Image", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6432),
                            CreatedBy = "",
                            Description = "In Chords Chart",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6433),
                            ModifiedBy = "",
                            Name = " Major Key Notes",
                            Score = 0,
                            Type = 1,
                            Height = 510,
                            Size = 61206,
                            Width = 359
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6455),
                            CreatedBy = "",
                            Description = "7 Notes, 7 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6456),
                            ModifiedBy = "",
                            Name = "Major Diatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 940,
                            Size = 136462,
                            Width = 700
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6461),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6461),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1361,
                            Size = 562138,
                            Width = 868
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6464),
                            CreatedBy = "",
                            Description = "5 Notes, 5 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6464),
                            ModifiedBy = "",
                            Name = "Pentatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 524,
                            Size = 74358,
                            Width = 250
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6468),
                            CreatedBy = "",
                            Description = "Color Measure",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6468),
                            ModifiedBy = "",
                            Name = "Intervals",
                            Score = 0,
                            Type = 1,
                            Height = 844,
                            Size = 56324,
                            Width = 556
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6516),
                            CreatedBy = "",
                            Description = "Absolute Basics",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6517),
                            ModifiedBy = "",
                            Name = "Time Measure",
                            Score = 0,
                            Type = 1,
                            Height = 255,
                            Size = 8992,
                            Width = 400
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6521),
                            CreatedBy = "",
                            Description = "Natural Order",
                            Extension = "webp",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6522),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            Score = 0,
                            Type = 1,
                            Height = 226,
                            Size = 30964,
                            Width = 600
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6524),
                            CreatedBy = "",
                            Description = "Communication is important",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6525),
                            ModifiedBy = "",
                            Name = "Guitar Vocabulary",
                            Score = 0,
                            Type = 1,
                            Height = 705,
                            Size = 99994,
                            Width = 512
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6528),
                            CreatedBy = "",
                            Description = "Diatonic Chords in C Major",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6529),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1317,
                            Size = 204898,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6536),
                            CreatedBy = "",
                            Description = "Mmm... You can tell, right ?",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6536),
                            ModifiedBy = "",
                            Name = "Piano Scales",
                            Score = 0,
                            Type = 1,
                            Height = 900,
                            Size = 91482,
                            Width = 695
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6540),
                            CreatedBy = "",
                            Description = "Overview",
                            Extension = "gif",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6540),
                            ModifiedBy = "",
                            Name = "Tessitures",
                            Score = 0,
                            Type = 1,
                            Height = 709,
                            Size = 62391,
                            Width = 1026
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6544),
                            CreatedBy = "",
                            Description = "Circle of Life",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6544),
                            ModifiedBy = "",
                            Name = "Chord Wheel",
                            Score = 0,
                            Type = 1,
                            Height = 950,
                            Size = 663017,
                            Width = 950
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6547),
                            CreatedBy = "",
                            Description = " ... ",
                            Extension = "jpeg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6548),
                            ModifiedBy = "",
                            Name = "The Mix is Almost Perfect",
                            Score = 0,
                            Type = 1,
                            Height = 480,
                            Size = 45254,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6551),
                            CreatedBy = "",
                            Description = "Basic Chords / Different Keys",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6552),
                            ModifiedBy = "",
                            Name = "Guitar Progressions",
                            Score = 0,
                            Type = 1,
                            Height = 690,
                            Size = 167969,
                            Width = 552
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc3"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6555),
                            CreatedBy = "",
                            Description = "Les 3, c'est NON !",
                            Extension = "jpeg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6555),
                            ModifiedBy = "",
                            Name = "Vous le voulez comment votre projet ?",
                            Score = 0,
                            Type = 1,
                            Height = 960,
                            Size = 205144,
                            Width = 720
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6558),
                            CreatedBy = "",
                            Description = "1, 2, 3, 4, 5",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6558),
                            ModifiedBy = "",
                            Name = "Fingers Numerotation",
                            Score = 0,
                            Type = 1,
                            Height = 233,
                            Size = 24030,
                            Width = 350
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6560),
                            CreatedBy = "",
                            Description = "My actual Keyboard",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6561),
                            ModifiedBy = "",
                            Name = "Roland FP-30",
                            Score = 0,
                            Type = 1,
                            Height = 368,
                            Size = 87596,
                            Width = 1680
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6568),
                            CreatedBy = "",
                            Description = "How to build a chord",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6569),
                            ModifiedBy = "",
                            Name = "Chord Formula's",
                            Score = 0,
                            Type = 1,
                            Height = 1109,
                            Size = 221030,
                            Width = 1080
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6572),
                            CreatedBy = "",
                            Description = "Valeurs de Temps",
                            Extension = "webp",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6572),
                            ModifiedBy = "",
                            Name = "Time Values",
                            Score = 0,
                            Type = 1,
                            Height = 530,
                            Size = 21922,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd4"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6574),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6575),
                            ModifiedBy = "",
                            Name = "Guitar Chords ( B )",
                            Score = 0,
                            Type = 1,
                            Height = 909,
                            Size = 57447,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6577),
                            CreatedBy = "",
                            Description = "Primary Modes",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6577),
                            ModifiedBy = "",
                            Name = "Modes starting in C",
                            Score = 0,
                            Type = 1,
                            Height = 1552,
                            Size = 111187,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6580),
                            CreatedBy = "",
                            Description = "Good luck finding the good one ...",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6580),
                            ModifiedBy = "",
                            Name = "Guitar Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1913,
                            Size = 633229,
                            Width = 1200
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc5"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6583),
                            CreatedBy = "",
                            Description = "Une approche parmis tant d'autres",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6583),
                            ModifiedBy = "",
                            Name = "Intervalles",
                            Score = 0,
                            Type = 1,
                            Height = 971,
                            Size = 69313,
                            Width = 692
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Video", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Height")
                                .HasColumnName("Video_Height");

                            t.Property("Size")
                                .HasColumnName("Video_Size");

                            t.Property("Width")
                                .HasColumnName("Video_Width");
                        });

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6692),
                            CreatedBy = "",
                            Description = " Bendy & The Ink Machine ",
                            Extension = "mp4",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6693),
                            ModifiedBy = "",
                            Name = "BATIM - Build our Machine",
                            Score = 0,
                            Type = 2,
                            Duration = 64,
                            Height = 360,
                            Size = 5091239,
                            Width = 640
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.VideoYouTube", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<string>("Url")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator().HasValue(4);

                    b.HasData(
                        new
                        {
                            EntityId = 85,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                            Created = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6771),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "",
                            Modified = new DateTime(2025, 4, 30, 12, 10, 52, 893, DateTimeKind.Utc).AddTicks(6772),
                            ModifiedBy = "",
                            Name = "Mario Bros 3 Cover",
                            Score = 0,
                            Type = 4,
                            Url = "WWUxrTdjqg0"
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationArtistStyle", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.StyleAggregate.Style", "Style")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkArtist", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("LinkArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkArtists")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkModel", b =>
                {
                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkModels")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("LinkModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationBookFranchise", b =>
                {
                    b.HasOne("MB.Domain.BookAggregate.Book", "Book")
                        .WithMany("BookFranchise")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("BookFranchise")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationFranchiseMedia", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MediumAggregate.Media", "Media")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.RelationLinkCategory", b =>
                {
                    b.HasOne("MB.Domain.LinkCategoryAggregate.LinkCategory", "LinkCategory")
                        .WithMany("RLinkCategories")
                        .HasForeignKey("LinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("LinkCategory");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationBookModel", b =>
                {
                    b.HasOne("MB.Domain.BookAggregate.Book", "Book")
                        .WithMany("BookModel")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("BookModel")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationFranchiseModel", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodArtist", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("MoodArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodArtists")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodFranchise", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodModel", b =>
                {
                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("MoodModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodModels")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodTag", b =>
                {
                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodTags")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.TagAggregate.Tag", "Tag")
                        .WithMany("MoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.HasOne("MB.Domain.TagCategoryAggregate.TagCategory", "TagCategory")
                        .WithMany("Tags")
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("MB.Domain.TaskAggregate.Task", b =>
                {
                    b.HasOne("MB.Domain.TaskCategoryAggregate.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.EmailVerificationToken", b =>
                {
                    b.HasOne("MB.Domain.UserAggregate.User", "User")
                        .WithMany("EmailVerificationTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.Artist", b =>
                {
                    b.Navigation("ArtistStyles");

                    b.Navigation("LinkArtists");

                    b.Navigation("MoodArtists");
                });

            modelBuilder.Entity("MB.Domain.BookAggregate.Book", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("BookModel");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.Franchise", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("FranchiseMedias");

                    b.Navigation("FranchiseModels");

                    b.Navigation("MoodFranchises");
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.Link", b =>
                {
                    b.Navigation("LinkArtists");

                    b.Navigation("LinkCategories");

                    b.Navigation("LinkModels");
                });

            modelBuilder.Entity("MB.Domain.LinkCategoryAggregate.LinkCategory", b =>
                {
                    b.Navigation("RLinkCategories");
                });

            modelBuilder.Entity("MB.Domain.MediumAggregate.Media", b =>
                {
                    b.Navigation("FranchiseMedias");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.Model", b =>
                {
                    b.Navigation("BookModel");

                    b.Navigation("FranchiseModels");

                    b.Navigation("LinkModels");

                    b.Navigation("MoodModels");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Mood", b =>
                {
                    b.Navigation("MoodArtists");

                    b.Navigation("MoodFranchises");

                    b.Navigation("MoodModels");

                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.StyleAggregate.Style", b =>
                {
                    b.Navigation("ArtistStyles");
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.TagCategoryAggregate.TagCategory", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MB.Domain.TaskCategoryAggregate.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.User", b =>
                {
                    b.Navigation("EmailVerificationTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
