// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240611123746_Eight")]
    partial class Eight
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("7ccdd2fa-7d01-408c-a8b9-535ccf3f5817"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6896),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6898),
                            ModifiedBy = "",
                            Name = "# Unknown Artist",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("47c9f5c5-eb25-4a33-aa2f-39429cacc4e7"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6924),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6925),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("fa8a10fb-5e1b-4ed7-afff-68d07cb2a6ef"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6927),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6928),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Illustrator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("e08ca57d-f336-43d8-b516-f35713df856e"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6930),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6930),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("3497a2f1-bf76-4ed3-92c0-c46baac80e59"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6997),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(6997),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("745374b5-66f8-4958-bc9b-99ced1fbe4be"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7005),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7006),
                            ModifiedBy = "",
                            Name = "/ Unknown A.I. User",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("8a47e260-e57a-4221-a0e5-b7deeb90c164"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7008),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7008),
                            ModifiedBy = "",
                            Name = "/ Unknown Musician",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("05360fe3-f823-4a2e-b3b3-d30170b18690"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7011),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7011),
                            ModifiedBy = "",
                            Name = "/ Unknown Photographer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("6d6ef8d5-9d77-4b49-8f8a-c4416ec44bcf"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7013),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7013),
                            ModifiedBy = "",
                            Name = "/ Unknown Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("80c56f5f-f66a-4de0-9b0d-e51d671925ab"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7018),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7018),
                            ModifiedBy = "",
                            Name = "/ Unknown Videast",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("4f2501ff-9c3b-4d3a-ab11-18fa0241d38e"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7021),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7021),
                            ModifiedBy = "",
                            Name = "/ Unknown Writer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("15f5b8f1-12fd-481e-bdce-20eeea0db205"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7023),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7023),
                            ModifiedBy = "",
                            Name = "Flying PAD",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("4fd394e8-7eb4-4073-8143-80c722be9cbc"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7025),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7025),
                            ModifiedBy = "",
                            Name = "Soën9048",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("ce63d747-09d6-49e9-a629-a534e4eb2887"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7030),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7030),
                            ModifiedBy = "",
                            Name = "CohesivePanda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("82c17f29-e010-44cc-b5f3-7edb14a6424b"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7032),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7033),
                            ModifiedBy = "",
                            Name = "Nobuo Uematsu",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("8c1f8546-824f-44bf-a8cc-492b1e2b91bc"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7034),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7035),
                            ModifiedBy = "",
                            Name = "Eichiro Oda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("b8e04a0b-39ea-489a-ae99-a93e4e7205c1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7037),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7037),
                            ModifiedBy = "",
                            Name = "Masashi Kishimoto",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("be6b99b7-2bed-4d87-92c1-a587b0e01b40"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7042),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7042),
                            ModifiedBy = "",
                            Name = "Dali",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("ce684293-bdc1-434d-9446-ed4d605c3a4f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7045),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7045),
                            ModifiedBy = "",
                            Name = "Yoko Shimomura",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("024e1852-becd-4108-a997-47b38b8cb7fe"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7047),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7047),
                            ModifiedBy = "",
                            Name = "Michael Jackson",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("e7aa0691-0144-404b-af23-c515682ef43a"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7049),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7050),
                            ModifiedBy = "",
                            Name = "CG5",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("0444e7a4-0370-4196-a22f-4752a1c8a9f3"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7054),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7054),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("e56e271b-2fa9-4e84-bc0a-5db1187f539f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7056),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7057),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Pseudonym = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Board", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MB.Domain.Entities.Book", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("691c0b84-8319-405f-b21c-38f0d55a3863"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7471),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7472),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("2816ce50-fb09-4e11-9251-c465c1c40406"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7475),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7476),
                            ModifiedBy = "",
                            Name = "Street Fighter"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cf5b28bd-1b2c-4912-a2b5-b4c0e606fc77"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7478),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7478),
                            ModifiedBy = "",
                            Name = "# Unrelated Franchise"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Link", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("1d7c0942-5557-4983-a5da-68daaf394e74"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7756),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7757),
                            ModifiedBy = "",
                            Name = "KVR",
                            Url = "https://www.kvraudio.com/"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("f98503c0-969a-4c8a-9f98-87299d4cab7d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7762),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7762),
                            ModifiedBy = "",
                            Name = "MuseScore",
                            Url = "https://musescore.com/"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("a4d1ebc8-9317-4441-a190-e980dadf48e3"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7764),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7765),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.native-instruments.com"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("e09caf96-0e48-4ba1-a2e7-7660b1a39f9d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7767),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7767),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.steinberg.net/"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("1c466b8a-1939-42aa-97be-48d78b4d5609"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7772),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7773),
                            ModifiedBy = "",
                            Name = "Clés pour l'harmonie",
                            Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("96e72593-3e57-4be9-bceb-84e8169fe1bd"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7776),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7776),
                            ModifiedBy = "",
                            Name = "Google | Metronome",
                            Url = "https://www.google.com/search?q=metronome"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("2d080e5d-6e4d-484d-83e4-39c845a8734f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7778),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7779),
                            ModifiedBy = "",
                            Name = "Google | Stopwatch",
                            Url = "https://www.google.com/search?q=stopwatch"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("bd51c397-1b01-4277-8c0e-8ceef439c31b"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7781),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7781),
                            ModifiedBy = "",
                            Name = "Google | Timer",
                            Url = "https://www.google.com/search?q=timer"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("73f8fbe9-0105-470e-8f06-ebecb00bc785"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7786),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7786),
                            ModifiedBy = "",
                            Name = "Mangold Project",
                            Url = "https://www.youtube.com/@MangoldProject"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("97afbc6f-4f31-48a3-aa1f-e350c11b5b04"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7789),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7789),
                            ModifiedBy = "",
                            Name = "# YouTube",
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("99406cfb-276a-4608-a809-27a8d4f887d8"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7791),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7791),
                            ModifiedBy = "",
                            Name = "Piano Jazz Concept",
                            Url = "https://www.youtube.com/@Pianojazzconcept"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("6d84a6b4-6257-443f-b919-bf77bcc787dc"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7794),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7794),
                            ModifiedBy = "",
                            Name = "Rick Beato",
                            Url = "https://www.youtube.com/@RickBeato"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("9962e05d-0d81-42b4-adb3-54a8199b9abd"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7798),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7799),
                            ModifiedBy = "",
                            Name = "Pianote",
                            Url = "https://www.youtube.com/@PianoteOfficial"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("70c7f2e0-21fc-4754-9ddd-438c8e46b919"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7801),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7801),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Url = "https://www.youtube.com/@TryHardNinja"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("5a6614d2-4c36-4df0-a5ae-7367c5e94211"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7804),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7804),
                            ModifiedBy = "",
                            Name = "Kyle Allen Music",
                            Url = "https://www.youtube.com/@KyleAllenMusic"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("ee5f993d-ce9b-4fdb-a17f-77410cf75d97"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7807),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7807),
                            ModifiedBy = "",
                            Name = "Ableton",
                            Url = "https://www.youtube.com/@Ableton"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("d245e5d0-94fe-432a-955c-2c14d5de1782"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7812),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7812),
                            ModifiedBy = "",
                            Name = "La Machine à Mixer",
                            Url = "https://www.youtube.com/@lamachineamixer"
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("5ce956b3-6014-42dc-bc11-2d9918c23487"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7815),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7816),
                            ModifiedBy = "",
                            Name = "Audiofanzine",
                            Url = "https://www.youtube.com/@audiofanzine"
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("5b2fbc81-07d0-40b3-ac67-2ca6ce648974"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7818),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7818),
                            ModifiedBy = "",
                            Name = "Cubase",
                            Url = "https://www.youtube.com/@Cubase"
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("452d62eb-2c45-4403-887f-529661b72943"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7820),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7820),
                            ModifiedBy = "",
                            Name = "Ten Second Songs",
                            Url = "https://www.youtube.com/@TenSecondSongs"
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("554bbb31-fb5d-4dc1-93f6-d262f36a9093"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7825),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7825),
                            ModifiedBy = "",
                            Name = "The Piano Guys",
                            Url = "https://www.youtube.com/@thepianoguys"
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("0e9dc69d-b790-49f1-8646-67d20851004c"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7827),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7828),
                            ModifiedBy = "",
                            Name = "CG5",
                            Url = "https://www.youtube.com/@CG5"
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("aaab73bf-aa5b-40ff-a5ed-ae69447311b8"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7830),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7830),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.youtube.com/@NativeInstruments"
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("448fda35-a1a9-452e-9df7-95ececb62e6d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7832),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7833),
                            ModifiedBy = "",
                            Name = "Ken Tamplin Vocal Academy",
                            Url = "https://www.youtube.com/@kentamplin"
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("18436d3c-54c2-4a45-91c4-9c8b699c6c21"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7837),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7837),
                            ModifiedBy = "",
                            Name = "Pentatonix",
                            Url = "https://www.youtube.com/@PTXofficial"
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("de425b9a-d142-475b-a327-d9f99cb1ba93"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7840),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7840),
                            ModifiedBy = "",
                            Name = "Recording Revolution",
                            Url = "https://www.youtube.com/@recordingrevolution"
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("5313b918-0abd-44bc-8956-d89425321c25"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7842),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7842),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Url = "https://www.youtube.com/@jacobcollier"
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("e78acc9b-c853-464d-923b-8d12fa319ce1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7845),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7845),
                            ModifiedBy = "",
                            Name = "Orchestration Online",
                            Url = "https://www.youtube.com/@OrchestrationOnline"
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("75d6d2ab-c1a9-429f-8571-8b28474a8906"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7849),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7849),
                            ModifiedBy = "",
                            Name = "Nuendo",
                            Url = "https://www.youtube.com/@Nuendo"
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("ce27c661-c737-474b-9bae-987cdb5029c6"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7852),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7852),
                            ModifiedBy = "",
                            Name = "reFX",
                            Url = "https://www.youtube.com/@reFXaudio"
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("116cb20d-08f2-4ff1-bed5-3ab193e0d1de"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7854),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7854),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.youtube.com/@steinberg"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("LinkCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("70eb41bf-a3f2-4586-b357-385408f72d95"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7923),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7923),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("8fd5f220-c616-4042-a0bd-5c336cda9025"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7930),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7931),
                            ModifiedBy = "",
                            Name = "Audio | Mix & Master"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("f59cc250-15f0-42ec-8892-1499603f0248"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7933),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7933),
                            ModifiedBy = "",
                            Name = "Audio | Sound Design"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("ac06bbf3-d23a-42bf-9664-df7856068370"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7936),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7936),
                            ModifiedBy = "",
                            Name = "Books"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("d73af9d5-45af-4006-b13b-8cd8194d7af3"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7939),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7939),
                            ModifiedBy = "",
                            Name = "Books | Harmony"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("b90e82d0-d321-4c13-b34a-c5347d036149"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7944),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7944),
                            ModifiedBy = "",
                            Name = "Software"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("7953e451-4411-48a8-935f-a7355dc30f8f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7947),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7947),
                            ModifiedBy = "",
                            Name = "Software | D.A.W."
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("6ef51581-9957-45ae-9500-10627dcc4c90"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7949),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7949),
                            ModifiedBy = "",
                            Name = "Software | V.S.T."
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("5e822b30-ed3b-4717-b110-e0e1f987300c"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7951),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7951),
                            ModifiedBy = "",
                            Name = "Software | Music Notation"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("674bcded-28d5-493a-82ac-074810683155"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7990),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7990),
                            ModifiedBy = "",
                            Name = "Tools"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("8959e4c8-80bd-4bb0-a10f-c8dd65f48baf"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7993),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7993),
                            ModifiedBy = "",
                            Name = "Tools | Global"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("95c61da0-c691-429f-8aba-7f0cd2b029d7"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7995),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7995),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("42fa1627-ab06-4484-8afe-a7162fed92a7"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7997),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7997),
                            ModifiedBy = "",
                            Name = "YouTube | Artists"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("e347d844-fec4-4f10-a36c-7bf521e7e6aa"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8002),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8002),
                            ModifiedBy = "",
                            Name = "YouTube | Audio"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("36ccee98-9ba2-49b3-86a6-4f468d041296"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8005),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8005),
                            ModifiedBy = "",
                            Name = "YouTube | Piano & Keys"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Media", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("4ef64c20-88f6-4380-8e57-9eb9a4c39c49"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7528),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7529),
                            ModifiedBy = "",
                            Name = "# Unrelated"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("c44d4c9b-aae2-46eb-969c-cf6a70e99110"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7536),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7536),
                            ModifiedBy = "",
                            Name = "# Unknown"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("f4919d6c-5f59-499c-b902-8eb720d9e651"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7539),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7539),
                            ModifiedBy = "",
                            Name = "# Super Franchise"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("7347c632-7626-4639-8f42-4d0ae12ff876"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7541),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7541),
                            ModifiedBy = "",
                            Name = "TV"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("1a646501-8fe3-4d27-91da-8d52b169bddf"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7543),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7543),
                            ModifiedBy = "",
                            Name = "Radio"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("14c73d84-a4a5-4b32-b9ae-99319020c61e"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7549),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7549),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("4ca9ce92-c4a0-41c6-8974-124c8806069f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7604),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7605),
                            ModifiedBy = "",
                            Name = "Capcom"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("d37e276f-a8aa-41e6-8c68-a1f65ba80d2b"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7607),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7608),
                            ModifiedBy = "",
                            Name = "Square-Enix"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("40d26052-44f6-40ee-a2f2-b4d5067a2171"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7610),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7610),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Model", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("9299102c-8108-405c-8fe4-8ff65db071a8"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8151),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8152),
                            ModifiedBy = "",
                            Pseudonym = "# Unknown Model"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("d4426b59-eb60-4d5d-ba9c-06824c11a6ca"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8156),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8157),
                            ModifiedBy = "",
                            Pseudonym = "# Unrelated Model"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("0bdfb4af-ed39-4c10-a986-5840bccc3f18"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8162),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "Tony",
                            Gender = "M",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8162),
                            ModifiedBy = "",
                            Pseudonym = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Moods");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Mood");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("RArtistStyle");

                    b.HasData(
                        new
                        {
                            ArtistId = 12,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 12,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 13,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 14,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 15,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 16,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 17,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 18,
                            StyleId = 1
                        },
                        new
                        {
                            ArtistId = 19,
                            StyleId = 2
                        },
                        new
                        {
                            ArtistId = 20,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 21,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 22,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 23,
                            StyleId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookFranchise", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RBookFranchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookModel", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RBookModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RFranchiseMedia");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            MediaId = 9
                        },
                        new
                        {
                            FranchiseId = 2,
                            MediaId = 7
                        },
                        new
                        {
                            FranchiseId = 3,
                            MediaId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RFranchiseModel");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            ModelId = 3
                        },
                        new
                        {
                            FranchiseId = 3,
                            ModelId = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RLinkArtist");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("LinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "LinkCategoryId");

                    b.HasIndex("LinkCategoryId");

                    b.ToTable("RLinkCategory");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 9
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 4,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 4
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 5
                        },
                        new
                        {
                            LinkId = 6,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 7,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 8,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 10,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 12,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 13,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 15,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 16,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 17,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 18,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 19,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 20,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 21,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 22,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 23,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 24,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 25,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 2
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 14
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 28,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 29,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 30,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 31,
                            LinkCategoryId = 12
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RLinkModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RMoodArtist");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ArtistId = 12
                        },
                        new
                        {
                            MoodId = 13,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RMoodFranchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RMoodModel");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ModelId = 3
                        },
                        new
                        {
                            MoodId = 13,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ModelId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RMoodTag");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 8
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 19
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 58
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 43
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Style", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("afc90a0c-7a36-4f80-8a39-f1f18a93b735"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7310),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7311),
                            ModifiedBy = "",
                            Name = "2D"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("8472c4ce-2f2d-4144-99d6-bd6c16430983"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7315),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7316),
                            ModifiedBy = "",
                            Name = "2D Animation"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("3d53fc06-8c18-4932-aa11-41ab858b6e5e"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7321),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7321),
                            ModifiedBy = "",
                            Name = "3D"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("edbe7767-906f-426e-b5a8-3a70d9148ac5"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7324),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7324),
                            ModifiedBy = "",
                            Name = "3D Animation"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("247bae8b-356a-4850-802f-2cd56cf5de2a"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7326),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7327),
                            ModifiedBy = "",
                            Name = "Architecture"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("c72c0c76-2a64-4053-ad1f-c37ef4b4d114"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7330),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7330),
                            ModifiedBy = "",
                            Name = "Writer"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("0da60357-704b-40fc-88d3-8472f651a03b"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7335),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7335),
                            ModifiedBy = "",
                            Name = "Music"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("8deed359-6d10-45bb-908e-13cdc2a688e9"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7337),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7338),
                            ModifiedBy = "",
                            Name = "Photo"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("63de03fe-3944-43b0-a3f7-8117e00b8d18"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7340),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7340),
                            ModifiedBy = "",
                            Name = "Video"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("5556265a-b582-4119-9c05-52cfcb5e2b7e"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7343),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(7343),
                            ModifiedBy = "",
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TagCategoryId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("207815b3-62ea-49c9-84f4-ee6386f4b46d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9046),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9047),
                            ModifiedBy = "",
                            Name = "# All Files",
                            TagCategoryId = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("e3ccd4cb-e71d-403a-a90c-9be85cd8ee26"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9052),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9052),
                            ModifiedBy = "",
                            Name = "Audio",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("43bb6992-eb5a-4582-a3c1-80d2c9546923"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9058),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9058),
                            ModifiedBy = "",
                            Name = "Document",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("16aac054-c5ed-4d95-881e-e00cdf349231"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9061),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9061),
                            ModifiedBy = "",
                            Name = "Image",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("a7edd5ab-32a9-4cff-829e-d987e8249edf"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9063),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9063),
                            ModifiedBy = "",
                            Name = "Video",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("e3acd550-a287-461c-9dcd-725d3a872466"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9066),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9066),
                            ModifiedBy = "",
                            Name = "*.txt",
                            TagCategoryId = 3
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("063eb61d-e592-4f61-88e7-afd9ad631d31"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9070),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9071),
                            ModifiedBy = "",
                            Name = "*.bmp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("016a26bd-573c-4248-a899-10e96adae30c"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9073),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9073),
                            ModifiedBy = "",
                            Name = "*.gif",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("28565e0a-d5a8-4abc-958f-2309f264616f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9075),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9076),
                            ModifiedBy = "",
                            Name = "*.jpeg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("858ddee5-9f04-427a-964d-04f1927afc3d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9078),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9079),
                            ModifiedBy = "",
                            Name = "*.jpg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("8752f321-6f9d-466f-a58b-e579a4024dbf"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9083),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9083),
                            ModifiedBy = "",
                            Name = "*.png",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("2e54cd12-61b2-49d7-a04e-656aacf99bce"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9085),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9086),
                            ModifiedBy = "",
                            Name = "*.webp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("e4cabb31-8123-4879-9f3f-a0ae5acfe05f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9088),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9088),
                            ModifiedBy = "",
                            Name = "*.mp4",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("371acea0-d6ab-4340-a5cf-ea65e2c42ecc"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9090),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9090),
                            ModifiedBy = "",
                            Name = "*.webm",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("cf0ad7e8-e105-4685-950f-c0346aa2fd1a"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9095),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9095),
                            ModifiedBy = "",
                            Name = "Landscape",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("4f807341-568e-469d-98d5-ba3ad87bdac6"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9097),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9097),
                            ModifiedBy = "",
                            Name = "Landscape ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("4e8b7c47-e6c6-4051-8252-7101f51e2ae2"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9100),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9101),
                            ModifiedBy = "",
                            Name = "Portrait",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("a2469dca-12eb-4357-99cb-8c7526f9fe6a"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9103),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9104),
                            ModifiedBy = "",
                            Name = "Portrait ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("245e9e2d-baf0-4227-bafe-2ae5fc9b3f8f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9108),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9108),
                            ModifiedBy = "",
                            Name = "Square",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("94f6f38e-8a19-4d23-a73e-3a34b9f332fe"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9111),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9111),
                            ModifiedBy = "",
                            Name = "2D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("b055f823-789a-450d-b78f-f4394c82a0f1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9113),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9113),
                            ModifiedBy = "",
                            Name = "2D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("e917ba79-b2ea-4236-a1c0-ccc7f2519d7b"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9115),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9116),
                            ModifiedBy = "",
                            Name = "3D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("c9fe0d0f-3578-43d0-9375-ee8548c4d2d5"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9120),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9120),
                            ModifiedBy = "",
                            Name = "3D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("9cfeb419-488f-418b-9917-b33277083df5"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9122),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9123),
                            ModifiedBy = "",
                            Name = "Photo",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("77178ee2-b586-42f1-b867-c2c8d01fadd2"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9125),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9125),
                            ModifiedBy = "",
                            Name = "Photo | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("c890f1ac-e5c7-4ff0-8e0e-42a05fcb16db"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9127),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9127),
                            ModifiedBy = "",
                            Name = "E.D.M.",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("b9158afe-2728-48db-8e6e-61f0317ee9ce"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9132),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9132),
                            ModifiedBy = "",
                            Name = "Jazz",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("d7dd942d-f139-4ef8-8a74-3263f867e572"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9134),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9135),
                            ModifiedBy = "",
                            Name = "Metal",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("a4b62fb0-9164-4ba6-95c3-544179fd790c"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9137),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9137),
                            ModifiedBy = "",
                            Name = "Orchestral",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("bb4c9ceb-6d89-4ee8-9d0f-f51fbf8f9f57"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9139),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9139),
                            ModifiedBy = "",
                            Name = "Pop Music",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("3c5d9650-60da-46af-b90e-f806cde9204d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9144),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9144),
                            ModifiedBy = "",
                            Name = "Rap",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("dcc6e551-9417-4c63-856e-5748e28c592f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9146),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9146),
                            ModifiedBy = "",
                            Name = "Rock",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 33,
                            BusinessId = new Guid("f69f1a80-896f-49f8-be55-b0b17128c785"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9148),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9149),
                            ModifiedBy = "",
                            Name = "Traditional",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 34,
                            BusinessId = new Guid("a52c8e70-9ea6-4434-9d96-9fa4ca07e7ef"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9151),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9152),
                            ModifiedBy = "",
                            Name = "# Music Theory",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 35,
                            BusinessId = new Guid("6cbf52c6-58d5-44a7-92ac-ecea088788e8"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9156),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9156),
                            ModifiedBy = "",
                            Name = "# Harmony",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 36,
                            BusinessId = new Guid("02d985ae-009f-492f-8516-a2153af3f950"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9159),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9159),
                            ModifiedBy = "",
                            Name = "Chords",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 37,
                            BusinessId = new Guid("6d808b91-f3aa-4919-af90-a1c0c7d30df2"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9161),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9161),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 38,
                            BusinessId = new Guid("117da4fa-32ef-4762-a56a-727f0e14853e"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9164),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9164),
                            ModifiedBy = "",
                            Name = "Intervals",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 39,
                            BusinessId = new Guid("277303b9-e449-472d-9fd7-560702bfac56"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9169),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9169),
                            ModifiedBy = "",
                            Name = "Rythm",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 40,
                            BusinessId = new Guid("93b7febe-6671-45c8-ba98-4857fc2cbcf6"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9172),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9172),
                            ModifiedBy = "",
                            Name = "Scales",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 41,
                            BusinessId = new Guid("a3c1036d-35fc-4eaa-aefc-c80b4def2239"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9174),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9174),
                            ModifiedBy = "",
                            Name = "Modes",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 42,
                            BusinessId = new Guid("1f7e86b0-1920-48ad-8b2f-d53cac869f80"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9176),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9176),
                            ModifiedBy = "",
                            Name = "# Keys",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 43,
                            BusinessId = new Guid("277bae86-a481-469e-bc13-f23ad47934f9"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9181),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9181),
                            ModifiedBy = "",
                            Name = "Piano",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 44,
                            BusinessId = new Guid("368d6614-f2c5-4ada-8b83-2f0094065258"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9226),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9226),
                            ModifiedBy = "",
                            Name = "# Brass",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 45,
                            BusinessId = new Guid("dca4cc8d-c892-4041-a8f8-48c1dfd6156c"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9229),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9229),
                            ModifiedBy = "",
                            Name = "Trombone",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 46,
                            BusinessId = new Guid("b30f4c4e-a047-4ebf-8703-fb5c64e3f6b4"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9231),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9232),
                            ModifiedBy = "",
                            Name = "# Strings",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 47,
                            BusinessId = new Guid("0584c1e4-93d9-4d3b-a402-a6ee51d61f80"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9236),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9236),
                            ModifiedBy = "",
                            Name = "Violin",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 48,
                            BusinessId = new Guid("3af6f82e-9ab3-4748-a39c-da71109d12b1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9239),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9239),
                            ModifiedBy = "",
                            Name = "# Percussions",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 49,
                            BusinessId = new Guid("ec2de1b3-6a53-435c-9437-9b6f1b2e168d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9241),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9242),
                            ModifiedBy = "",
                            Name = "Drums",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 50,
                            BusinessId = new Guid("08a2829e-92d2-4c40-bcfc-f3581aaaa794"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9244),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9244),
                            ModifiedBy = "",
                            Name = "# Woodwinds",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 51,
                            BusinessId = new Guid("9ea52a12-a7ce-48ab-ba8a-4280884c6335"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9248),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9249),
                            ModifiedBy = "",
                            Name = "Clarinet",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 52,
                            BusinessId = new Guid("1996f0d3-b094-4a59-8934-5fc8152c8ae8"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9251),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9251),
                            ModifiedBy = "",
                            Name = "# Audio",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 53,
                            BusinessId = new Guid("53efcdc8-6070-4dc5-9262-c1cb29e80f79"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9253),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9253),
                            ModifiedBy = "",
                            Name = "Mixing",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 54,
                            BusinessId = new Guid("9773b096-714d-4e22-8c36-eb15f6abaede"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9255),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9256),
                            ModifiedBy = "",
                            Name = "Mastering",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("969b2dcf-a213-4233-9552-5e2e63c3b908"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9260),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9260),
                            ModifiedBy = "",
                            Name = "Recording",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 56,
                            BusinessId = new Guid("608cd796-289d-4792-9e29-bf1a993d89a1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9263),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9263),
                            ModifiedBy = "",
                            Name = "Production",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 57,
                            BusinessId = new Guid("d1132d62-0996-48d2-b0a5-c30265efe1a5"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9265),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9265),
                            ModifiedBy = "",
                            Name = "Sound Design",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 58,
                            BusinessId = new Guid("11c13252-f45a-492f-9b4c-2c634a32815f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9267),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9268),
                            ModifiedBy = "",
                            Name = "Memes",
                            TagCategoryId = 16
                        },
                        new
                        {
                            EntityId = 59,
                            BusinessId = new Guid("053d5412-4fe6-4f57-a232-1db1df540e6c"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9272),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9272),
                            ModifiedBy = "",
                            Name = "# Guitar",
                            TagCategoryId = 17
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TagCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("2850bb3a-6297-4d31-8478-0d40866c4a57"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9374),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9374),
                            ModifiedBy = "",
                            Name = "#"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("ea89f995-e61f-4e0f-b6ab-148c2066e3f1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9378),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9379),
                            ModifiedBy = "",
                            Name = "# File"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("8009ae51-6a45-466b-b79b-0867109e405d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9381),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9382),
                            ModifiedBy = "",
                            Name = "# File ext. | Doc."
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("ca542795-319d-4310-a679-2185e31fd319"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9386),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9387),
                            ModifiedBy = "",
                            Name = "# File ext. | Image"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("a62c6acb-c291-4a63-8fa8-a8c6a02cd00c"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9389),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9389),
                            ModifiedBy = "",
                            Name = "# File ext. | Video"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("e8ce58ba-cf4f-4cc8-9d2a-82b237b9e761"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9392),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9392),
                            ModifiedBy = "",
                            Name = "# File Format"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("80828076-73b5-4975-87e8-8c10afda0983"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9395),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9395),
                            ModifiedBy = "",
                            Name = "# File Render"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("f228f852-c17e-4f35-9d8e-f06d8ce18e6c"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9399),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9399),
                            ModifiedBy = "",
                            Name = "Music Genre"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("b5022900-0b6f-4e3e-9803-ad4b85c80fbb"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9402),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9402),
                            ModifiedBy = "",
                            Name = "Music Theory"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("1bdd0e32-4dd3-456c-a892-de8661a81484"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9405),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9405),
                            ModifiedBy = "",
                            Name = "Keys"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("ff9bd06a-83e2-431e-9011-b5209be13a4b"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9407),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9408),
                            ModifiedBy = "",
                            Name = "Brass"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("a4f897e4-98b3-4cfc-a30c-59640f00ff79"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9412),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9412),
                            ModifiedBy = "",
                            Name = "Strings"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("943c37be-587e-49ad-9b1c-d04b2f7e7b16"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9415),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9415),
                            ModifiedBy = "",
                            Name = "Percussions"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("ae3afa31-f734-4cd9-9403-72f7f3201479"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9417),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9417),
                            ModifiedBy = "",
                            Name = "Woodwinds"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("8df38f78-99db-4ec3-9a5b-5053cfa8e06d"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9420),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9420),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("382fefc4-4ee4-417e-950c-2c76d330210f"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9424),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9425),
                            ModifiedBy = "",
                            Name = "Fun"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("8d26f261-d9d4-4065-a51d-05a2f8fdac95"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9427),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9427),
                            ModifiedBy = "",
                            Name = "Guitar"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Task", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("06/11/2024 14:37:44");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("a0d58b1e-a6d6-4c9e-adba-f33d5c0efe71"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9554),
                            CreatedBy = "",
                            DateEnd = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9554),
                            ModifiedBy = "",
                            Name = "Check Mails",
                            TaskCategoryId = 5
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("a3e4b57a-d153-4de5-b597-2b90d5562390"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9489),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9490),
                            ModifiedBy = "",
                            Name = "PAD Mobile"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("8974e4b1-ac04-475a-a568-423cdea60210"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9494),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9494),
                            ModifiedBy = "",
                            Name = "PAD Cave"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("009cec29-9427-4d00-ba85-ef0da6486057"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9499),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9499),
                            ModifiedBy = "",
                            Name = "PAD Kids"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("13cfa2f0-0ccb-437d-a9c9-b5a2f510bf27"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9501),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9502),
                            ModifiedBy = "",
                            Name = "Shopping"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("24cce47c-3c8e-4b20-a9ad-ee9f4a853541"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9504),
                            CreatedBy = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(9504),
                            ModifiedBy = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.User", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Birthdate = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("470ab25d-e803-4a76-b0b0-d67d9ec72622"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 684, DateTimeKind.Utc).AddTicks(71),
                            CreatedBy = "",
                            Email = "tonyvan@live.fr",
                            FirstName = "Tony",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 684, DateTimeKind.Utc).AddTicks(72),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 224, 75, 101, 183, 124, 16, 85, 65, 3, 75, 141, 54, 171, 179, 12, 243, 84, 196, 75, 180, 47, 135, 109, 62, 103, 113, 82, 134, 5, 57, 157, 56, 197, 140, 65, 49, 17, 180, 98, 253, 171, 51, 40, 52, 155, 183, 74, 249, 141, 16, 183, 229, 64, 48, 175, 215, 118, 39, 179, 179, 186, 163, 55, 164 },
                            PasswordSalt = new byte[] { 40, 21, 85, 85, 117, 226, 82, 67, 95, 28, 192, 255, 168, 65, 241, 12, 112, 118, 69, 29, 190, 97, 30, 81, 63, 222, 233, 239, 150, 37, 189, 150, 188, 237, 64, 215, 128, 11, 132, 4, 96, 218, 194, 128, 60, 105, 57, 112, 122, 53, 142, 35, 36, 100, 154, 206, 156, 219, 165, 45, 230, 120, 76, 178, 168, 118, 209, 92, 68, 123, 215, 34, 198, 224, 178, 239, 187, 248, 171, 10, 51, 104, 64, 224, 241, 2, 111, 171, 138, 211, 235, 14, 155, 215, 200, 114, 241, 235, 170, 139, 168, 102, 222, 43, 70, 153, 191, 10, 131, 157, 145, 44, 85, 240, 179, 35, 116, 142, 126, 169, 250, 196, 217, 63, 238, 9, 221, 203 },
                            Role = 2
                        },
                        new
                        {
                            EntityId = 2,
                            Birthdate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("e76130ea-7ff4-420c-8951-017cbd30b077"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 684, DateTimeKind.Utc).AddTicks(180),
                            CreatedBy = "",
                            Email = "floppy@gmail.com",
                            FirstName = "Floppy",
                            LastName = "Disk",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 684, DateTimeKind.Utc).AddTicks(180),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 52, 21, 59, 133, 50, 143, 118, 242, 195, 200, 47, 233, 239, 174, 125, 95, 45, 223, 119, 75, 85, 169, 235, 33, 179, 245, 190, 195, 243, 43, 73, 103, 138, 218, 243, 254, 208, 111, 253, 136, 116, 105, 202, 85, 216, 174, 168, 92, 75, 75, 69, 38, 39, 211, 60, 184, 82, 82, 156, 64, 68, 215, 240, 159 },
                            PasswordSalt = new byte[] { 93, 208, 37, 208, 50, 99, 220, 175, 218, 249, 216, 222, 102, 137, 134, 217, 239, 175, 30, 181, 71, 168, 164, 60, 164, 101, 224, 92, 230, 134, 197, 19, 191, 20, 255, 158, 151, 65, 137, 140, 202, 43, 65, 42, 219, 9, 238, 233, 58, 0, 2, 176, 177, 72, 221, 243, 152, 12, 108, 89, 252, 238, 138, 254, 166, 156, 169, 108, 60, 169, 194, 45, 193, 15, 158, 56, 5, 63, 190, 2, 11, 209, 217, 182, 182, 104, 180, 208, 106, 95, 227, 29, 45, 161, 92, 195, 183, 219, 237, 231, 253, 171, 138, 85, 53, 163, 44, 42, 15, 119, 107, 195, 92, 120, 220, 25, 22, 106, 79, 141, 224, 137, 174, 237, 24, 89, 204, 88 },
                            Role = 1
                        },
                        new
                        {
                            EntityId = 3,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("cde59053-f9c5-450c-b5f0-93536e8cb416"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 684, DateTimeKind.Utc).AddTicks(249),
                            CreatedBy = "",
                            Email = "vincent.megag@gmail.com",
                            FirstName = "Vincent",
                            LastName = "Megag",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 684, DateTimeKind.Utc).AddTicks(250),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 123, 170, 197, 156, 225, 39, 134, 4, 102, 94, 189, 158, 55, 3, 230, 168, 135, 81, 237, 62, 254, 157, 226, 206, 211, 248, 247, 152, 112, 177, 193, 92, 147, 135, 127, 88, 74, 108, 75, 219, 243, 56, 211, 104, 109, 116, 118, 172, 105, 27, 19, 109, 40, 193, 189, 68, 81, 52, 66, 174, 223, 18, 139, 97 },
                            PasswordSalt = new byte[] { 139, 24, 251, 128, 83, 59, 83, 141, 162, 201, 147, 148, 198, 70, 48, 0, 20, 131, 69, 154, 20, 3, 38, 156, 134, 198, 225, 85, 33, 171, 192, 85, 87, 242, 224, 246, 120, 30, 20, 8, 215, 66, 238, 105, 132, 219, 82, 116, 115, 52, 106, 137, 74, 227, 14, 96, 77, 160, 129, 73, 97, 220, 219, 154, 29, 14, 2, 163, 98, 217, 233, 149, 7, 252, 150, 184, 139, 42, 86, 24, 238, 17, 51, 90, 62, 182, 7, 59, 163, 91, 222, 224, 239, 0, 22, 18, 172, 126, 73, 250, 0, 148, 182, 194, 197, 227, 130, 152, 214, 238, 217, 154, 112, 253, 143, 64, 149, 206, 9, 133, 222, 195, 144, 175, 107, 58, 151, 249 },
                            Role = 2
                        },
                        new
                        {
                            EntityId = 4,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("e128655e-8e27-4ea4-9404-ed947ca3fab6"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 684, DateTimeKind.Utc).AddTicks(339),
                            CreatedBy = "",
                            Email = "test@test.com",
                            FirstName = "Admin",
                            LastName = "...",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 684, DateTimeKind.Utc).AddTicks(339),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 179, 247, 229, 113, 166, 108, 80, 142, 125, 195, 216, 241, 169, 143, 200, 160, 115, 33, 143, 125, 204, 55, 240, 64, 245, 101, 201, 54, 136, 177, 24, 146, 219, 37, 144, 11, 172, 97, 167, 204, 86, 80, 235, 72, 162, 146, 213, 119, 188, 138, 135, 57, 225, 86, 242, 169, 163, 111, 34, 126, 135, 152, 202, 229 },
                            PasswordSalt = new byte[] { 157, 46, 140, 10, 232, 114, 24, 94, 208, 215, 69, 73, 176, 124, 12, 240, 41, 58, 135, 192, 103, 231, 175, 123, 51, 230, 191, 185, 113, 68, 59, 88, 43, 252, 75, 32, 236, 209, 81, 229, 91, 36, 156, 187, 244, 135, 192, 91, 48, 205, 180, 89, 225, 200, 175, 151, 108, 211, 126, 135, 57, 10, 26, 35, 212, 43, 63, 86, 56, 112, 56, 108, 68, 191, 97, 85, 10, 212, 87, 208, 124, 137, 108, 140, 184, 213, 166, 184, 39, 221, 83, 232, 132, 121, 105, 81, 255, 66, 0, 192, 215, 1, 215, 228, 20, 191, 177, 22, 160, 117, 200, 67, 231, 138, 30, 124, 154, 198, 81, 67, 93, 196, 236, 130, 55, 165, 160, 130 },
                            Role = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Document", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Document_Size");
                        });

                    b.HasDiscriminator().HasValue("Document");
                });

            modelBuilder.Entity("MB.Domain.Entities.Image", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Image");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8211),
                            CreatedBy = "",
                            Description = "In Chords Chart",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8211),
                            ModifiedBy = "",
                            Name = " Major Key Notes",
                            Score = 0,
                            Type = 1,
                            Height = 510,
                            Size = 61206,
                            Width = 359
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8229),
                            CreatedBy = "",
                            Description = "7 Notes, 7 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8229),
                            ModifiedBy = "",
                            Name = "Major Diatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 940,
                            Size = 136462,
                            Width = 700
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8235),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8235),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1361,
                            Size = 562138,
                            Width = 868
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8241),
                            CreatedBy = "",
                            Description = "5 Notes, 5 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8241),
                            ModifiedBy = "",
                            Name = "Pentatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 524,
                            Size = 74358,
                            Width = 250
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8244),
                            CreatedBy = "",
                            Description = "Color Measure",
                            Extension = "png",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8245),
                            ModifiedBy = "",
                            Name = "Intervals",
                            Score = 0,
                            Type = 1,
                            Height = 844,
                            Size = 56324,
                            Width = 556
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8252),
                            CreatedBy = "",
                            Description = "Absolute Basics",
                            Extension = "png",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8252),
                            ModifiedBy = "",
                            Name = "Time Measure",
                            Score = 0,
                            Type = 1,
                            Height = 255,
                            Size = 8992,
                            Width = 400
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8256),
                            CreatedBy = "",
                            Description = "Natural Order",
                            Extension = "webp",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8256),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            Score = 0,
                            Type = 1,
                            Height = 226,
                            Size = 30964,
                            Width = 600
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8259),
                            CreatedBy = "",
                            Description = "Communication is important",
                            Extension = "png",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8259),
                            ModifiedBy = "",
                            Name = "Guitar Vocabulary",
                            Score = 0,
                            Type = 1,
                            Height = 705,
                            Size = 99994,
                            Width = 512
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8262),
                            CreatedBy = "",
                            Description = "Diatonic Chords in C Major",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8263),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1317,
                            Size = 204898,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8348),
                            CreatedBy = "",
                            Description = "Mmm... You can tell, right ?",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8349),
                            ModifiedBy = "",
                            Name = "Piano Scales",
                            Score = 0,
                            Type = 1,
                            Height = 900,
                            Size = 91482,
                            Width = 695
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8352),
                            CreatedBy = "",
                            Description = "Overview",
                            Extension = "gif",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8353),
                            ModifiedBy = "",
                            Name = "Tessitures",
                            Score = 0,
                            Type = 1,
                            Height = 709,
                            Size = 62391,
                            Width = 1026
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8356),
                            CreatedBy = "",
                            Description = "Circle of Life",
                            Extension = "png",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8356),
                            ModifiedBy = "",
                            Name = "Chord Wheel",
                            Score = 0,
                            Type = 1,
                            Height = 950,
                            Size = 663017,
                            Width = 950
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8359),
                            CreatedBy = "",
                            Description = " ... ",
                            Extension = "jpeg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8360),
                            ModifiedBy = "",
                            Name = "The Mix is Almost Perfect",
                            Score = 0,
                            Type = 1,
                            Height = 480,
                            Size = 45254,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8366),
                            CreatedBy = "",
                            Description = "Basic Chords / Different Keys",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8366),
                            ModifiedBy = "",
                            Name = "Guitar Progressions",
                            Score = 0,
                            Type = 1,
                            Height = 690,
                            Size = 167969,
                            Width = 552
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc3"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8370),
                            CreatedBy = "",
                            Description = "Les 3, c'est NON !",
                            Extension = "jpeg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8370),
                            ModifiedBy = "",
                            Name = "Vous le voulez comment votre projet ?",
                            Score = 0,
                            Type = 1,
                            Height = 960,
                            Size = 205144,
                            Width = 720
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8374),
                            CreatedBy = "",
                            Description = "1, 2, 3, 4, 5",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8375),
                            ModifiedBy = "",
                            Name = "Fingers Numerotation",
                            Score = 0,
                            Type = 1,
                            Height = 233,
                            Size = 24030,
                            Width = 350
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8377),
                            CreatedBy = "",
                            Description = "My actual Keyboard",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8377),
                            ModifiedBy = "",
                            Name = "Roland FP-30",
                            Score = 0,
                            Type = 1,
                            Height = 368,
                            Size = 87596,
                            Width = 1680
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8381),
                            CreatedBy = "",
                            Description = "How to build a chord",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8381),
                            ModifiedBy = "",
                            Name = "Chord Formula's",
                            Score = 0,
                            Type = 1,
                            Height = 1109,
                            Size = 221030,
                            Width = 1080
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc4"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8384),
                            CreatedBy = "",
                            Description = "Valeurs de Temps",
                            Extension = "webp",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8384),
                            ModifiedBy = "",
                            Name = "Time Values",
                            Score = 0,
                            Type = 1,
                            Height = 530,
                            Size = 21922,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd4"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8387),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8387),
                            ModifiedBy = "",
                            Name = "Guitar Chords ( B )",
                            Score = 0,
                            Type = 1,
                            Height = 909,
                            Size = 57447,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8390),
                            CreatedBy = "",
                            Description = "Primary Modes",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8390),
                            ModifiedBy = "",
                            Name = "Modes starting in C",
                            Score = 0,
                            Type = 1,
                            Height = 1552,
                            Size = 111187,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8395),
                            CreatedBy = "",
                            Description = "Good luck finding the good one ...",
                            Extension = "jpg",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8395),
                            ModifiedBy = "",
                            Name = "Guitar Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1913,
                            Size = 633229,
                            Width = 1200
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc5"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8398),
                            CreatedBy = "",
                            Description = "Une approche parmis tant d'autres",
                            Extension = "png",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8398),
                            ModifiedBy = "",
                            Name = "Intervalles",
                            Score = 0,
                            Type = 1,
                            Height = 971,
                            Size = 69313,
                            Width = 692
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.Video", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Height")
                                .HasColumnName("Video_Height");

                            t.Property("Size")
                                .HasColumnName("Video_Size");

                            t.Property("Width")
                                .HasColumnName("Video_Width");
                        });

                    b.HasDiscriminator().HasValue("Video");

                    b.HasData(
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8481),
                            CreatedBy = "",
                            Description = " Bendy & The Ink Machine ",
                            Extension = "mp4",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8482),
                            ModifiedBy = "",
                            Name = "BATIM - Build our Machine",
                            Score = 0,
                            Type = 2,
                            Duration = 64,
                            Height = 360,
                            Size = 5091239,
                            Width = 640
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.VideoYouTube", b =>
                {
                    b.HasBaseType("MB.Domain.Entities.Mood");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("VideoYouTube");

                    b.HasData(
                        new
                        {
                            EntityId = 85,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                            Created = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8539),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "",
                            Modified = new DateTime(2024, 6, 11, 12, 37, 44, 683, DateTimeKind.Utc).AddTicks(8539),
                            ModifiedBy = "",
                            Name = "Mario Bros 3 Cover",
                            Score = 0,
                            Type = 4,
                            Url = "WWUxrTdjqg0"
                        });
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationArtistStyle", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Style", "Style")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookFranchise", b =>
                {
                    b.HasOne("MB.Domain.Entities.Book", "Book")
                        .WithMany("BookFranchise")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("BookFranchise")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationBookModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Book", "Book")
                        .WithMany("BookModel")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("BookModel")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseMedia", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Media", "Media")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationFranchiseModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkArtist", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("LinkArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkArtists")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkCategory", b =>
                {
                    b.HasOne("MB.Domain.Entities.LinkCategory", "LinkCategory")
                        .WithMany("RLinkCategories")
                        .HasForeignKey("LinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("LinkCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationLinkModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Link", "Link")
                        .WithMany("LinkModels")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("LinkModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodArtist", b =>
                {
                    b.HasOne("MB.Domain.Entities.Artist", "Artist")
                        .WithMany("MoodArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodArtists")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodFranchise", b =>
                {
                    b.HasOne("MB.Domain.Entities.Franchise", "Franchise")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodModel", b =>
                {
                    b.HasOne("MB.Domain.Entities.Model", "Model")
                        .WithMany("MoodModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodModels")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.Entities.RelationMoodTag", b =>
                {
                    b.HasOne("MB.Domain.Entities.Mood", "Mood")
                        .WithMany("MoodTags")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.Entities.Tag", "Tag")
                        .WithMany("MoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.HasOne("MB.Domain.Entities.TagCategory", "TagCategory")
                        .WithMany("Tags")
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.Task", b =>
                {
                    b.HasOne("MB.Domain.Entities.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("MB.Domain.Entities.Artist", b =>
                {
                    b.Navigation("ArtistStyles");

                    b.Navigation("LinkArtists");

                    b.Navigation("MoodArtists");
                });

            modelBuilder.Entity("MB.Domain.Entities.Book", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("BookModel");
                });

            modelBuilder.Entity("MB.Domain.Entities.Franchise", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("FranchiseMedias");

                    b.Navigation("FranchiseModels");

                    b.Navigation("MoodFranchises");
                });

            modelBuilder.Entity("MB.Domain.Entities.Link", b =>
                {
                    b.Navigation("LinkArtists");

                    b.Navigation("LinkCategories");

                    b.Navigation("LinkModels");
                });

            modelBuilder.Entity("MB.Domain.Entities.LinkCategory", b =>
                {
                    b.Navigation("RLinkCategories");
                });

            modelBuilder.Entity("MB.Domain.Entities.Media", b =>
                {
                    b.Navigation("FranchiseMedias");
                });

            modelBuilder.Entity("MB.Domain.Entities.Model", b =>
                {
                    b.Navigation("BookModel");

                    b.Navigation("FranchiseModels");

                    b.Navigation("LinkModels");

                    b.Navigation("MoodModels");
                });

            modelBuilder.Entity("MB.Domain.Entities.Mood", b =>
                {
                    b.Navigation("MoodArtists");

                    b.Navigation("MoodFranchises");

                    b.Navigation("MoodModels");

                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.Entities.Style", b =>
                {
                    b.Navigation("ArtistStyles");
                });

            modelBuilder.Entity("MB.Domain.Entities.Tag", b =>
                {
                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.Entities.TagCategory", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MB.Domain.Entities.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
