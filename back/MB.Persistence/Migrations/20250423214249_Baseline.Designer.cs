// <auto-generated />
using System;
using MB.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MB.Persistence.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250423214249_Baseline")]
    partial class Baseline
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MB.Domain.ArtistAggregate.Artist", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("cec8defc-0be1-4599-b915-c026545008c8"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(5197),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(5205),
                            ModifiedBy = "",
                            Name = "# Unknown Artist",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("e5034839-a292-4d09-a7b7-6939a29c2990"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6476),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6477),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("7ddc7f00-a751-4361-8538-73a9967559b2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6481),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6481),
                            ModifiedBy = "",
                            Name = "/ Unknown 2D Illustrator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("0c8e730f-33bc-4445-914c-102012b4a973"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6483),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6484),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Animator",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("5ae3f0a4-54fd-4d85-a66a-9dba6d0f5770"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6492),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6492),
                            ModifiedBy = "",
                            Name = "/ Unknown 3D Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("e18cc2e7-93d0-447c-8512-0ccadc3a669f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6506),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6506),
                            ModifiedBy = "",
                            Name = "/ Unknown A.I. User",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("866197c4-15d8-4235-93b2-bd028e4d8bf3"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6508),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6509),
                            ModifiedBy = "",
                            Name = "/ Unknown Musician",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("e249368b-f764-49fc-afcf-1a8074c8b55a"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6543),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6543),
                            ModifiedBy = "",
                            Name = "/ Unknown Photographer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("9f8d5863-bad7-4245-9025-f2d98e813f2a"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6548),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6549),
                            ModifiedBy = "",
                            Name = "/ Unknown Sculptor",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("b90858ae-d71c-46a4-9b24-a783597a969d"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6553),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6553),
                            ModifiedBy = "",
                            Name = "/ Unknown Videast",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("7edf83fe-3f36-4c77-a64b-b6197ce989e7"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6555),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6555),
                            ModifiedBy = "",
                            Name = "/ Unknown Writer",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("1d4819e0-6c0f-4f14-9da3-9bc3eaedc10d"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6558),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6558),
                            ModifiedBy = "",
                            Name = "Flying PAD",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("8d19a1c1-b06a-4447-a612-4fa48b153598"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6562),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6562),
                            ModifiedBy = "",
                            Name = "Soën9048",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("dccbbcc6-8fd6-417f-b8be-a306295e0822"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6565),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6565),
                            ModifiedBy = "",
                            Name = "CohesivePanda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("56173d2d-8112-47f2-afe9-2a52eb8f7235"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6567),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6567),
                            ModifiedBy = "",
                            Name = "Nobuo Uematsu",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("afd5c7d3-fa38-411e-b232-32d1cffdd5f3"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6569),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6570),
                            ModifiedBy = "",
                            Name = "Eichiro Oda",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("070aace9-76aa-46c1-b624-c95debc08905"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6574),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6574),
                            ModifiedBy = "",
                            Name = "Masashi Kishimoto",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("ea09bcf9-7e4b-46ab-86a1-406e248a847e"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6577),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6578),
                            ModifiedBy = "",
                            Name = "Dali",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("800918f7-e2b8-460c-8bdc-e283efdbe0e5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6580),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6580),
                            ModifiedBy = "",
                            Name = "Yoko Shimomura",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("cb2a8db5-fc14-4584-b201-5de31b36f1f0"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6582),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6582),
                            ModifiedBy = "",
                            Name = "Michael Jackson",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("f45d90ab-e910-493f-a50f-c27abd120a92"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6586),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6587),
                            ModifiedBy = "",
                            Name = "CG5",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("168ea805-61ae-401f-8420-dd571e7155b6"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6589),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6590),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Pseudonym = ""
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("1426c48b-9fb5-4e63-8bf9-374c49276949"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6592),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 693, DateTimeKind.Utc).AddTicks(6592),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Pseudonym = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationArtistStyle", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("RArtistStyle");

                    b.HasData(
                        new
                        {
                            ArtistId = 12,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 12,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 13,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 14,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 15,
                            StyleId = 9
                        },
                        new
                        {
                            ArtistId = 16,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 17,
                            StyleId = 6
                        },
                        new
                        {
                            ArtistId = 18,
                            StyleId = 1
                        },
                        new
                        {
                            ArtistId = 19,
                            StyleId = 2
                        },
                        new
                        {
                            ArtistId = 20,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 21,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 22,
                            StyleId = 7
                        },
                        new
                        {
                            ArtistId = 23,
                            StyleId = 7
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkArtist", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RLinkArtist");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkModel", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RLinkModel");
                });

            modelBuilder.Entity("MB.Domain.BoardAggregate.Board", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("MB.Domain.BookAggregate.Book", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.Franchise", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Franchises");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("4f9e30f6-a836-4c93-90ec-2463af5df1f5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(8245),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(8246),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("1dc3a16f-3720-4d24-9e7f-1176d51f2db7"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(8643),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(8643),
                            ModifiedBy = "",
                            Name = "Street Fighter"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("6fd8f80c-5548-45ec-a139-81f1c06f5ba4"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(8647),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(8647),
                            ModifiedBy = "",
                            Name = "# Unrelated Franchise"
                        });
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationBookFranchise", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RBookFranchise");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationFranchiseMedia", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RFranchiseMedia");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            MediaId = 9
                        },
                        new
                        {
                            FranchiseId = 2,
                            MediaId = 7
                        },
                        new
                        {
                            FranchiseId = 3,
                            MediaId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.Link", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("9e4199ee-c658-4a2f-a424-2758be91767c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4180),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4181),
                            ModifiedBy = "",
                            Name = "KVR",
                            Url = "https://www.kvraudio.com/"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("4290f02e-857c-433d-a697-c48511ac6299"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4885),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4886),
                            ModifiedBy = "",
                            Name = "MuseScore",
                            Url = "https://musescore.com/"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("8e962416-e836-4a6c-b506-96db4264aae6"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4889),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4889),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.native-instruments.com"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("2b454c58-53d4-4118-a118-f2cd8deeb19c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4898),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4898),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.steinberg.net/"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("682aa378-ffe8-49b9-aa0b-a7386d4eaab0"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4901),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4901),
                            ModifiedBy = "",
                            Name = "Clés pour l'harmonie",
                            Url = "http://www.jo-anger-weller.com/102/cles-pour-lharmonie/"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("32ad45bc-4b81-4d26-aaff-b7690fc8daad"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4907),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4907),
                            ModifiedBy = "",
                            Name = "Google | Metronome",
                            Url = "https://www.google.com/search?q=metronome"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("0f2c06fe-b878-4ae8-8027-2407f5c4301a"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4910),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4910),
                            ModifiedBy = "",
                            Name = "Google | Stopwatch",
                            Url = "https://www.google.com/search?q=stopwatch"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("076383ce-fe89-47c2-af16-f8ec7d187129"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4915),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4915),
                            ModifiedBy = "",
                            Name = "Google | Timer",
                            Url = "https://www.google.com/search?q=timer"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("28cc8b31-af89-40e4-a033-bce7ff75670b"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4917),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4917),
                            ModifiedBy = "",
                            Name = "Mangold Project",
                            Url = "https://www.youtube.com/@MangoldProject"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("0f99745d-9f3e-4e4c-ad2f-fa96214a8097"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4921),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4921),
                            ModifiedBy = "",
                            Name = "# YouTube",
                            Url = "https://www.youtube.com"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("4534a08b-4366-412f-9d58-40035407a804"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4923),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4923),
                            ModifiedBy = "",
                            Name = "Piano Jazz Concept",
                            Url = "https://www.youtube.com/@Pianojazzconcept"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("b21d1579-8ffc-44eb-957e-4dc340fdaa88"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4928),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4928),
                            ModifiedBy = "",
                            Name = "Rick Beato",
                            Url = "https://www.youtube.com/@RickBeato"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("f88e2ad3-dc70-413c-a4bd-5b5a242b6840"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4930),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4930),
                            ModifiedBy = "",
                            Name = "Pianote",
                            Url = "https://www.youtube.com/@PianoteOfficial"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("10e23ea4-bb71-41aa-a6f8-77b9515d468b"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4932),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4933),
                            ModifiedBy = "",
                            Name = "TryHardNinja",
                            Url = "https://www.youtube.com/@TryHardNinja"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("22f91969-b23d-4c59-8f6d-000778bac6fd"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4935),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4936),
                            ModifiedBy = "",
                            Name = "Kyle Allen Music",
                            Url = "https://www.youtube.com/@KyleAllenMusic"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("f8355699-e32e-48c4-99db-62eca4b8928e"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4979),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(4979),
                            ModifiedBy = "",
                            Name = "Ableton",
                            Url = "https://www.youtube.com/@Ableton"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("59c29f96-7a37-4058-9573-f6adac032043"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5033),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5033),
                            ModifiedBy = "",
                            Name = "La Machine à Mixer",
                            Url = "https://www.youtube.com/@lamachineamixer"
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("a706ce48-816c-47ea-a4c5-4f3762ec6259"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5039),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5039),
                            ModifiedBy = "",
                            Name = "Audiofanzine",
                            Url = "https://www.youtube.com/@audiofanzine"
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("e6dede40-df0c-4d86-ac80-6ff646702c9f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5041),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5042),
                            ModifiedBy = "",
                            Name = "Cubase",
                            Url = "https://www.youtube.com/@Cubase"
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("799683a2-b7d6-4ce2-8cf7-dbaccd8d3ef0"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5046),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5047),
                            ModifiedBy = "",
                            Name = "Ten Second Songs",
                            Url = "https://www.youtube.com/@TenSecondSongs"
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("7283163b-6f29-4933-ae98-b98f9214afc5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5049),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5049),
                            ModifiedBy = "",
                            Name = "The Piano Guys",
                            Url = "https://www.youtube.com/@thepianoguys"
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("4b91585e-a7b8-4512-a180-10f3601ba765"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5051),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5051),
                            ModifiedBy = "",
                            Name = "CG5",
                            Url = "https://www.youtube.com/@CG5"
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("44630b4d-b2a5-469f-b1d4-9b4818544bc3"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5053),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5054),
                            ModifiedBy = "",
                            Name = "Native Instruments",
                            Url = "https://www.youtube.com/@NativeInstruments"
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("53d56806-a4fe-4bda-9db1-7cc52b44a249"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5058),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5058),
                            ModifiedBy = "",
                            Name = "Ken Tamplin Vocal Academy",
                            Url = "https://www.youtube.com/@kentamplin"
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("20b99815-e033-425a-98a3-bee12854c94f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5060),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5061),
                            ModifiedBy = "",
                            Name = "Pentatonix",
                            Url = "https://www.youtube.com/@PTXofficial"
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("71392f3d-0f3b-4a6d-9150-72159f820878"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5063),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5063),
                            ModifiedBy = "",
                            Name = "Recording Revolution",
                            Url = "https://www.youtube.com/@recordingrevolution"
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("436b5d9e-8320-4ca2-99ce-bb32541c6878"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5065),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5065),
                            ModifiedBy = "",
                            Name = "Jacob Collier",
                            Url = "https://www.youtube.com/@jacobcollier"
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("83df0daf-e991-46e2-bcbf-aa17ceefc369"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5069),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5070),
                            ModifiedBy = "",
                            Name = "Orchestration Online",
                            Url = "https://www.youtube.com/@OrchestrationOnline"
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("83d9c180-e36b-4ab5-9218-63dd32c83103"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5072),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5072),
                            ModifiedBy = "",
                            Name = "Nuendo",
                            Url = "https://www.youtube.com/@Nuendo"
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("fb84dae6-96de-4aef-8735-f5937a71ec61"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5074),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5074),
                            ModifiedBy = "",
                            Name = "reFX",
                            Url = "https://www.youtube.com/@reFXaudio"
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("36f6775d-c6b3-4324-a924-480233e2221e"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5076),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(5076),
                            ModifiedBy = "",
                            Name = "Steinberg",
                            Url = "https://www.youtube.com/@steinberg"
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.RelationLinkCategory", b =>
                {
                    b.Property<int>("LinkId")
                        .HasColumnType("int");

                    b.Property<int>("LinkCategoryId")
                        .HasColumnType("int");

                    b.HasKey("LinkId", "LinkCategoryId");

                    b.HasIndex("LinkCategoryId");

                    b.ToTable("RLinkCategory");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 1,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 2,
                            LinkCategoryId = 9
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 3,
                            LinkCategoryId = 8
                        },
                        new
                        {
                            LinkId = 4,
                            LinkCategoryId = 6
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 4
                        },
                        new
                        {
                            LinkId = 5,
                            LinkCategoryId = 5
                        },
                        new
                        {
                            LinkId = 6,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 7,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 8,
                            LinkCategoryId = 10
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 9,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 10,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 11,
                            LinkCategoryId = 15
                        },
                        new
                        {
                            LinkId = 12,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 13,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 14,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 15,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 16,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 17,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 18,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 19,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 20,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 21,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 22,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 23,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 24,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 25,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 1
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 2
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 26,
                            LinkCategoryId = 14
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 27,
                            LinkCategoryId = 13
                        },
                        new
                        {
                            LinkId = 28,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 29,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 30,
                            LinkCategoryId = 12
                        },
                        new
                        {
                            LinkId = 31,
                            LinkCategoryId = 12
                        });
                });

            modelBuilder.Entity("MB.Domain.LinkCategoryAggregate.LinkCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("LinkCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("f0d59d43-5d96-41c4-a3a7-734e2407f009"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6051),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6053),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("1d18b097-7172-4b9d-bad7-881b45f5320c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6427),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6428),
                            ModifiedBy = "",
                            Name = "Audio | Mix & Master"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("7927c50e-304a-4c42-a2fe-181112cfc58f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6431),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6431),
                            ModifiedBy = "",
                            Name = "Audio | Sound Design"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("eda75a5b-c003-4b2a-9e2d-fb8619f31bda"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6433),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6434),
                            ModifiedBy = "",
                            Name = "Books"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("5f7ebc4f-8bc1-4347-a778-440c7b66406f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6440),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6440),
                            ModifiedBy = "",
                            Name = "Books | Harmony"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("967dab45-6460-4bf7-a5a9-7cceb83dfd8e"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6476),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6476),
                            ModifiedBy = "",
                            Name = "Software"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("a3ae449c-9e39-43cb-bcdc-7f3a933a4e1b"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6479),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6479),
                            ModifiedBy = "",
                            Name = "Software | D.A.W."
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("2f02cf61-5f66-4717-913f-647ac8d5ab7a"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6481),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6481),
                            ModifiedBy = "",
                            Name = "Software | V.S.T."
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("24c50877-dbc8-47ee-af6b-91f466df5827"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6486),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6486),
                            ModifiedBy = "",
                            Name = "Software | Music Notation"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("c3433024-7f80-4d19-8a68-881df8c6ca41"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6490),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6490),
                            ModifiedBy = "",
                            Name = "Tools"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("63b224d2-b56a-4c57-8a58-6487aaa705a9"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6492),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6493),
                            ModifiedBy = "",
                            Name = "Tools | Global"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("c85ee54d-4c20-429a-9ea0-08a5a27e2ed8"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6495),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6495),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("054620f8-ff1e-4330-8936-f943e899eb67"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6499),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6499),
                            ModifiedBy = "",
                            Name = "YouTube | Artists"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("1da37691-d434-4cf3-9ec1-55cded5123db"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6501),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6501),
                            ModifiedBy = "",
                            Name = "YouTube | Audio"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("6d1a2924-378b-44aa-a846-294cee725295"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6503),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(6504),
                            ModifiedBy = "",
                            Name = "YouTube | Piano & Keys"
                        });
                });

            modelBuilder.Entity("MB.Domain.MediumAggregate.Media", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("d6a85d18-638a-467e-8afa-c3a6214d3290"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9589),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9590),
                            ModifiedBy = "",
                            Name = "# Unrelated"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("b42ec4f9-83ca-4e4e-bfec-43accaf4427f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9975),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9976),
                            ModifiedBy = "",
                            Name = "# Unknown"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("5bb369f6-002e-405b-9631-7ced2f3c1611"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9980),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9980),
                            ModifiedBy = "",
                            Name = "# Super Franchise"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("3bf97490-f6ff-4ec5-90ec-9b5fb714b866"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9982),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9983),
                            ModifiedBy = "",
                            Name = "TV"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("51b4d6e5-5ad9-4a9e-8c8e-6b1f0b3a331e"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9989),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9990),
                            ModifiedBy = "",
                            Name = "Radio"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("fe1665df-8568-48d5-8cba-73792f4c5aa2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9995),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9995),
                            ModifiedBy = "",
                            Name = "YouTube"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("fe16106b-2365-43af-9c9a-371bd4391f5c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9998),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(9998),
                            ModifiedBy = "",
                            Name = "Capcom"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("52d0bbd5-9d84-466e-bd9b-9acbeab52f32"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc),
                            ModifiedBy = "",
                            Name = "Square-Enix"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("dda5d582-0fb5-46a2-b905-6173e1f97d8b"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(40),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(40),
                            ModifiedBy = "",
                            Name = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.Model", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pseudonym")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("f4366584-baf4-48bd-b5fe-503c149aba66"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(9362),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 695, DateTimeKind.Utc).AddTicks(9363),
                            ModifiedBy = "",
                            Pseudonym = "# Unknown Model"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("3a3354c4-e5d0-4dcc-ac67-dada4d71ae8d"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(389),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "",
                            Gender = "",
                            LastName = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(390),
                            ModifiedBy = "",
                            Pseudonym = "# Unrelated Model"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("53d6cacf-ff73-469c-aaf5-40ef52698bc2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(393),
                            CreatedBy = "",
                            Description = "",
                            FirstName = "Tony",
                            Gender = "M",
                            LastName = "Van Langenhove",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(394),
                            ModifiedBy = "",
                            Pseudonym = "Flying PAD"
                        });
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationBookModel", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RBookModel");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationFranchiseModel", b =>
                {
                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("FranchiseId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RFranchiseModel");

                    b.HasData(
                        new
                        {
                            FranchiseId = 1,
                            ModelId = 3
                        },
                        new
                        {
                            FranchiseId = 3,
                            ModelId = 2
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Mood", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator<int>("Type").HasValue(0);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodArtist", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ArtistId");

                    b.HasIndex("ArtistId");

                    b.ToTable("RMoodArtist");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ArtistId = 12
                        },
                        new
                        {
                            MoodId = 13,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ArtistId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ArtistId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodFranchise", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "FranchiseId");

                    b.HasIndex("FranchiseId");

                    b.ToTable("RMoodFranchise");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodModel", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "ModelId");

                    b.HasIndex("ModelId");

                    b.ToTable("RMoodModel");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            ModelId = 3
                        },
                        new
                        {
                            MoodId = 13,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            ModelId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            ModelId = 1
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodTag", b =>
                {
                    b.Property<int>("MoodId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("MoodId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("RMoodTag");

                    b.HasData(
                        new
                        {
                            MoodId = 1,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 1,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 2,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 3,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 4,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 5,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 6,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 7,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 8,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 9,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 10,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 8
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 11,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 19
                        },
                        new
                        {
                            MoodId = 12,
                            TagId = 34
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 13,
                            TagId = 58
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 14,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 9
                        },
                        new
                        {
                            MoodId = 15,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 16,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 17,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 18,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 12
                        },
                        new
                        {
                            MoodId = 19,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 20,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 21,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 10
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 22,
                            TagId = 59
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 4
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 11
                        },
                        new
                        {
                            MoodId = 23,
                            TagId = 17
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 55,
                            TagId = 43
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 1
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 15
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 16
                        },
                        new
                        {
                            MoodId = 85,
                            TagId = 43
                        });
                });

            modelBuilder.Entity("MB.Domain.StyleAggregate.Style", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Styles");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("c9d54b25-9218-413f-a02b-3ddcd2e63d6f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(4762),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(4765),
                            ModifiedBy = "",
                            Name = "2D"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bc70cf8e-5964-423f-92df-90964d6ca8f1"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5190),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5191),
                            ModifiedBy = "",
                            Name = "2D Animation"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("1b89def8-3e84-46fe-9cb8-90a4dc72fd90"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5195),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5195),
                            ModifiedBy = "",
                            Name = "3D"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("5098071b-c6cf-4a56-ae3c-37b26daff00f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5198),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5198),
                            ModifiedBy = "",
                            Name = "3D Animation"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("793663c7-ed8d-4f8c-8545-2317fda9103f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5200),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5200),
                            ModifiedBy = "",
                            Name = "Architecture"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("d7ddfe34-2965-4a35-84b4-add246aa9e1c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5210),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5210),
                            ModifiedBy = "",
                            Name = "Writer"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("ff286ab0-d25e-4e6b-aa6f-fba7bf77e1cb"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5212),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5212),
                            ModifiedBy = "",
                            Name = "Music"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("bf21a655-b0c4-474f-8099-bc64ebb9a05e"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5305),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5306),
                            ModifiedBy = "",
                            Name = "Photo"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("88f84bb3-e573-49be-92bf-ae56c6055003"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5308),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5308),
                            ModifiedBy = "",
                            Name = "Video"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("27271286-e289-447a-ba73-f7c327d020a2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5315),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 694, DateTimeKind.Utc).AddTicks(5316),
                            ModifiedBy = "",
                            Name = "Video Games"
                        });
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR(150)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<int>("TagCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("BusinessId")
                        .HasDatabaseName("IX_Tag_BusinessId");

                    b.HasIndex("TagCategoryId")
                        .HasDatabaseName("IX_Tag_TagCategoryId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("277a6a29-1ae4-4dc4-ae0b-80602944ea7d"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4281),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4282),
                            ModifiedBy = "",
                            Name = "# All Files",
                            TagCategoryId = 1
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("c4472911-fe7b-474a-895e-6b7b612e4e8c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4967),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4968),
                            ModifiedBy = "",
                            Name = "Audio",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("811cc634-4dfa-4943-b281-fcee1de4c136"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4978),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4978),
                            ModifiedBy = "",
                            Name = "Document",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("c687c56b-fd53-446d-a14b-da9995e2cadd"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4980),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4980),
                            ModifiedBy = "",
                            Name = "Image",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("d8820301-b81f-4487-95a1-c765f244e0a1"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4983),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4983),
                            ModifiedBy = "",
                            Name = "Video",
                            TagCategoryId = 2
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("ac43869c-c2aa-4843-a4ca-ab5e60a2ec56"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4988),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4989),
                            ModifiedBy = "",
                            Name = "*.txt",
                            TagCategoryId = 3
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("708ede94-56ed-450e-8e33-94c25add3222"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4993),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4994),
                            ModifiedBy = "",
                            Name = "*.bmp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("99eb960e-8eaf-4db0-a9b3-620dc3d45ee4"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4996),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4996),
                            ModifiedBy = "",
                            Name = "*.gif",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("e83fd472-2f53-400b-963b-8c85134805a7"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4998),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(4998),
                            ModifiedBy = "",
                            Name = "*.jpeg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("3cccd224-24c1-4d34-9fb8-f7dee54177b6"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5001),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5002),
                            ModifiedBy = "",
                            Name = "*.jpg",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("ce3d9961-386d-4de7-a82d-953ec135edfc"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5006),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5006),
                            ModifiedBy = "",
                            Name = "*.png",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("57d11452-5c1a-4110-960d-470e1abc82aa"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5008),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5009),
                            ModifiedBy = "",
                            Name = "*.webp",
                            TagCategoryId = 4
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("5a035212-43cd-4bd9-a69d-fc2b70f93433"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5011),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5011),
                            ModifiedBy = "",
                            Name = "*.mp4",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("7fc9fee8-3f32-498b-8d56-1eab6efccf14"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5013),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5013),
                            ModifiedBy = "",
                            Name = "*.webm",
                            TagCategoryId = 5
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("4fac3ba1-dea0-413c-bf02-0276b1df083e"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5120),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5120),
                            ModifiedBy = "",
                            Name = "Landscape",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("1007ec08-faee-469c-8f9c-5545b6ec63fa"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5122),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5123),
                            ModifiedBy = "",
                            Name = "Landscape ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("02735d0a-4b6a-4ad5-a03a-4edd67c7fe80"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5125),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5125),
                            ModifiedBy = "",
                            Name = "Portrait",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("7368b401-fe50-45bc-a792-8b478d17cab8"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5130),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5130),
                            ModifiedBy = "",
                            Name = "Portrait ( 16:9 )",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("c3d7fcae-777b-42fc-b56d-1b9541949c37"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5156),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5156),
                            ModifiedBy = "",
                            Name = "Square",
                            TagCategoryId = 6
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("d9283880-c794-406a-9059-15b8dc4152b7"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5158),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5159),
                            ModifiedBy = "",
                            Name = "2D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("3e1f02c9-783c-43af-85a8-7aabf5d9a461"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5161),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5161),
                            ModifiedBy = "",
                            Name = "2D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("c6416fb4-c050-422e-90b5-ca8ff4c217c0"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5163),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5163),
                            ModifiedBy = "",
                            Name = "3D",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("90ff18e6-a0c1-4477-aa34-7d14f4f067db"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5168),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5168),
                            ModifiedBy = "",
                            Name = "3D | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 24,
                            BusinessId = new Guid("56e0a702-e6d3-4050-a7aa-1a65b40ffa98"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5170),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5170),
                            ModifiedBy = "",
                            Name = "Photo",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 25,
                            BusinessId = new Guid("843c1b59-3675-48d0-af2c-8896d9f9f3b5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5172),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5172),
                            ModifiedBy = "",
                            Name = "Photo | Anim",
                            TagCategoryId = 7
                        },
                        new
                        {
                            EntityId = 26,
                            BusinessId = new Guid("51ed121b-5850-4bc8-ad60-e4a877d20b5c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5174),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5175),
                            ModifiedBy = "",
                            Name = "E.D.M.",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 27,
                            BusinessId = new Guid("ffec141e-bd5b-4176-b138-d3201f4fe280"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5179),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5179),
                            ModifiedBy = "",
                            Name = "Jazz",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 28,
                            BusinessId = new Guid("9c140e53-9113-4465-bf7c-3dc29cc7ed5b"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5181),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5182),
                            ModifiedBy = "",
                            Name = "Metal",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 29,
                            BusinessId = new Guid("8e762a70-627a-452b-8a0c-8a66ef75d7cc"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5184),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5184),
                            ModifiedBy = "",
                            Name = "Orchestral",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 30,
                            BusinessId = new Guid("0035d454-6a3c-476c-a0a5-75f2ec2b1a4f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5186),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5186),
                            ModifiedBy = "",
                            Name = "Pop Music",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 31,
                            BusinessId = new Guid("8255ad45-8e12-43fb-bb7e-ce388777f5b2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5190),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5191),
                            ModifiedBy = "",
                            Name = "Rap",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 32,
                            BusinessId = new Guid("71dc35e4-964a-4252-ab02-361d6ea90125"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5193),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5193),
                            ModifiedBy = "",
                            Name = "Rock",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 33,
                            BusinessId = new Guid("047dd8c3-115a-48b9-bcba-659d96dc27ce"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5195),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5195),
                            ModifiedBy = "",
                            Name = "Traditional",
                            TagCategoryId = 8
                        },
                        new
                        {
                            EntityId = 34,
                            BusinessId = new Guid("ba810640-33b8-41fb-870e-e70a604f84c0"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5199),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5199),
                            ModifiedBy = "",
                            Name = "# Music Theory",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 35,
                            BusinessId = new Guid("1cdf8e80-f489-406a-a110-2870c2285706"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5203),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5203),
                            ModifiedBy = "",
                            Name = "# Harmony",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 36,
                            BusinessId = new Guid("b00b9db5-84b6-4445-ab6a-9702bf1fed56"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5206),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5206),
                            ModifiedBy = "",
                            Name = "Chords",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 37,
                            BusinessId = new Guid("48b7d6f6-a8a5-4685-a022-26095d8c9458"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5208),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5208),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 38,
                            BusinessId = new Guid("5a3aef05-7016-47ba-a2c4-115b458d4249"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5210),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5211),
                            ModifiedBy = "",
                            Name = "Intervals",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 39,
                            BusinessId = new Guid("00a388ac-2ab1-4d99-9b94-76a5fbf34e0f"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5215),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5215),
                            ModifiedBy = "",
                            Name = "Rythm",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 40,
                            BusinessId = new Guid("887f7eee-eeb6-422b-8f86-5ea7310e5fe5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5230),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5231),
                            ModifiedBy = "",
                            Name = "Scales",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 41,
                            BusinessId = new Guid("8d56ccbe-ade0-4965-a664-e34f6c1b2c3c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5233),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5233),
                            ModifiedBy = "",
                            Name = "Modes",
                            TagCategoryId = 9
                        },
                        new
                        {
                            EntityId = 42,
                            BusinessId = new Guid("e526c79b-664d-4c06-8196-ff16c9299d0c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5235),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5235),
                            ModifiedBy = "",
                            Name = "# Keys",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 43,
                            BusinessId = new Guid("ab6b6e6e-f355-43df-8f2c-f61f13d53e98"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5240),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5240),
                            ModifiedBy = "",
                            Name = "Piano",
                            TagCategoryId = 10
                        },
                        new
                        {
                            EntityId = 44,
                            BusinessId = new Guid("18c8be11-299e-4104-955a-4912b96a97ee"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5242),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5242),
                            ModifiedBy = "",
                            Name = "# Brass",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 45,
                            BusinessId = new Guid("3b2ea996-6b18-4b1f-bc87-a53fda99d9c2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5244),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5245),
                            ModifiedBy = "",
                            Name = "Trombone",
                            TagCategoryId = 11
                        },
                        new
                        {
                            EntityId = 46,
                            BusinessId = new Guid("5f711c56-150b-4be7-a46c-fd03aad4d971"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5247),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5247),
                            ModifiedBy = "",
                            Name = "# Strings",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 47,
                            BusinessId = new Guid("a09f5692-10ae-4edc-bbe6-2458fb34b7ac"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5251),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5251),
                            ModifiedBy = "",
                            Name = "Violin",
                            TagCategoryId = 12
                        },
                        new
                        {
                            EntityId = 48,
                            BusinessId = new Guid("4078fded-496c-4895-8f84-d12834e35192"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5253),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5254),
                            ModifiedBy = "",
                            Name = "# Percussions",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 49,
                            BusinessId = new Guid("f9f76eaa-50b8-4cfb-8c7d-cca11c64467c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5256),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5256),
                            ModifiedBy = "",
                            Name = "Drums",
                            TagCategoryId = 13
                        },
                        new
                        {
                            EntityId = 50,
                            BusinessId = new Guid("9365a44a-fc0d-4534-8681-7dbb321bc7b4"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5258),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5258),
                            ModifiedBy = "",
                            Name = "# Woodwinds",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 51,
                            BusinessId = new Guid("82316ebd-c672-4a1c-8a50-da11da01a5e9"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5263),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5263),
                            ModifiedBy = "",
                            Name = "Clarinet",
                            TagCategoryId = 14
                        },
                        new
                        {
                            EntityId = 52,
                            BusinessId = new Guid("39a5f074-ffb7-4692-8546-cb483ffb2056"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5265),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5266),
                            ModifiedBy = "",
                            Name = "# Audio",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 53,
                            BusinessId = new Guid("fb378050-b91c-4fa0-95da-085e9f27ca9a"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5268),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5268),
                            ModifiedBy = "",
                            Name = "Mixing",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 54,
                            BusinessId = new Guid("4bad19f9-8970-4f3a-9676-2e0a84b715e0"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5270),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5270),
                            ModifiedBy = "",
                            Name = "Mastering",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("d7fb26b1-ba4c-4034-967b-7443a9701546"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5275),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5275),
                            ModifiedBy = "",
                            Name = "Recording",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 56,
                            BusinessId = new Guid("bdc764e3-2706-4733-a2f7-2dbfba991770"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5277),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5277),
                            ModifiedBy = "",
                            Name = "Production",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 57,
                            BusinessId = new Guid("1ec7203b-bcf9-434b-9eaf-cfa624bb655e"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5279),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5280),
                            ModifiedBy = "",
                            Name = "Sound Design",
                            TagCategoryId = 15
                        },
                        new
                        {
                            EntityId = 58,
                            BusinessId = new Guid("d0230ec2-808b-4c7b-bdd5-e563a5983629"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5282),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5282),
                            ModifiedBy = "",
                            Name = "Memes",
                            TagCategoryId = 16
                        },
                        new
                        {
                            EntityId = 59,
                            BusinessId = new Guid("0f35d40f-ab7a-4057-8366-de58969882b6"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5286),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(5286),
                            ModifiedBy = "",
                            Name = "# Guitar",
                            TagCategoryId = 17
                        });
                });

            modelBuilder.Entity("MB.Domain.TagCategoryAggregate.TagCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TagCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("912f56f4-8de0-4456-940d-075fc9e21b18"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(6537),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(6539),
                            ModifiedBy = "",
                            Name = "#"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("0dce8311-60b8-4ab9-9530-25c7562fc7ac"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(6961),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(6962),
                            ModifiedBy = "",
                            Name = "# File"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("aef53e3f-b7b6-4755-afdb-01d3325a1d27"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(6966),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(6966),
                            ModifiedBy = "",
                            Name = "# File ext. | Doc."
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("b05eea3a-741d-40fb-aa0d-6e23b5a770e0"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7015),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7015),
                            ModifiedBy = "",
                            Name = "# File ext. | Image"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("41d8b6b8-dfec-45c2-87f9-4304c1b3a559"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7017),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7018),
                            ModifiedBy = "",
                            Name = "# File ext. | Video"
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("46914bde-5764-4092-ac3b-146686024356"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7025),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7025),
                            ModifiedBy = "",
                            Name = "# File Format"
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("43cc1813-d56c-49b5-b281-b9411caf66fd"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7067),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7067),
                            ModifiedBy = "",
                            Name = "# File Render"
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("1b76c7f8-8de3-4917-96b9-963039b5c28c"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7073),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7073),
                            ModifiedBy = "",
                            Name = "Music Genre"
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("b31a816d-4867-4ae8-8f6d-c7537f04951a"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7075),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7076),
                            ModifiedBy = "",
                            Name = "Music Theory"
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("9d715878-73f3-4325-8f4c-8f75b1e47061"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7080),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7080),
                            ModifiedBy = "",
                            Name = "Keys"
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("8d4d514d-07a1-4b3d-98b7-a630f607bcb7"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7082),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7083),
                            ModifiedBy = "",
                            Name = "Brass"
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("a38ccfbb-ff4c-4317-ba0f-de5e94caef91"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7088),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7088),
                            ModifiedBy = "",
                            Name = "Strings"
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("e009c95c-4357-4f4b-ad61-f8f4e5b20502"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7091),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7091),
                            ModifiedBy = "",
                            Name = "Percussions"
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("7697938f-4a36-4d5a-ac1d-5d8e2ed2d3d5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7093),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7093),
                            ModifiedBy = "",
                            Name = "Woodwinds"
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("ce185af8-fb78-4730-87c4-947a644d2c83"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7095),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7096),
                            ModifiedBy = "",
                            Name = "Audio"
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("0fa7379c-8c5f-473e-ba57-235b0e14256b"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7101),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7101),
                            ModifiedBy = "",
                            Name = "Fun"
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("f2dc24f8-27ef-41c4-aee5-15b37c2b0296"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7104),
                            CreatedBy = "",
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(7104),
                            ModifiedBy = "",
                            Name = "Guitar"
                        });
                });

            modelBuilder.Entity("MB.Domain.TaskAggregate.Task", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("04/23/2025 23:42:48");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("EntityId");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("e9076655-fb11-46ab-960c-e64e67c1b74a"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(9773),
                            CreatedBy = "",
                            DateEnd = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(9765),
                            DateStart = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(9764),
                            Description = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(9773),
                            ModifiedBy = "",
                            Name = "Check Mails",
                            TaskCategoryId = 5
                        });
                });

            modelBuilder.Entity("MB.Domain.TaskCategoryAggregate.TaskCategory", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("9b5f036b-4edb-4a83-a77b-3856d16b2087"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8330),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8332),
                            ModifiedBy = "",
                            Name = "PAD Mobile"
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("87fd8459-d3e6-42e7-bdaa-572bdd76ac90"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8714),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8715),
                            ModifiedBy = "",
                            Name = "PAD Cave"
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("35d2ac92-6b9c-44e7-9281-5668d2f2eda5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8724),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8724),
                            ModifiedBy = "",
                            Name = "PAD Kids"
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("c307509d-5df4-46ab-b2e6-83ed4fca21f1"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8727),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8727),
                            ModifiedBy = "",
                            Name = "Shopping"
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("1ab8a29d-a952-4d2a-94de-9eff21149494"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8729),
                            CreatedBy = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 697, DateTimeKind.Utc).AddTicks(8730),
                            ModifiedBy = "",
                            Name = "Work"
                        });
                });

            modelBuilder.Entity("MB.Domain.UserAggregate.User", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EntityId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EntityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Birthdate = new DateTime(1982, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("a9b6e3dd-20b9-4717-a572-38c0a0fa8fcb"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 705, DateTimeKind.Utc).AddTicks(7487),
                            CreatedBy = "",
                            Email = "tonyvan@live.fr",
                            Experience = 0,
                            FirstName = "Tony",
                            LastName = "Van Langenhove",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 705, DateTimeKind.Utc).AddTicks(7489),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 125, 251, 140, 250, 138, 148, 84, 155, 208, 35, 4, 152, 83, 208, 56, 21, 109, 72, 157, 72, 72, 111, 247, 223, 61, 197, 208, 163, 81, 45, 236, 210, 0, 170, 152, 111, 58, 47, 176, 104, 117, 18, 18, 219, 105, 146, 197, 18, 15, 233, 9, 6, 190, 33, 250, 173, 170, 181, 219, 55, 27, 19, 251, 171 },
                            PasswordSalt = new byte[] { 161, 45, 163, 170, 167, 212, 14, 52, 135, 141, 133, 64, 21, 243, 99, 152, 95, 91, 49, 192, 126, 136, 223, 8, 55, 140, 133, 80, 83, 12, 9, 228, 100, 48, 145, 237, 71, 38, 178, 194, 203, 37, 254, 105, 73, 230, 85, 229, 212, 131, 91, 63, 136, 34, 145, 168, 100, 176, 177, 187, 105, 247, 245, 141, 167, 221, 239, 254, 2, 166, 1, 134, 209, 10, 77, 181, 119, 181, 42, 247, 231, 36, 103, 86, 64, 197, 139, 63, 126, 231, 162, 246, 196, 71, 248, 176, 68, 240, 235, 19, 179, 53, 84, 97, 251, 110, 166, 21, 200, 66, 75, 218, 227, 110, 45, 17, 254, 25, 28, 150, 156, 32, 81, 129, 231, 78, 140, 105 },
                            Role = 2,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 2,
                            Birthdate = new DateTime(1975, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("0e295df3-41dc-4cf2-8618-236ff52bcc3b"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 706, DateTimeKind.Utc).AddTicks(768),
                            CreatedBy = "",
                            Email = "floppy@gmail.com",
                            Experience = 0,
                            FirstName = "Floppy",
                            LastName = "Disk",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 706, DateTimeKind.Utc).AddTicks(769),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 57, 61, 53, 79, 98, 5, 188, 228, 237, 242, 115, 103, 250, 112, 189, 86, 15, 127, 251, 8, 230, 94, 1, 127, 30, 237, 23, 84, 204, 26, 139, 37, 115, 40, 4, 82, 182, 63, 5, 6, 129, 244, 192, 34, 21, 124, 138, 116, 149, 106, 40, 77, 122, 68, 59, 188, 244, 233, 37, 251, 169, 125, 255, 166 },
                            PasswordSalt = new byte[] { 124, 168, 35, 126, 197, 91, 108, 45, 24, 160, 248, 10, 27, 198, 66, 58, 23, 181, 76, 135, 203, 98, 87, 49, 30, 167, 111, 70, 90, 131, 171, 129, 255, 97, 251, 102, 157, 16, 222, 110, 109, 250, 191, 41, 230, 227, 35, 229, 38, 87, 125, 185, 103, 199, 59, 165, 171, 220, 63, 254, 13, 251, 98, 226, 187, 111, 49, 62, 253, 141, 151, 198, 12, 222, 227, 21, 192, 93, 222, 51, 167, 17, 83, 102, 118, 135, 180, 57, 110, 94, 85, 168, 158, 212, 249, 114, 35, 159, 156, 96, 142, 99, 218, 64, 129, 241, 178, 203, 188, 97, 148, 26, 56, 4, 214, 108, 218, 158, 119, 50, 148, 233, 12, 38, 250, 59, 48, 197 },
                            Role = 1,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 3,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("21b4af0a-028d-4eb4-8c8c-2120d369b6d0"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 706, DateTimeKind.Utc).AddTicks(875),
                            CreatedBy = "",
                            Email = "vincent.megag@gmail.com",
                            Experience = 0,
                            FirstName = "Vincent",
                            LastName = "Megag",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 706, DateTimeKind.Utc).AddTicks(876),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 165, 184, 234, 143, 5, 209, 179, 162, 224, 181, 222, 12, 200, 85, 232, 172, 216, 212, 82, 247, 165, 230, 249, 86, 142, 131, 34, 30, 197, 213, 45, 83, 101, 190, 40, 251, 1, 189, 101, 54, 2, 212, 230, 112, 157, 100, 145, 122, 224, 55, 45, 186, 54, 246, 100, 95, 119, 106, 135, 246, 74, 29, 49, 162 },
                            PasswordSalt = new byte[] { 48, 152, 49, 13, 244, 115, 137, 235, 38, 165, 99, 230, 229, 186, 144, 198, 122, 238, 137, 112, 59, 98, 134, 121, 135, 131, 236, 108, 82, 24, 35, 201, 39, 186, 94, 193, 158, 185, 105, 158, 215, 110, 102, 159, 202, 179, 211, 189, 227, 29, 142, 165, 96, 64, 99, 223, 12, 123, 237, 60, 244, 85, 41, 9, 58, 209, 85, 139, 174, 113, 138, 55, 180, 35, 95, 23, 167, 18, 221, 138, 24, 201, 234, 114, 107, 70, 123, 26, 137, 170, 187, 194, 234, 113, 53, 193, 51, 116, 210, 172, 122, 202, 72, 165, 83, 60, 204, 24, 202, 136, 86, 189, 190, 115, 132, 145, 180, 118, 172, 119, 247, 56, 44, 193, 225, 61, 143, 188 },
                            Role = 2,
                            UserName = ""
                        },
                        new
                        {
                            EntityId = 4,
                            Birthdate = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BusinessId = new Guid("09f824ef-e470-489b-a255-5c119d56ed15"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 706, DateTimeKind.Utc).AddTicks(936),
                            CreatedBy = "",
                            Email = "test@test.com",
                            Experience = 0,
                            FirstName = "Admin",
                            LastName = "...",
                            Level = 1,
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 706, DateTimeKind.Utc).AddTicks(936),
                            ModifiedBy = "",
                            PasswordHash = new byte[] { 142, 102, 84, 137, 62, 128, 205, 225, 201, 130, 184, 180, 227, 30, 237, 149, 177, 70, 228, 23, 92, 146, 34, 246, 70, 134, 117, 240, 199, 6, 238, 39, 219, 150, 53, 23, 59, 179, 236, 240, 127, 169, 123, 167, 171, 39, 255, 132, 74, 118, 78, 203, 85, 158, 38, 131, 239, 95, 252, 120, 215, 172, 178, 234 },
                            PasswordSalt = new byte[] { 143, 161, 22, 234, 159, 100, 40, 34, 225, 3, 214, 52, 98, 160, 222, 193, 128, 111, 50, 216, 85, 157, 251, 124, 242, 229, 251, 246, 237, 232, 11, 251, 238, 0, 137, 246, 243, 181, 113, 78, 54, 53, 183, 208, 7, 120, 207, 53, 81, 159, 95, 249, 184, 7, 229, 237, 145, 218, 2, 246, 79, 83, 23, 98, 71, 102, 159, 167, 252, 65, 76, 178, 134, 119, 54, 149, 226, 64, 153, 23, 89, 135, 136, 171, 7, 54, 191, 74, 106, 112, 29, 129, 87, 113, 118, 173, 98, 12, 136, 76, 37, 181, 168, 177, 204, 195, 88, 146, 119, 223, 187, 161, 92, 49, 68, 137, 117, 173, 135, 66, 96, 181, 16, 98, 213, 208, 6, 171 },
                            Role = 2,
                            UserName = ""
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.AudioSoundCloud", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<string>("EmbedUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmbedUrl");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ThumbnailUrl");

                    b.Property<string>("Url")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator().HasValue(5);
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Document", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Size")
                                .HasColumnName("Document_Size");
                        });

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Image", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(2039),
                            CreatedBy = "",
                            Description = "In Chords Chart",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(2041),
                            ModifiedBy = "",
                            Name = " Major Key Notes",
                            Score = 0,
                            Type = 1,
                            Height = 510,
                            Size = 61206,
                            Width = 359
                        },
                        new
                        {
                            EntityId = 2,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4343),
                            CreatedBy = "",
                            Description = "7 Notes, 7 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4345),
                            ModifiedBy = "",
                            Name = "Major Diatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 940,
                            Size = 136462,
                            Width = 700
                        },
                        new
                        {
                            EntityId = 3,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccccc"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4353),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4353),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1361,
                            Size = 562138,
                            Width = 868
                        },
                        new
                        {
                            EntityId = 4,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-dddddddddddd"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4356),
                            CreatedBy = "",
                            Description = "5 Notes, 5 Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4357),
                            ModifiedBy = "",
                            Name = "Pentatonic Scales",
                            Score = 0,
                            Type = 1,
                            Height = 524,
                            Size = 74358,
                            Width = 250
                        },
                        new
                        {
                            EntityId = 5,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4400),
                            CreatedBy = "",
                            Description = "Color Measure",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4400),
                            ModifiedBy = "",
                            Name = "Intervals",
                            Score = 0,
                            Type = 1,
                            Height = 844,
                            Size = 56324,
                            Width = 556
                        },
                        new
                        {
                            EntityId = 6,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb1"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4409),
                            CreatedBy = "",
                            Description = "Absolute Basics",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4409),
                            ModifiedBy = "",
                            Name = "Time Measure",
                            Score = 0,
                            Type = 1,
                            Height = 255,
                            Size = 8992,
                            Width = 400
                        },
                        new
                        {
                            EntityId = 7,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc1"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4412),
                            CreatedBy = "",
                            Description = "Natural Order",
                            Extension = "webp",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4413),
                            ModifiedBy = "",
                            Name = "Harmonics",
                            Score = 0,
                            Type = 1,
                            Height = 226,
                            Size = 30964,
                            Width = 600
                        },
                        new
                        {
                            EntityId = 8,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd1"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4416),
                            CreatedBy = "",
                            Description = "Communication is important",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4416),
                            ModifiedBy = "",
                            Name = "Guitar Vocabulary",
                            Score = 0,
                            Type = 1,
                            Height = 705,
                            Size = 99994,
                            Width = 512
                        },
                        new
                        {
                            EntityId = 9,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4419),
                            CreatedBy = "",
                            Description = "Diatonic Chords in C Major",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4420),
                            ModifiedBy = "",
                            Name = "Piano Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1317,
                            Size = 204898,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 10,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4423),
                            CreatedBy = "",
                            Description = "Mmm... You can tell, right ?",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4424),
                            ModifiedBy = "",
                            Name = "Piano Scales",
                            Score = 0,
                            Type = 1,
                            Height = 900,
                            Size = 91482,
                            Width = 695
                        },
                        new
                        {
                            EntityId = 11,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4426),
                            CreatedBy = "",
                            Description = "Overview",
                            Extension = "gif",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4426),
                            ModifiedBy = "",
                            Name = "Tessitures",
                            Score = 0,
                            Type = 1,
                            Height = 709,
                            Size = 62391,
                            Width = 1026
                        },
                        new
                        {
                            EntityId = 12,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd2"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4430),
                            CreatedBy = "",
                            Description = "Circle of Life",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4430),
                            ModifiedBy = "",
                            Name = "Chord Wheel",
                            Score = 0,
                            Type = 1,
                            Height = 950,
                            Size = 663017,
                            Width = 950
                        },
                        new
                        {
                            EntityId = 13,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4435),
                            CreatedBy = "",
                            Description = " ... ",
                            Extension = "jpeg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4435),
                            ModifiedBy = "",
                            Name = "The Mix is Almost Perfect",
                            Score = 0,
                            Type = 1,
                            Height = 480,
                            Size = 45254,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 14,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb3"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4438),
                            CreatedBy = "",
                            Description = "Basic Chords / Different Keys",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4438),
                            ModifiedBy = "",
                            Name = "Guitar Progressions",
                            Score = 0,
                            Type = 1,
                            Height = 690,
                            Size = 167969,
                            Width = 552
                        },
                        new
                        {
                            EntityId = 15,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc3"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4441),
                            CreatedBy = "",
                            Description = "Les 3, c'est NON !",
                            Extension = "jpeg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4442),
                            ModifiedBy = "",
                            Name = "Vous le voulez comment votre projet ?",
                            Score = 0,
                            Type = 1,
                            Height = 960,
                            Size = 205144,
                            Width = 720
                        },
                        new
                        {
                            EntityId = 16,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd3"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4445),
                            CreatedBy = "",
                            Description = "1, 2, 3, 4, 5",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4445),
                            ModifiedBy = "",
                            Name = "Fingers Numerotation",
                            Score = 0,
                            Type = 1,
                            Height = 233,
                            Size = 24030,
                            Width = 350
                        },
                        new
                        {
                            EntityId = 17,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4465),
                            CreatedBy = "",
                            Description = "My actual Keyboard",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4466),
                            ModifiedBy = "",
                            Name = "Roland FP-30",
                            Score = 0,
                            Type = 1,
                            Height = 368,
                            Size = 87596,
                            Width = 1680
                        },
                        new
                        {
                            EntityId = 18,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb4"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4471),
                            CreatedBy = "",
                            Description = "How to build a chord",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4471),
                            ModifiedBy = "",
                            Name = "Chord Formula's",
                            Score = 0,
                            Type = 1,
                            Height = 1109,
                            Size = 221030,
                            Width = 1080
                        },
                        new
                        {
                            EntityId = 19,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc4"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4474),
                            CreatedBy = "",
                            Description = "Valeurs de Temps",
                            Extension = "webp",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4474),
                            ModifiedBy = "",
                            Name = "Time Values",
                            Score = 0,
                            Type = 1,
                            Height = 530,
                            Size = 21922,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 20,
                            BusinessId = new Guid("dddddddd-dddd-dddd-dddd-ddddddddddd4"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4478),
                            CreatedBy = "",
                            Description = "Fundamental Positions",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4478),
                            ModifiedBy = "",
                            Name = "Guitar Chords ( B )",
                            Score = 0,
                            Type = 1,
                            Height = 909,
                            Size = 57447,
                            Width = 640
                        },
                        new
                        {
                            EntityId = 21,
                            BusinessId = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4483),
                            CreatedBy = "",
                            Description = "Primary Modes",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4483),
                            ModifiedBy = "",
                            Name = "Modes starting in C",
                            Score = 0,
                            Type = 1,
                            Height = 1552,
                            Size = 111187,
                            Width = 1199
                        },
                        new
                        {
                            EntityId = 22,
                            BusinessId = new Guid("bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbb5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4486),
                            CreatedBy = "",
                            Description = "Good luck finding the good one ...",
                            Extension = "jpg",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4486),
                            ModifiedBy = "",
                            Name = "Guitar Chords",
                            Score = 0,
                            Type = 1,
                            Height = 1913,
                            Size = 633229,
                            Width = 1200
                        },
                        new
                        {
                            EntityId = 23,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-ccccccccccc5"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4489),
                            CreatedBy = "",
                            Description = "Une approche parmis tant d'autres",
                            Extension = "png",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(4489),
                            ModifiedBy = "",
                            Name = "Intervalles",
                            Score = 0,
                            Type = 1,
                            Height = 971,
                            Size = 69313,
                            Width = 692
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Video", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.ToTable("Moods", t =>
                        {
                            t.Property("Height")
                                .HasColumnName("Video_Height");

                            t.Property("Size")
                                .HasColumnName("Video_Size");

                            t.Property("Width")
                                .HasColumnName("Video_Width");
                        });

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            EntityId = 55,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc55"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(5480),
                            CreatedBy = "",
                            Description = " Bendy & The Ink Machine ",
                            Extension = "mp4",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(5482),
                            ModifiedBy = "",
                            Name = "BATIM - Build our Machine",
                            Score = 0,
                            Type = 2,
                            Duration = 64,
                            Height = 360,
                            Size = 5091239,
                            Width = 640
                        });
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.VideoYouTube", b =>
                {
                    b.HasBaseType("MB.Domain.MoodAggregate.Mood");

                    b.Property<string>("Url")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Url");

                    b.ToTable("Moods", (string)null);

                    b.HasDiscriminator().HasValue(4);

                    b.HasData(
                        new
                        {
                            EntityId = 85,
                            BusinessId = new Guid("cccccccc-cccc-cccc-cccc-cccccccccc85"),
                            Created = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(7922),
                            CreatedBy = "",
                            Description = "...",
                            Extension = "",
                            Modified = new DateTime(2025, 4, 23, 21, 42, 48, 696, DateTimeKind.Utc).AddTicks(7924),
                            ModifiedBy = "",
                            Name = "Mario Bros 3 Cover",
                            Score = 0,
                            Type = 4,
                            Url = "WWUxrTdjqg0"
                        });
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationArtistStyle", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.StyleAggregate.Style", "Style")
                        .WithMany("ArtistStyles")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkArtist", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("LinkArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkArtists")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Link");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.RelationLinkModel", b =>
                {
                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkModels")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("LinkModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationBookFranchise", b =>
                {
                    b.HasOne("MB.Domain.BookAggregate.Book", "Book")
                        .WithMany("BookFranchise")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("BookFranchise")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.RelationFranchiseMedia", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MediumAggregate.Media", "Media")
                        .WithMany("FranchiseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.RelationLinkCategory", b =>
                {
                    b.HasOne("MB.Domain.LinkCategoryAggregate.LinkCategory", "LinkCategory")
                        .WithMany("RLinkCategories")
                        .HasForeignKey("LinkCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.LinkAggregate.Link", "Link")
                        .WithMany("LinkCategories")
                        .HasForeignKey("LinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Link");

                    b.Navigation("LinkCategory");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationBookModel", b =>
                {
                    b.HasOne("MB.Domain.BookAggregate.Book", "Book")
                        .WithMany("BookModel")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("BookModel")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.RelationFranchiseModel", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("FranchiseModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodArtist", b =>
                {
                    b.HasOne("MB.Domain.ArtistAggregate.Artist", "Artist")
                        .WithMany("MoodArtists")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodArtists")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodFranchise", b =>
                {
                    b.HasOne("MB.Domain.FranchiseAggregate.Franchise", "Franchise")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodFranchises")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodModel", b =>
                {
                    b.HasOne("MB.Domain.ModelAggregate.Model", "Model")
                        .WithMany("MoodModels")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodModels")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Mood");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.RelationMoodTag", b =>
                {
                    b.HasOne("MB.Domain.MoodAggregate.Mood", "Mood")
                        .WithMany("MoodTags")
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MB.Domain.TagAggregate.Tag", "Tag")
                        .WithMany("MoodTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mood");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.HasOne("MB.Domain.TagCategoryAggregate.TagCategory", "TagCategory")
                        .WithMany("Tags")
                        .HasForeignKey("TagCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagCategory");
                });

            modelBuilder.Entity("MB.Domain.TaskAggregate.Task", b =>
                {
                    b.HasOne("MB.Domain.TaskCategoryAggregate.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("MB.Domain.ArtistAggregate.Artist", b =>
                {
                    b.Navigation("ArtistStyles");

                    b.Navigation("LinkArtists");

                    b.Navigation("MoodArtists");
                });

            modelBuilder.Entity("MB.Domain.BookAggregate.Book", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("BookModel");
                });

            modelBuilder.Entity("MB.Domain.FranchiseAggregate.Franchise", b =>
                {
                    b.Navigation("BookFranchise");

                    b.Navigation("FranchiseMedias");

                    b.Navigation("FranchiseModels");

                    b.Navigation("MoodFranchises");
                });

            modelBuilder.Entity("MB.Domain.LinkAggregate.Link", b =>
                {
                    b.Navigation("LinkArtists");

                    b.Navigation("LinkCategories");

                    b.Navigation("LinkModels");
                });

            modelBuilder.Entity("MB.Domain.LinkCategoryAggregate.LinkCategory", b =>
                {
                    b.Navigation("RLinkCategories");
                });

            modelBuilder.Entity("MB.Domain.MediumAggregate.Media", b =>
                {
                    b.Navigation("FranchiseMedias");
                });

            modelBuilder.Entity("MB.Domain.ModelAggregate.Model", b =>
                {
                    b.Navigation("BookModel");

                    b.Navigation("FranchiseModels");

                    b.Navigation("LinkModels");

                    b.Navigation("MoodModels");
                });

            modelBuilder.Entity("MB.Domain.MoodAggregate.Mood", b =>
                {
                    b.Navigation("MoodArtists");

                    b.Navigation("MoodFranchises");

                    b.Navigation("MoodModels");

                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.StyleAggregate.Style", b =>
                {
                    b.Navigation("ArtistStyles");
                });

            modelBuilder.Entity("MB.Domain.TagAggregate.Tag", b =>
                {
                    b.Navigation("MoodTags");
                });

            modelBuilder.Entity("MB.Domain.TagCategoryAggregate.TagCategory", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MB.Domain.TaskCategoryAggregate.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
